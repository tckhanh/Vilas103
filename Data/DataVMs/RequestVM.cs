//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.DataVMs
{
    using Data.DataModels;
    using Data.Extensions;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class RequestVM : AuditableVM
    {
        public int Id { get; set; }

        [MaxLength(64, ErrorMessage = "Số đăng ký đo kiểm không quá 64 ký tự")]
        [Display(Name = "Số đăng ký")]
        [Unique(ErrorMessage = "Số đăng ký đo kiểm đã tồn tại rồi !!", TargetModelType = typeof(Request), TargetPropertyName = "RegisteredNo")]
        public string RegisteredNo { get; set; }

        [MaxLength(64, ErrorMessage = "Số tiếp nhận phiếu đăng ký đo kiểm không quá 64 ký tự")]
        [Display(Name = "Số tiếp nhận Phiếu ĐKĐK ")]
        [Unique(ErrorMessage = "Số tiếp nhận Phiếu đăng ký đo kiểm đã tồn tại rồi !!", TargetModelType = typeof(Request), TargetPropertyName = "ReceivedNo")]
        public string ReceivedNo { get; set; }

        [Display(Name = "Số Hợp đồng")]
        public string ContractNo { get; set; }

        [Display(Name = "Tên Công ty")]
        [Required(ErrorMessage = "Yêu cầu nhập Tên Công ty")]
        public string CompanyId { get; set; }

        [Display(Name = "Loại sản phẩm")]
        [Required(ErrorMessage = "Yêu cầu nhập Loại sản phẩm")]
        public string EquTypeId { get; set; }

        [Display(Name = "Nhóm sản phẩm")]
        [Required(ErrorMessage = "Yêu cầu nhập Nhóm sản phẩm")]
        public string EquGroupId { get; set; }

        [Display(Name = "Tên sản phẩm")]
        [Required(ErrorMessage = "Yêu cầu nhập Tên sản phẩm")]
        public string EquName { get; set; }

        [Display(Name = "Tên Hãng SX")]
        [Required(ErrorMessage = "Yêu cầu nhập Tên Hãng SX")]
        public string Manufacturer { get; set; }

        [Display(Name = "Ký hiệu")]
        [Required(ErrorMessage = "Yêu cầu nhập Ký hiệu")]
        public string Model { get; set; }

        [Display(Name = "Mã số SP")]
        [Required(ErrorMessage = "Yêu cầu nhập Mã số SP")]
        public string Serial_Imei { get; set; }

        [Display(Name = "Nơi SX")]
        [Required(ErrorMessage = "Yêu cầu nhập Nơi SX")]
        public string MadeIn { get; set; }

        [Display(Name = "Tiêu chuẩn đo")]
        [Required(ErrorMessage = "Yêu cầu nhập Tiêu chuẩn đo")]
        public string Standards { get; set; }

        [Display(Name = "Phụ kiện kèm theo")]
        public string Accessories { get; set; }

        [Display(Name = "Tình trạng niêm phong mẫu")]
        public string SealInfo { get; set; }

        [Display(Name = "Số mẫu nộp")]
        public int HoldEquipNo { get; set; }

        [Display(Name = "Ghi chú")]
        public string Note { get; set; }

        [Display(Name = "Người đăng ký")]
        public string RegistedBy { get; set; }

        [Display(Name = "Người tiếp nhận")]
        public string ReceivedBy { get; set; }

        [Display(Name = "Người phân công")]
        public string AssignedBy { get; set; }

        [Display(Name = "Người đo kiểm")]
        public string TestedBy { get; set; }

        [Display(Name = "Người thẩm định")]
        public string VerifiedyBy { get; set; }

        [Display(Name = "Người phê duyệt")]
        public string ApprovedBy { get; set; }

        [Display(Name = "Người trả mẫu")]
        public string ReturnedBy { get; set; }

        [Display(Name = "Trạng thái xử lý")]
        public string StatusId { get; set; }

        [Display(Name = "Ngày đăng ký")]
        public Nullable<System.DateTime> RegistedDate { get; set; }

        [Display(Name = "Ngày tiếp nhận")]
        public Nullable<System.DateTime> ReceivedDate { get; set; }

        [Display(Name = "Ngày hẹn (dự kiến)")]
        public Nullable<System.DateTime> AppointmentDate { get; set; }

        [Display(Name = "Ngày phân công")]
        public Nullable<System.DateTime> AssignedDate { get; set; }

        [Display(Name = "Ngày tiếp nhận đo")]
        public Nullable<System.DateTime> ConfirmedDate { get; set; }

        [Display(Name = "Ngày hoàn tất đo")]
        public Nullable<System.DateTime> TestedDate { get; set; }

        [Display(Name = "Ngày gửi mẫu đến PTNLK")]
        public Nullable<System.DateTime> SentToLinkLabDate { get; set; }

        [Display(Name = "Ngày nhận mẫu từ PTNLK")]
        public Nullable<System.DateTime> ReceivedFromLinkLabDate { get; set; }

        [Display(Name = "Ngày thẩm định")]
        public Nullable<System.DateTime> VerifiedDate { get; set; }

        [Display(Name = "Ngày phê duyệt")]
        public Nullable<System.DateTime> ApprovedDate { get; set; }

        [Display(Name = "Ngày đóng dấu")]
        public Nullable<System.DateTime> SealedDate { get; set; }

        [Display(Name = "Ngày trả mẫu")]
        public Nullable<System.DateTime> ReturnedDate { get; set; }

        [Display(Name = "Số KQĐK")]
        public int TestReportId { get; set; }

        [Display(Name = "Số Thông báo phí")]
        public string FeeId { get; set; }

        [Display(Name = "Phí do kiểm")]
        public long Price { get; set; }

        public virtual CompanyVM Company { get; set; }
        public virtual EquTypeVM EquType { get; set; }
        public virtual EquGroupVM EquGroup { get; set; }
        public virtual StatusVM ReqStatus { get; set; }
        //public virtual TestReport TestReport { get; set; }
        //public virtual Fee Fee { get; set; }
        public virtual ICollection<Opinion> Opinions { get; set; }
    }
}
