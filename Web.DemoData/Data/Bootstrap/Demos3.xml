<?xml version="1.0" encoding="utf-8" ?>
<Demos>
  <GettingStarted SeoTitle="Getting Started">
    <Section Title="Introduction">
      <Description>
        <![CDATA[
          <p>This tutorial describes how to integrate DevExpress Bootstrap Controls into a web application and gives a few tips on building adaptive page layouts and customizing the controls’ appearance and functionality.</p>
        ]]>
      </Description>
    </Section>  
    <Section Title="First Steps">
      <Description>
        <![CDATA[
          <p>Use the steps below to integrate DevExpress Bootstrap controls into your application:</p>
          <ol>
            <li><p>Download and install the DevExpress .NET Components suite.<br />
              <a href="https://www.devexpress.com/Home/Try">https://www.devexpress.com/Home/Try</a>
            </p></li>
            <li>
              <p>Configure your application to use the bootstrap.css and DevExpress Bootstrap Control libraries. The process is different depending on whether you are modifying an existing project or creating a new one.</p>
              
              <p><b>Modifying an existing project:</b></p>
              <ul>
                <li>
                  <p>Install Bootstrap manually or using one of the available package managers and add the bootstrap.css link to a page (a master page or layout.cshtml).</p> 
<pre><code class="hljs html">
...
<link href="Content/bootstrap.min.css" rel="stylesheet" />
...
</code></pre>    
                </li>
                <li>
                  <p>Add the required META declarations to the page’s HEAD section.</p>
<pre><code class="hljs html">
...
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
...
</code></pre>   
                </li>
                <li>
                  <p>Drop one of the Bootstrap controls from the Visual Studio toolbox onto a page. This will automatically add all configuration sections and assembly references required by DevExpress Bootstrap controls to the application’s web.config file.<br />
                    <img src="images/getting-started/drop-control.gif" alt="Drop DevExpress Bootstrap Control" />  
                  </p>
                  <p>You can also add the required references using the DevExpress Project Wizard, which you can run from the Visual Studio main menu (DevExpress -> ASP.NET Controls -> Run Wizard to Update Project).
                    <img src="images/getting-started/update-project.png" alt="Update Project" />  
                  </p>
                </li>                           
              </ul>
              <p><b>Creating a new project:</b></p>
              <ul>
                <li>
                  <p>Start a new project in Visual Studio (File -> New -> Project/WebSite).</p>
                </li>
                <li>
                  <p>In the invoked wizard, select the DevExpress Template Gallery.</p>
                </li>
                <li>
                  <p>Select Bootstrap Web Site (Application) and click Run Wizard.</p>
                </li>
                <li>
                  <p>In the DevExpress ASP.NET Project wizard, specify the required project settings and click Create Project.</p>
                </li>
              </ul>
              <img src="images/getting-started/new-project.gif" alt="New Project" />  
              <p>The wizard automatically generates a project based on a built-in template. The created project includes all settings Bootstrap controls require.</p>
            </li>            
          </ol>      
        ]]>
      </Description>
    </Section>
    <Section Title="Start Using Bootstrap Charts">
      <Description>
        <![CDATA[
          <p>All chart controls included in the suite require the DevExtreme JavaScript libraries and CSS files. You can enable auto-embedding these resources in the <code>\devExpress\resources</code> web.config section as shown below.</p>
<pre><code class="hljs xml">
...
<devExpress>
  <resources>
    <add type="DevExtreme"/>
    <add type="ThirdParty"/>
  </resources>
</devExpress>
...
</code></pre>
          <p>Alternatively, you can add the required references manually:</p> 
          <pre><code class="hljs js">
<script src="https://code.jquery.com/jquery-migrate-3.0.1.min.js" integrity="sha256-F0O1TmEa4I8N24nY0bya59eP6svWcshqX1uzwaWC4F4="crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.5.0/cldr.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.5.0/cldr/event.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/cldrjs/0.5.0/cldr/supplemental.js"></script>
    
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.3.0/globalize.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.3.0/globalize/message.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.3.0/globalize/number.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.3.0/globalize/currency.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/globalize/1.3.0/globalize/date.js"></script>

<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.2.3/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/17.2.3/css/dx.light.css" />
<script type="text/javascript" src="https://cdn3.devexpress.com/jslib/17.2.3/js/dx.all.js"></script>
</code></pre>
        ]]>
      </Description>
    </Section>
    <Section Title="Customize a Control's Appearance">
      <Description>
        <![CDATA[
          <p>Each control in the suite has a CssClasses property providing access to settings that customize styles applied to the control and its visual elements. 
          The markup sample below demonstrates how to assign a CSS class to a Bootstrap Button.</p>
          <p><b>Page Markup:</b></p>
<pre><code class="hljs xml">
...
<dx:BootstrapButton runat="server" GroupName="s" AutoPostBack="false" Text="s">
  <CssClasses Control="my-button" />
</dx:BootstrapButton>
...
</code></pre>
          <p><b>Style Declaration:</b></p>    
<pre><code class="hljs css">
.my-button {
    border-radius: 0;
}
</code></pre>
          <img src="images/getting-started/custom-appearance.png" alt="Button Custom Appearance" />          
        ]]>
      </Description>
    </Section>
    <Section Title="Create Adaptive Layouts">
      <Description>
        <![CDATA[
          <p>The DevExpress Bootstrap Controls seamlessly integrate with layout features provided by the Bootstrap framework. To construct adaptive web applications, make sure to use page layouts based on the Bootstrap grid system <a href="http://getbootstrap.com/docs/4.0/layout/grid/">http://getbootstrap.com/docs/4.0/layout/grid/</a>.</p>    
<pre><code class="hljs html">
<div class="container">
  <div class="row">
    <div class="col">
      LEFT NAVIGATION
    </div>
    <div class="col-sm-8">
      MAIN CONTENT
    </div>
  </div>
</div>  
</code></pre>   
        ]]>
      </Description>
    </Section>
    <Section Title="Use Bootstrap Themes">
      <Description>
        <![CDATA[
          <p>DevExpress Bootstrap controls are natively rendered using Bootstrap framework components. No configuration is required to apply an external Bootstrap theme.</p>    
          <p>In a page markup, replace the default bootstrap.css file link with one to the themed bootstrap.css file (which is supplied with a bootstrap theme). The custom theme is then applied to all the controls on the page.</p>    
        ]]>
      </Description>
    </Section>
    <Section Title="Change Icons">
      <Description>
        <![CDATA[
          <p>DevExpress Bootstrap controls use icon fonts to display icons within their visual elements. 
          The default Embedded icon set can be replaced with FontAwesome or Glyphicons Halflings set (the latter included by default into the Bootstrap 3 package). 
          You can also replace each individual icon with a custom one in CSS.</p>  
          <p><strong>Embedded:</strong><br />
            <img src="images/getting-started/icons-embedded.png" alt="Embedded Icons" />
          </p>
          <p><strong>Glyphicons:</strong><br />
            <img src="images/getting-started/icons-glyphicons.png" alt="Glyphicons Icons" />
          </p>
          <p><strong>FontAwesome:</strong><br />
            <img src="images/getting-started/icons-fontawesome.png" alt="Font Awesome Icons" />
          </p>
          <p>You can use the iconSet property available in the /devExpress/bootstrap web.config section to switch icon sets.</p>    
          <p>For example, set the iconSet property to Embedded to switch the default Glyphicons set to the built-in icons:</p>  
<pre><code class="hljs xml">
...
<devExpress>
  <bootstrap iconSet="Embedded" />
</devExpress>
...
</code></pre>
          <p>To use the FontAwesome icons, download FontAwesome, add its font and CSS files to your project and link the FontAwesome CSS to your master page:</p>    
<pre><code class="hljs xml">
...
<devExpress>
  <link href="font-awesome/css/font-awesome.css" rel="stylesheet" />
</devExpress>
...
</code></pre>
          <p>Next, set the iconSet property to FontAwesome:</p>      
<pre><code class="hljs xml">
...
<devExpress>
  <bootstrap iconSet="FontAwesome" />
</devExpress>
...
</code></pre>          
        ]]>
      </Description>
    </Section> 
  </GettingStarted>
  <DemoGroup Key="GridView" Title="Grid View" SeoTitle="Bootstrap GridView Demo" IconCssClass="icon icon-grid" OrderIndex="0">
    <PreDescription>
      <![CDATA[
        <p>The DevExpress Bootstrap Grid View is a full-featured tabular data presentation control that renders itself using Bootstrap CSS classes. It fully supports data editing and delivers numerous end-user data shaping features, including facilities for end-user data filtering, grouping and sorting. Both total and group summaries are also available out-of-the box.</p>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>The Grid View control allows you to create complex master-detail layouts with unlimited nesting levels. Additionally, the layouts of separate Grid View’s visual elements are customizable using templates.</p>
        <p>The Grid View has been designed to work with large data sources and supports data binding in server mode. In this mode, the grid only loads the records to be displayed on screen and delegates all data processing to the database server. The Grid View control automatically splits content across multiple pages and a built-in pager enables end-users to navigate through data.</p>
        <p>Extensive server-side and client-side APIs cover multiple popular customization scenarios and gives you full control over the grid’s behavior and presentation.</p>
      ]]>
    </Description>
    <Demo Key="LargeDataBase" Title="Binding to Large DB" SeoTitle="Bootstrap GridView Binding to Large DataBase Demo">
      <DemoSection Key="BindingToLargeDatabase" Title="Binding to Large Database (Server Mode)">
        <Description>
          <![CDATA[
            <p>The Grid View control supports binding to data in the server mode using the <helplink href="http://help.devexpress.com/#AspNet/clsDevExpressDataLinqEntityServerModeDataSourcetopic">EntityServerModeDataSource</helplink> component. In this mode, the Grid View loads only the minimum amount of data required for display on screen and delegates all data processing (such as grouping and sorting) to the database server. This technique significantly reduces the application's response time when working with large data sets.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Editing" Title="Editing" SeoTitle="Bootstrap GridView Data Editing Demo">
      <DemoSection Key="EditingWithEditForm" Title="Editing With Edit Form">
        <Description>
          <![CDATA[
                <p>The Grid View control provides end-user data editing functionality out of the box. The commands for end-user data modification are displayed within a command column. Add this column to the grid’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_Columnstopic">Columns</helplink> to allow editing.</p>
                <p>By default, a built-in Edit Form is used to modify cell values. The Edit Form displays edit cells that correspond to data columns, and the <strong>Cancel/Update</strong> commands that allow end-users to discard changes or save them to a database.</p>
                <p>By default all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="BatchEditingAndUpdating" Title="Batch Editing and Updating">
        <Description>
          <![CDATA[
                <p>The Grid View control allows you to edit and update multiple grid rows on the client side and send them to the server in a single request.</p>
                <p>To enable the batch editing functionality, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewEditingSettings_Modetopic">SettingsEditing.Mode</helplink> property to '<b>Batch</b>'. In this mode, grid data contained in a page can be edited using in-line editors. The modified cells are highlighted. Deleted rows are also highlighted and display the <b>Recover</b> command item. To hide the deleted rows from the view, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewBatchEditSettings_HighlightDeletedRowstopic">SettingsEditing.BatchEditSettings.HighlightDeletedRows</helplink> property to <b>false</b>. All changes are maintained on the client side until the <b>Save changes</b> link is clicked, or all changes are canceled by clicking the <b>Cancel changes</b> button.</p>

                <p>If a grid contains modified data, it displays a confirm message before a grid callback or postback is performed.</p>

                <p>You can customize the batch edit mode settings using the following properties.</p>

                <ul>
                    <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewBatchEditSettings_EditModetopic">EditMode</helplink> property allows you to specify which control element (data cell or data row) is used to edit data. </li>
                    <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridBatchEditSettings_StartEditActiontopic">StartEditAction</helplink> property specifies the action that will be used to begin editing grid data. </li>  
                </ul>
                <p>The <helplink href="https://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.batchEditApi.property">batchEditApi</helplink> property provides access to the batch editing client API. The <helplink href="https://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.BatchEditStartEditing.event">BatchEditStartEditing</helplink> and <helplink href="https://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.BatchEditEndEditing.event">BatchEditEndEditing</helplink> events occur when a grid switches to/leaves the batch edit mode.</p>
                <p>By default, all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="EditingInPopupEditForm" Title="Editing in Popup Edit Form">
        <Description>
          <![CDATA[
                <p>In this mode, the Edit Form is displayed within a popup window. To use this mode, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewEditingSettings_Modetopic">SettingsEditing.Mode</helplink> property to <strong>PopupEditForm</strong>.</p>
                <p>By default, all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="InlineEditing" Title="Inline Editing">
        <Description>
          <![CDATA[
                <p>In the inline editing mode, the Grid View control displays an In-Line Edit Row instead of the edited data row. The edit row displays edit cells that correspond to visible data columns. To use this mode, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewEditingSettings_Modetopic">SettingsEditing.Mode</helplink> property to <strong>Inline</strong>.</p>
                <p>By default, all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CascadingComboBoxes" Title="Cascading ComboBoxes">
        <Description>
          <![CDATA[
            <p>In this demo, the combo box in the City column (the City combo box) is populated dynamically with city names using callbacks, based on the value selected in the combo box in the Country column (the Country combo box). Only the content stored in the City combo box is updated during round-trips to the server - not the content of the page or the Grid View control.</p>
            <p>The client-side <helplink href="https://documentation.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientComboBox_SelectedIndexChangedtopic">SelectedIndexChanged</helplink> event of the Country combo box is handled to update the City combo box. On the server side, the <helplink href="https://documentation.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_Callbacktopic">Callback</helplink> event is handled to populate the City combo box with required values.</p>
                <p>By default, all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataValidation" Title="Data Validation">
        <Description>
          <![CDATA[
            <p>The Grid View Control allows you to manually validate the edited row and display errors for invalid fields. This demo demonstrates how you can provide data validation by handling the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_RowValidatingtopic">RowValidating</helplink> event.</p>
            <p>To indicate rows with invalid data, the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_HtmlRowPreparedtopic">HtmlRowPrepared</helplink> event is handled. This event is raised for each data row when the corresponding row within the table has been created. In this sample, rows with invalid data are colored in red (a <strong>text-danger</strong> CSS class is applied).</p>
            <p>In the <strong>Edit Form</strong>, an error icon indicates an invalid field. Hover over the icon with the mouse to display a hint along with a description of the error.</p>
            <p>By default, all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="SortingAndGrouping" Title="Sorting and Grouping" SeoTitle="Bootstrap GridView Sorting and Grouping Demo">
      <DemoSection Key="Sorting" Title="Sorting">
        <Description>
          <![CDATA[
            <p>An end-user can sort the grid by clicking the header of a column by which the grid should be sorted. An arrow glyph indicates the sort order within the sorted column. The grid can be sorted against multiple columns by clicking the required column headers while holding down the <kbd>shift</kbd> key.</p>
            <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBehaviorSettings.AllowSort.property">SettingsBehavior.AllowSort</helplink> property defines whether the grid can be sorted. The default value is <strong>true</strong>.</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumn.SortIndex.property">DataColumn.SortIndex</helplink> - Specifies a column’s position among sorted columns. The SortIndex equals -1 when the column is not sorted.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumn.SortOrder.property">DataColumn.SortOrder</helplink> - Specifies a column’s sort order.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridView.SortBy.overloads">GridView.SortBy</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.SortBy.overloads">ClientGridView.SortBy</helplink> - Sort data by the specified column using the specified sort order.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ClearSort.method">GridView.ClearSort</helplink> - Clears sorting applied to the grid.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    
      <DemoSection Key="Grouping" Title="Grouping">
        <Description>
          <![CDATA[
            <p>The grouping feature allows an end-user to group data within the grid by dragging column headers to the group panel. Data grouping is allowed if the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBehaviorSettings.AllowGroup.property">SettingsBehavior.AllowGroup</helplink> and <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBehaviorSettings.AllowSort.property">SettingsBehavior.AllowSort</helplink> grid properties are set to <strong>true</strong>.</p>
            <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridViewSettings.ShowGroupPanel.property">Settings.ShowGroupPanel</helplink> option controls the group panel's visibility.</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumn.GroupIndex.property">DataColumn.GroupIndex</helplink> - Specifies the index of a column among grouped columns. If this property is set to -1, the grid data is not grouped by this column.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridViewBehaviorSettings.AutoExpandAllGroups.property">SettingsBehavior.AutoExpandAllGroups</helplink> - Specifies whether all group rows within the grid are expanded by default.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="UsingGroupingAPI" Title="Using Grouping API">
        <Description>
          <![CDATA[
            <p>The Bootstrap Grid View control provides a comprehensive API for sorting and grouping data on both the server and client side. This demo illustrates a programmatic approach to grouping Grid View data on the server.</p>
            <p>To group data by a specific grid column's values, pass this column to the Bootstrap Grid View’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_GroupBytopic">GroupBy</helplink> method. You can call this method for several columns to perform multi-level grouping.</p>
            <ul>  
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.GroupBy.overloads">ClientGridView.GroupBy</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridView.GroupBy.overloads">GridView.GroupBy</helplink> - Group data by the specified column.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.ExpandAll.method">ClientGridView.ExpandAll</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.CollapseAll.method">ClientGridView.CollapseAll</helplink> - Expand/collapse all group rows.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.ExpandRow.method">ClientGridView.ExpandRow</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.CollapseRow.method">ClientGridView.CollapseRow</helplink> - Expand/collapse the specified group row.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.RowExpanding.event">ClientGridView.RowExpanding</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.RowCollapsing.event">RowCollapsing</helplink> - Raised before a group row expands/collapses. These events allow you to cancel the corresponding actions.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridBase_ClearSorttopic">GridView.ClearSort</helplink> - Clears all sorting and grouping settings applied to the Grid View.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.BeginUpdate.method">GridView.BeginUpdate</helplink> - Prevents the control from being rendered until the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.EndUpdate.method">EndUpdate</helplink> method is called, which allows you to perform a sequence of operations without the Grid View re-rendering itself after each API call.</li>
            </ul> 
         ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Filtering" Title="Filtering" SeoTitle="Bootstrap GridView Data Filtering Demo">
      <DemoSection Key="SearchPanel" Title="Search Panel">
        <Description>
          <![CDATA[
            <p>The Grid View control allows you to filter data and highlight search results via an integrated easy-to-use Search Panel. To enable the Search Panel, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridSearchPanelSettings_Visibletopic">SettingsSearchPanel.Visible</helplink> property to <strong>true</strong>.</p>
            <p>To use an external editor instead of the built-in search panel, assign the editor’s identifier to the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridSearchPanelSettings.CustomEditorID.property">SettingsSearchPanel.CustomEditorID</helplink> property.</p>
            <ul>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.SearchPanelFilter.property">GridView.SearchPanelFilter</helplink> - Specifies the search text programmatically.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.ApplySearchPanelFilter.method">ClientGridView.ApplySearchPanelFilter</helplink> - Sets the search text on the client-side.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridViewSearchPanelSettings.ColumnNames.property">SettingsSearchPanel.ColumnNames</helplink> - Specifies particular columns to which the search panel filter should be applied. All columns are used for searching by default. The columns can be identified by a field name, column name or caption.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridDataColumnSettings.AllowFilterBySearchPanel.property">DataColumn.Settings.AllowFilterBySearchPanel</helplink> - Prevents a particular column from being filtered using the search panel.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridView.SearchPanelEditorCreate.event">GridView.SearchPanelEditorCreate</helplink> - Fires when a search panel editor is being created. Handling this event allows you to adjust the editor’s properties or provide a custom editor by specifying the e.EditorProperties event parameter.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HeaderFilter" Title="Header Filter">
        <Description>
          <![CDATA[
            <p>The Grid View control provides a powerful data filtering mechanism that displays a dropdown list of all unique values within a column. Clicking the column header’s filter button invokes this dropdown list. Set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridSettings.ShowHeaderFilterButton.property">Settings.ShowHeaderFilterButton</helplink> to <b>true</b> to show header filter buttons.</p>
            <p>You can set header filter settings for each data column using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewDataColumn_SettingsHeaderFiltertopic">Column.SettingsHeaderFilter</helplink> property.</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridDataColumnHeaderFilterSettings.Mode.property">DataColumn.SettingsHeaderFilter.Mode</helplink> - Specifies the type of header filter for a column: <a href="#HeaderFilterWithCheckedListMode">CheckedList</a>, DateRangeCalendar, DateRangePicker, List.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumn.FilterExpression.property">DataColumn.FilterExpression</helplink> - Gets the column’s filter expression.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HeaderFilterWithCheckedListMode" Title="Header Filter - Checked List mode">
        <Description>
          <![CDATA[
            <p>The header filter can operate in <strong>CheckedList</strong> mode, in which it displays a check box list allowing an end-user to specify multiple filtering criteria. You can enable the <strong>CheckedList</strong> mode for a column's header filter by setting the column's <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridDataColumnHeaderFilterSettings_Modetopic">SettingsHeaderFilter.Mode</helplink> property to <strong>GridHeaderFilterMode.CheckedList</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AdvancedFiltering" Title="Header Filter - Custom Values">
        <Description>
          <![CDATA[
            <p>The Grid View control allows you to create custom filter values, define filter criteria and display these values within the column's filter dropdown. To do this, handle the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_HeaderFilterFillItemstopic">HeaderFilterFillItems</helplink> event. The event argument contains a list of predefined filter values, which contains a data column's unique values. These values are shown in the header filter popup by default. You can modify this list and fill it with custom items. Each filter value should have a title and filter expression.</p>
            <p>In this demo, custom filter values are displayed within the 'Total' and 'Quantity' columns' filter dropdowns.</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridHeaderFilterEventArgs.Values.property">e.Values</helplink> - A list of column header filter items.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridHeaderFilterEventArgs.AddValue.overloads">e.AddValue</helplink> - Adds a new item to the list of header filter items. The <helplink href="https://documentation.devexpress.com/CoreLibraries/4928/DevExpress-Data-Library/Criteria-Language-Syntax">Criteria Language Syntax</helplink> help topic describes the filter expression syntax.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridHeaderFilterEventArgs.AddShowAll.method">e.AddShowAll</helplink> - Adds the 'All' item to the header filter.
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataFilterRow" Title="Data Filter Row">
        <Description>
          <![CDATA[
            <p>The filter row allows end-users to filter data by entering text within its cells. For total control over the values returned by the filter row, an optional filter row menu displays a list of filter conditions for a given search operation.</p>
            <p>Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewSettings_ShowFilterRowtopic">Settings.ShowFilterRow</helplink> property to <strong>true</strong> to display the filter row within the Grid View.</p>
            <p>You can hide a filter editor for a certain column using the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumnSettings.AllowAutoFilter.property">DataColumn.Settings.AllowAutoFilter</helplink> property.</p>
            <ul>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumnSettings.AllowAutoFilter.property">DataColumn.Settings.AllowAutoFilter</helplink> - Allows you to show/hide a column’s filter row editor.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumnSettings.AutoFilterCondition.property">DataColumn.AutoFilterCondition</helplink> - Specifies the type of comparison operator a filter row editor uses: BeginsWith, Contains, Equals, etc.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumn.AutoFilterBy.method">DataColumn.AutoFilterBy</helplink> - Allows you to apply a filter string to a column programmatically.</li>
            	<li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridViewDataColumnSettings.ShowFilterRowMenu.property">DataColumn.ShowFilterRowMenu</helplink> - Specifies whether the filter button is displayed within a column’s filter row cell. This button invokes a context menu allowing end-users to select the comparison operator.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Selection" Title="Selection and Focus" SeoTitle="Bootstrap GridView Selection and Focus Demo">
      <DemoSection Key="FocusedRow" Title="Focused Row">
        <Description>
          <![CDATA[
              <p>When the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewBehaviorSettings_AllowFocusedRowtopic">SettingsBehavior.AllowFocusedRow</helplink> is set to <strong>true</strong>, one of the rows in the Grid View control is focused. You can use this feature in multiple ways, for example, to display additional information for the focused row.</p>
              <p>An end-user can move focus to another row by clicking it. Handle the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_FocusedRowChangedtopic">FocusedRowChanged</helplink> event to respond to changing row focus.</p>
              <p>You can programmatically change row focus using the following API:</p>              
              <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_GetFocusedRowIndextopic">GetFocusedRowIndex</helplink> – Gets the index of the currently focused row on the client.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SetFocusedRowIndextopic">SetFocusedRowIndex</helplink> - Sets the focused row by its index on the client.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_FocusedRowIndextopic">FocusedRowIndex</helplink> – Gets or sets the focused row index on the server-side.</li>
              </ul>              
              <p>Set the focused row index to -1 on the client or server-side to reset a focused row.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Selection" Title="Selection">
        <Description>
          <![CDATA[
            <p>The Grid View control allows end-users to select rows using check boxes or a row click if this functionality is enabled.</p> 
            <p>To show selection checkboxes, add a command column to the grid and set its <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_ShowSelectCheckboxtopic">ShowSelectCheckBox</helplink> property to <strong>true</strong>.</p>
            <p>The command column’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_SelectAllCheckboxModetopic">SelectAllCheckboxMode</helplink> property allows you to specify the Select All check box behavior. This check box can either select all rows in the grid or only on the current page. The Select All check box is not displayed if the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_SelectAllCheckboxModetopic">SelectAllCheckboxMode</helplink> property is set to <strong>None</strong>.</p>
            <p>Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewBehaviorSettings_AllowSelectByRowClicktopic">SettingsBehavior.AllowSelectByRowClick</helplink> property to <strong>true</strong> to enable row selection via mouse click. Once set, clicking any row clears the previous selection and selects this row.</p>
            <p>To select multiple rows, click the desired rows while holding down the <kbd>Ctrl</kbd> key. Clicking a row in this manner toggles its selected state and preserves the selection. To select contiguous rows, click the first row you wish to select, hold down the <kbd>Shift</kbd> key, and click the last row. You can continue to customize the selection by clicking individual rows while holding down the <kbd>Ctrl</kbd> key.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SingleRowOnlyMode" Title="Single Row Selection">
        <Description>
          <![CDATA[
            <p>In the Single Row Only selection mode, the Grid View only allows one row to be selected at a time. To activate this mode, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewBehaviorSettings_AllowSelectSingleRowOnlytopic">SettingsBehavior.AllowSelectSingleRowOnly</helplink> property to <strong>true</strong>.</p>
            <p>Select checkboxes in this mode will be rendered as radio buttons. The <kbd>Shift</kbd> and <kbd>Ctrl</kbd> keys do not have an effect.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SelectionAPI" Title="Selection API">
        <Description>
          <![CDATA[
            <p>The Grid View control provides a client-side API allowing you to programmatically manipulate row selection and obtain information about the currently selected rows.</p>
            <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridView.Selection.property">GridView.Selection</helplink> object represents an API to manipulate selection on the server-side.</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.SelectionChanged.event">GridView.SelectionChanged</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.SelectionChanged.event">ClientGridView.SelectionChanged</helplink> - Fire when selection has been changed.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SelectRowstopic">ClientGridView.SelectRows</helplink> - Allows you to select or deselect the specified rows, or select all rows within the grid.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SelectRowsByKeytopic">ClientGridView.SelectRowsByKey</helplink> - Allows you to select or deselect rows by their keys.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_UnselectAllRowsOnPagetopic">ClientGridView.SelectAllRowsOnPage</helplink> - Allows you to select or deselect all rows displayed on the current page.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_UnselectRowstopic">ClientGridView.UnselectRows</helplink> - Deselects all rows or the specified rows within the grid.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Summary" Title="Summary" SeoTitle="Bootstrap GridView Total and Group Summary Demo">
      <DemoSection Key="TotalSummary" Title="Total Summary">
        <Description>
          <![CDATA[
            <p>The Grid View control supports both total and group summaries.</p>
            <p>A total summary represents the value of an aggregate function calculated over all rows within the grid and is displayed within the grid footer, provided that the <strong>Settings.ShowFooter</strong> option is enabled. The Grid View stores its total summary items in the <strong>TotalSummary</strong> collection.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="GroupSummary" Title="Group Summary">
        <Description>
          <![CDATA[
            <p>The Grid View control supports both total and group summaries.</p>
            <p>A group summary represents the summary value calculated within a single group and is displayed in the group row or group footer. Group summaries are stored in the <strong>GroupSummary</strong> collection.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="MasterDetail" Title="Master-Detail View" SeoTitle="Bootstrap GridView Master-Detail Demo">
      <DemoSection Key="MasterDetailView" Title="Master-Detail View">
        <Description>
          <![CDATA[
            <p>The Grid View control allows you to build master-detail layouts of any complexity and nesting depth by providing a detail row template, which defines the way detail data is presented.</p>
            <p>This demo demonstrates how you can use nested grid controls to visualize a simple master-detail relationship between two data tables. To achieve this goal, use the following steps.</p>
            <ol>
                <li>
                    Create two Grid View controls. 
                </li>
                <li>
                    Bind the first grid (the master grid) to a master data source and enable its <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewDetailSettings_ShowDetailRowtopic">SettingsDetail.ShowDetailRow</helplink> option. 
                </li>
                <li>
                    Bind the second grid (the detail grid) to a detail data source that uses a <strong>SessionParameter</strong> as a filtering criterion. 
                </li>
                <li>
                    Create a <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewGridViewTemplates_DetailRowtopic">DetailRow</helplink> template for the master grid and place the detail grid onto it. 
                </li>
                <li>
                    Finally, handle the detail grid's <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewASPxGridView_BeforePerformDataSelecttopic">BeforePerformDataSelect</helplink> event and specify the session value used as a filtering criterion. 
                </li>
            </ol>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ColumnTypes" Title="Column Types" SeoTitle="Bootstrap GridView Column Types Demo" >
      <DemoSection Key="DataColumn" Title="Data Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewDataColumntopic">BootstrapGridViewDataColumn</helplink> is a type of a grid column that automatically determines the actual column type (and, consequently, the control used for both displaying and editing cell data) based on the type of a data field to which a column is bound:</p>
            <ul>
                <li>A Date Edit column is created for the DateTime data type</li>
                <li>A Check Box column is created for the Bool data type</li>
                <li>A Text column is created for any other data type</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="BinaryImageColumn" Title="Binary Image Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewBinaryImageColumntopic">BootstrapGridViewBinaryImageColumn</helplink> column used to display images for columns that contain binary data. You can access the Binary Image settings using a column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewBinaryImageColumn_PropertiesBinaryImagetopic">PropertiesBinaryImage</helplink> property.</p>
            <p>Editing settings of the BinaryImage control are available via the <helplink href="">PropertiesBinaryImage.EditingSettings</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.BinaryImageEditProperties.ImageWidth.property">PropertiesBinaryImage.ImageWidth</helplink> - specifies the width of the image displayed within a column</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.BinaryImageEditProperties.ImageHeight.property">PropertiesBinaryImage.ImageHeight</helplink> - specifies the height of the image displayed within a column</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ButtonEditColumn" Title="Button Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewButtonEditColumntopic">BootstrapGridViewButtonEditColumn</helplink> column displays the Button Edit control as its cell editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewButtonEditColumn_PropertiesButtonEdittopic">PropertiesButtonEdit</helplink> property.</p>
            <ul>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButtonEditProperties_Buttonstopic">PropertiesButtonEdit.Buttons</helplink> - a collection property that allows you to specify buttons that should be displayed within the cell editor.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="CheckColumn" Title="Check Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewCheckColumntopic">BootstrapGridViewCheckColumn</helplink> is a column using a check box to display and edit data from Boolean data fields. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewCheckColumn_PropertiesCheckEdittopic">PropertiesCheckEdit</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.CheckBoxProperties.UseDisplayImages.property">CheckBoxProperties.UseDisplayImages</helplink> - specifies whether the editor's check state is represented by icons or specific texts in browse mode</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.CheckBoxProperties.DisplayTextChecked.property">CheckBoxProperties.DisplayTextChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.CheckBoxProperties.DisplayTextUnchecked.property">DisplayTextUnchecked</helplink> - specifies the text that represents the checked/unchecked state of a column editor in browse mode</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.CheckBoxProperties.DisplayTextChecked.property">CheckBoxProperties.DisplayTextChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapGridViewEditorCssClasses.IconCheckColumnChecked.property">GridView.CssClassesEditor.IconCheckColumnChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapGridViewEditorCssClasses.IconCheckColumnUnchecked.property">IconCheckColumnUnchecked</helplink> - specifies the icons that represent the checked/unchecked state of a column editor in browse mode</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ComboBoxColumn" Title="Combo Box Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewComboBoxColumntopic">BootstrapGridViewComboBoxColumn</helplink> is a column whose values are edited using the Combo Box editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewComboBoxColumn_PropertiesComboBoxtopic">PropertiesComboBox</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapComboBoxProperties.Items.property">PropertiesComboBox.Items</helplink> - specifies collection of Combo Box items</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.AutoCompleteBoxPropertiesBase.DataSourceID.property">PropertiesComboBox.DataSourceID</helplink> - allows to bind ComboBox item collection to a data source</li>
            </ul>
            <p>Also, see the <a href="Editing.aspx#CascadingComboBoxes">Editing-CascadingComboBoxes</a> demo, which demonstrates how to link two Combo Box columns and populate items of the first column based on the selected value from the second column.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="DateEditColumn" Title="Date Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewDateColumntopic">BootstrapGridViewDateColumn</helplink> is a column using the Date Edit control to display and edit data from a DateTime data field. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewDateColumn_PropertiesDateEdittopic">PropertiesDateEdit</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.DateEditProperties.EditFormat.property">PropertiesDateEdit.EditFormat</helplink> - specifies possible formats of the date column: Time, DateTime, Date, Custom</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="DropDownEditColumn" Title="Drop-Down Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewDropDownEditColumntopic">BootstrapGridViewDropDownEditColumn</helplink> column provides a cell editor containing a customizable drop-down window. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewDropDownEditColumn_PropertiesDropDownEdittopic">PropertiesDropDownEdit</helplink> property.</p>
            <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebDropDownEditProperties_DropDownWindowTemplatetopic">PropertiesDropDownEdit.DropDownWindowTemplate</helplink> - specifies a template used to display the editor’s drop-down window content</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="HyperLinkColumn" Title="Hyperlink Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewHyperLinkColumntopic">BootstrapGridViewHyperLinkColumn</helplink> column represents a data column with hyperlink functionality. You can access settings of a displayed hyperlink using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewHyperLinkColumn_PropertiesHyperLinkEdittopic">PropertiesHyperLinkEdit</helplink> property.</p>
            <p>By default, if no display text is provided for a hyperlink through the corresponding settings (<helplink href="http://help.devexpress.com/#AspNet/DevExpressWebHyperLinkProperties_Texttopic">HyperLinkProperties.Text</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebHyperLinkProperties_TextFieldtopic">HyperLinkProperties.TextField</helplink>), the hyperlink displays the URL obtained from the column's data field. You can disable this behavior by setting the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewHyperLinkColumn_ShowUrlAsDisplayTexttopic">BootstrapGridViewHyperLinkColumn.ShowUrlAsDisplayText</helplink> property to <strong>false</strong>.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.HyperLinkProperties.NavigateUrlFormatString.property">HyperLinkProperties.NavigateUrlFormatString</helplink> - specifies the pattern used to format the hyperlink location url in display mode</li>
            </ul>
            ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ImageColumn" Title="Image Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewImageColumntopic">BootstrapGridViewImageColumn</helplink> is a column used to display images from specified URLs. You can access the cell editor's settings using the column's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapGridViewImageColumn.PropertiesImage.property">PropertiesImage</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ImageEditPropertiesBase.ImageUrlFormatString.property">PropertiesImage.ImageUrlFormatString</helplink> - specifies the pattern used to format the URL that points to the image displayed in the cell</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="MemoColumn" Title="Memo Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewMemoColumntopic">BootstrapGridViewMemoColumn</helplink> is a data column used to display and edit multiline text data. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewMemoColumn_PropertiesMemoEdittopic">PropertiesMemoEdit</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MemoProperties.Columns.property">PropertiesMemoEdit.Columns</helplink> - gets or sets the textarea's width in characters</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MemoProperties.Rows.property">PropertiesMemoEdit.Rows</helplink> - gets or sets the textarea's height in characters</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ProgressBarColumn" Title="Progress Bar Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewProgressBarColumntopic">BootstrapGridViewProgressBarColumn</helplink> column presents numeric data as a progress bar. You can access settings of a displayed progress bar using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewProgressBarColumn_PropertiesProgressBartopic">PropertiesProgressBar</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ProgressBarProperties.Minimum.property">PropertiesProgressBar.Minimum</helplink> - specifies the minimum range value of a progress bar column (when the progress bar is empty)</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ProgressBarProperties.Maximum.property">PropertiesProgressBar.Maximum</helplink> - specifies the maximum range value of a progress bar column (when the progress bar is completely filled)</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="SpinEditColumn" Title="Spin Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewSpinEditColumntopic">BootstrapGridViewSpinEditColumn</helplink> is a column used to display and edit numeric data. The column data is edited using the Spin Edit control. You can access the Spin Edit settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewSpinEditColumn_PropertiesSpinEdittopic">PropertiesSpinEdit</helplink> property. </p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.SpinEditProperties.Increment.property">PropertiesSpinEdit.Increment</helplink> - specifies the value by which the spin editor's value is changed when clicking a small increment/decrement spin button</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.SpinEditProperties.NumberFormat.property">PropertiesSpinEdit.NumberFormat</helplink> - specifies possible display formats for a spin editor's value: Number, Currency, Percent, Custom</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.SpinEditProperties.MinValue.property">PropertiesSpinEdit.MinValue</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.SpinEditProperties.MaxValue.property">MaxValue</helplink> - specify the minimum and maximum values of the column editor</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TagBoxColumn" Title="Tag Box Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewTagBoxColumntopic">BootstrapGridViewTagBoxColumn</helplink> is a column used to display and edit values with the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTagBoxtopic">Tag Box</helplink> editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewTagBoxColumn_PropertiesTagBoxtopic">PropertiesTagBox</helplink> property.</p>
            <ul>
               <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTagBoxProperties.Tags.property">PropertiesTagBox.Tags</helplink> - provides access a collection of editor tags</li>
               <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAutoCompleteBoxPropertiesBase_DataSourceIDtopic">PropertiesTagBox.DataSourceID</helplink> - allows to bind the tags collection to a data source</li>
               <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTagBoxProperties.AllowCustomTags.property">PropertiesTagBox.AllowCustomTags</helplink> - specifies whether end-users can input tokens that are not contained in the Tags collection</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TextColumn" Title="Text Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewTextColumntopic">BootstrapGridViewTextColumn</helplink> is a data column used to display and edit text. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewTextColumn_PropertiesTextEdittopic">PropertiesTextEdit</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TimeEditColumn" Title="Time Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewTimeEditColumntopic">BootstrapGridViewTimeEditColumn</helplink> is a column using the Time Edit control to display and edit data from a DateTime data field. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewTimeEditColumn_PropertiesTimeEdittopic">PropertiesTimeEdit</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.TimeEditProperties.EditFormat.property">PropertiesTimeEdit.EditFormat</helplink> - specifies possible formats of the date column: Time, DateTime, Date, Custom</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="CommandColumn" Title="Command Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewCommandColumntopic">BootstrapGridViewCommandColumn</helplink> is a special column type intended for displaying commands that allow end-users to switch the Grid View to the edit mode, update data, delete rows, etc. A command column allows multiple items to be displayed within a cell. In this demo, the Edit button, the Delete button and the row selection check box are enabled by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_ShowEditButtontopic">ShowEditButton</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_ShowDeleteButtontopic">ShowDeleteButton</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_ShowSelectCheckboxtopic">ShowSelectCheckbox</helplink> properties to <strong>true</strong>.</p>
            <p>In addition to standard command items, a Command Column can display custom command buttons. The collection of custom command buttons to display is available through the column’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewCommandColumn_CustomButtonstopic">CustomButtons</helplink> property. Each button within the collection is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewCommandColumnCustomButtontopic">BootstrapGridViewCommandColumnCustomButton</helplink> object. You can process a click on a custom button in the client-side <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridView.CustomButtonClick.event">CustomButtonClick</helplink> event.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientGridViewCustomButtonEventArgs.buttonID.property">args.buttonID</helplink> - identifies the clicked custom button</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientProcessingModeEventArgs.processOnServer.property">args.processOnServer</helplink> - specifies whether the event should be finally processed on the server side</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientProcessingModeEventArgs.processOnServer.property">args.visibleIndex</helplink> - identifies the row whose custom button has been clicked</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.GridCustomCommandButton.ID.property">CustomButton.ID</helplink> - specifies a string indentifier of the custom button</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridView.CustomButtonCallback.event">GridView.CustomButtonCallback</helplink> - occurs on the server side when a custom command button has been clicked provided that args.processOnServer is set to <strong>true</strong> (the default value)</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="RowCustomization" Title="Row Customization" SeoTitle="Bootstrap GridView Row Customization Demo">
      <DemoSection Key="PreviewRow" Title="Preview Row">
        <Description>
          <![CDATA[
            <p>Preview rows are non-editable regions that allow large memo fields or custom data to be displayed across all columns in the Grid View. To enable the preview row, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewSettings_ShowPreviewtopic">Settings.ShowPreview</helplink> property to <strong>true</strong>. Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_PreviewFieldNametopic">PreviewFieldName</helplink> property to bind the preview row to data.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_GetPreviewTexttopic">GetPreviewText</helplink> - Gets the text displayed within the specified preview row.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewTemplates_PreviewRowtopic">Templates.PreviewRow</helplink> – Provides access to a template used for rendering preview rows.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Striped" Title="Striped">
        <Description>
          <![CDATA[
            <p>To enhance readability, you can highlight alternating (odd) grid rows with a different style. To do so, set the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewBootstrapSpecificSettings_Stripedtopic">SettingsBootstrap.Striped</helplink> property to <strong>true</strong>. The style used to highlight rows depends on the used bootstrap theme.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RowHotTrack" Title="Row HotTrack">
        <Description>
          <![CDATA[
            <p>The hot track feature allows you to highlight a grid row under the cursor with a different style. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewBehaviorSettings_EnableRowHotTracktopic">SettingsBehavior.EnableRowHotTrack</helplink> property to <strong>true</strong> to enable this feature. The style used to highlight a row depends on the used bootstrap theme.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ConditionalFormatting" Title="Conditional Formatting" SeoTitle="Bootstrap GridView Conditional Formatting Demo" >
      <DemoSection Key="RowFormatting" Title="Row Formatting">
        <Description>
          <![CDATA[
            <p>The Grid View control supports conditional formatting, i.e., automatically applies cell formatting based on the specified rules. This feature helps end-users quickly notice critical information, identify trends and exceptions, and compare data.</p>
            <p>Formatting rules can be created at design time or programmatically. The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_FormatConditionstopic">FormatConditions</helplink> property provides access to a collection of rules, which are <helplink href="http://help.devexpress.com/#AspNet/clsDevExpressWebGridFormatConditionBasetopic">GridFormatConditionBase</helplink> class descendants.</p>
            <p>In this demo, the <helplink href="http://help.devexpress.com/#WPF/DevExpressXpfGridFormatConditionBase_ApplyToRowtopic">ApplytoRow</helplink> property is set to <strong>true</strong> to specify that formatting should be applied to the whole row.</p>
            <p>The style settings applied to grid cells can be exported together with data to various formats using our data aware export engine. 
            Moreover, when we export data to Excel formats (XLS and XLSX), the format conditions are transformed to corresponding Excel conditional formatting rules. 
            Therefore, you can manage the rules in Excel after export. You can take a look at a grid export capabilities in the <a href="Export.aspx#ExportWithFormatConditions">Export with Format Conditions</a> demo.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CellFormatting" Title="Cell Formatting">
        <Description>
          <![CDATA[
            <p>This example demonstrates conditional formatting applied to separate cells (in cases when a format condition object’s <helplink href="http://help.devexpress.com/#WPF/DevExpressXpfGridFormatConditionBase_ApplyToRowtopic">ApplytoRow</helplink> property is not set).</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Export" Title="Export" SeoTitle="Bootstrap GridView Export Demo" >
      <DemoSection Key="ExportingTo" Title="Exporting to PDF, XLS, XLSX, DOCX, CSV and RTF">
        <Description>
          <![CDATA[
            <p>The Grid View control allows you to export data with ease. Data can be exported to a file or stream in the following formats:</p>
            <ul>
                <li><strong>PDF</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToPdf.method(WcuycA)">ExportToPdf</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportPdfToResponse.overloads">ExportPdfToResponse</helplink>)</li>
                <li><strong>XLS</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToXls.overloads">ExportToXls</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportXlsToResponse.overloads">ExportXlsToResponse</helplink>)</li>
                <li><strong>XLSX</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToXlsx.overloads">ExportToXlsx</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportXlsxToResponse.overloads">ExportXlsxToResponse</helplink>)</li>
                <li><strong>DOCX</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToDocx.overloads">ExportToDocx</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportDocxToResponse.overloads">ExportDocxToResponse</helplink>)</li>
                <li><strong>RTF</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToRtf.overloads">ExportToRtf</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportRtfToResponse.overloads">ExportRtfToResponse</helplink>)</li>
                <li><strong>CSV</strong> (<helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportToCsv.overloads">ExportToCsv</helplink>, <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxGridBase.ExportCsvToResponse.overloads">ExportCsvToResponse</helplink>)</li>
            </ul>
            <p>Note that in this demo, export to table formats (XLS, XLSX, and CSV) is performed in the WYSIWYG (What You See Is What You Get) mode. Therefore, the table formatting, e.g., grouping, is lost and grid summaries are converted to strings. However, you can maintain such information by exporting grid data in the <a href="#DataAwareExport">data-aware mode</a>.</p>
            <p>The buttons in this demo are not built-in to the GridView control and export operations are performed on the server-side button's "Click" handler. You can also use the built-in <a href="BarsAndDialogs.aspx#Toolbar">GridView Toolbar</a> which contains commands for the Export operations.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataAwareExport" Title="Data Aware Export">
        <Description>
          <![CDATA[
            <p>The Grid View can export data to XLS and XLSX formats in the data-aware mode. In this mode, the DevExpress Export Engine maintains data grouping layout and automatically transforms summary items to corresponding Excel functions.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ExportSelectedRecords" Title="Export Selected Records">
        <Description>
          <![CDATA[
            <p>To export only the currently selected grid rows, set the Grid View’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewExportSettings_ExportSelectedRowsOnlytopic">SettingsExport.ExportSelectedRowsOnly</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
       </DemoSection>
      <DemoSection Key="ExportWithFormatConditions" Title="Export with Format Conditions">
        <Description>
          <![CDATA[
            <p>When data is exported to a PDF or RTF file, the Grid View maintains the style settings applied to the cells (with the exception of images). Moreover, when we export data to Excel formats (XLS and XLSX), the format conditions are transformed to corresponding Excel conditional formatting rules. Therefore, you can manage the rules in Excel after export.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="BarsAndDialogs" Title="Bars and Dialogs" SeoTitle="Bootstrap GridView Toolbar Customization" >
      <DemoSection Key="Toolbar" Title="Toolbar">
        <Description>
          <![CDATA[
                <p>The Grid View control can display toolbars aggregating commands related to the Grid View and its data.</p>
                <p>All grid toolbars are available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_Toolbarstopic">Toolbars</helplink> collection property, in which each toolbar is a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewToolbartopic">BootstrapGridViewToolbar</helplink> object. Each item on the toolbar is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewToolbarItemtopic">BootstrapGridViewToolbarItem</helplink> object available through the toolbar’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewToolbar_Itemstopic">BootstrapGridViewToolbar.Items</helplink> collection property.</p>
                <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewToolbarItemBase_Commandtopic">BootstrapGridViewToolbarItemBase.Command</helplink> property allows you to associate a toolbar item with one of the built-in commands or custom logic implemented in the Grid View’s server-side or client-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_ToolbarItemClicktopic">ToolbarItemClick</helplink> event handler.</p>
                <p>Refer to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewToolbarCommandEnumtopic">BootstrapGridViewToolbarCommand</helplink> documentation topic to view the full list of available commands.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ToolbarCustomItems" Title="Custom Toolbar Items">
        <Description>
          <![CDATA[
                <p>You can provide custom logic for a toolbar item by setting the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewToolbarItemBase_Commandtopic">BootstrapGridViewToolbarItemBase.Command</helplink> property to Custom. Handle the client-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_ToolbarItemClicktopic">ToolbatItemClick</helplink> event to process a toolbar item click.</p>
                <p>If you also want to perform server-side processing, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientProcessingModeEventArgs_processOnServertopic">processOnServer</helplink> client event argument to <strong>true</strong>, which forces a callback after the client-side processing is finished.</p>
                <p>You can specify that the server-side processing should be initiated by a postback rather than a callback by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridToolbarItemClickEventArgs_usePostBacktopic">usePostBack</helplink> client event argument to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CustomizationDialog" Title="Customization Dialog">
        <Description>
          <![CDATA[
            <p>The Grid View’s customization dialog provides a UI aggregating all essential data shaping options in one place. The dialog is adaptive out of the box and is best suited for touch devices. The customization dialog includes the following tabs: Sorting, Grouping, Filtering and Column Chooser.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridView_SettingsCustomizationDialogtopic">SettingsCustomizationDialog</helplink> property provides access to the customization dialog’s settings. Note that the customization dialog is disabled by default. To enable it, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewCustomizationDialogSettings_Enabledtopic">SettingsCustomizationDialog.Enabled</helplink> property to <strong>true</strong>. Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewCustomizationDialogSettings_ShowSortingPagetopic">ShowSortingPage</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewCustomizationDialogSettings_ShowGroupingPagetopic">ShowGroupingPage</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewCustomizationDialogSettings_ShowFilteringPagetopic">ShowFilteringPage</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewCustomizationDialogSettings_ShowColumnChooserPagetopic">ShowColumnChooserPage</helplink> properties to disable or enable specific tabs.</p>
            <p>You can display the customization dialog using one of the following approaches:</p>
            <ul>
              <li>Call the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_ShowCustomizationDialogtopic">ShowCustomizationDialog</helplink> client method.</li>
              <li>Create a toolbar item with the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewToolbarItem_Commandtopic">Command</helplink> property set to <strong>ShowCustomizationDialog</strong>. An end-user can invoke the customization dialog by clicking this item.</li>
            </ul>           
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Adaptivity" Title="Adaptivity" SeoTitle="Bootstrap GridView Adaptivity Demo" >
      <DemoSection Key="ResponsiveLayout" Title="Responsive Layout">
        <Description>
          <![CDATA[
                <p>The Grid View control provides support for the responsive layout mode, which forces the Grid View to hide columns that do not fit the current screen resolution. Every grid row displays an ellipsis button if at least one column is hidden. Clicking this button expands an adaptive detail row displaying the hidden data.</p>
                <p>Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewAdaptivitySettings_AdaptivityModetopic">SettingsAdaptivity.AdaptivityMode</helplink> to <strong>HideDataCells</strong> to enable the responsive mode:</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsAdaptivitytopic">SettingsAdaptivity</helplink> – Provides access to settings defining how the grid reacts to changing the window resolution, allowing you to build responsive or adaptive grid layouts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewAdaptivitySettings_AllowOnlyOneAdaptiveDetailExpandedtopic">SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded</helplink> – Specifies whether only one adaptive detail row can be expanded at a time. When this property is set to true, expanding an adaptive detail row collapses the previously expanded one.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewColumn_AdaptivePrioritytopic">GridViewColumn.AdaptivePriority</helplink> – Defines the column hiding priority when the grid is sized down. The higher the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridViewColumn_AdaptivePrioritytopic">AdaptivePriority</helplink> property value is, the earlier the column is hidden.</li>
                </ul>
                <p>Scroll to the Grid View displayed below and toggle between screen orientations using the corresponding buttons on the right to see the responsive behavior in action.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AdaptiveLayout" Title="Adaptive Layout">
        <Description>
          <![CDATA[
                <p>The adaptive layout mode allows the Grid View to automatically switch to a compact presentation when the screen resolution becomes less than or equal to the specified value. In this presentation, each data entry's fields are displayed within an adaptive detail row.</p>
                <p>Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewAdaptivitySettings_AdaptivityModetopic">SettingsAdaptivity.AdaptivityMode</helplink> to <strong>HideDataCellsWindowLimit</strong> to enable the responsive mode:</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsAdaptivitytopic">SettingsAdaptivity</helplink> – Provides access to settings defining how the grid reacts to changing the window resolution, allowing you to build responsive or adaptive grid layouts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewAdaptivitySettings_HideDataCellsAtWindowInnerWidthtopic">SettingsAdaptivity.HideDataCellsAtWindowInnerWidth</helplink> – Specifies the maximum resolution at which the grid uses the compact presentation.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridViewAdaptivitySettings_AdaptiveDetailColumnCounttopic">SettingsAdaptivity.AdaptiveDetailColumnCount</helplink> – Specifies the number of columns in an adaptive detail row.</li>
                </ul>
                <p>Scroll to the Grid View displayed below and toggle between screen orientations using the corresponding buttons on the right to see the adaptive behavior in action:</p>        
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AdaptiveLayoutWithFormLayout" Title="Adaptive Layout with FormLayout">
        <Description>
          <![CDATA[
                <p>The adaptive detail row shown in the adaptive and responsive layout modes inherits the Form Layout functionality to arrange its items. This demo illustrates how to take advantage of this feature to control which data items are displayed within the adaptive detail row and how they adapt to the different screen resolutions.</p>
                <p>You can populate the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewFormLayoutProperties_Itemstopic">SettingsAdaptivity.AdaptiveDetailLayoutProperties.Items</helplink> collection with layout items (<helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapGridViewColumnLayoutItemtopic">BootstrapGridViewColumnLayoutItem</helplink> class objects) to specify which items should be displayed in the adaptive detail row. A layout item provides settings allowing you to associate it with a data item and define how it is sized using the Bootstrap grid system functionality to fit different screen resolutions:</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebColumnLayoutItem_ColumnNametopic">ColumnName</helplink> - Specifies the name of a data column providing data to the current layout item.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewColumnLayoutItem_ColSpanLgtopic">ColSpanLg</helplink> - Specifies how many virtual columns the item should occupy on a large screen (1200px or wider).</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewColumnLayoutItem_ColSpanMdtopic">ColSpanMd</helplink> - Specifies how many virtual columns the item should occupy on a medium screen (992px or wider).</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewColumnLayoutItem_ColSpanSmtopic">ColSpanSm</helplink> - Specifies how many virtual columns the item should occupy on a small screen (768px or wider).</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewColumnLayoutItem_ColSpanXstopic">ColSpanXs</helplink> - Specifies how many virtual columns the item should occupy on an extra small screen (less than 768px).</li>
                </ul>
                <p>Refer to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118834">Form Layout Rendering</helplink> documentation topic to learn about the Form Layout rendering specifics and how to apply these specifics to construct efficient adaptive layouts.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CssAdaptivity" Title="Css Adaptivity">
        <Description>
          <![CDATA[
                <p>This demo illustrates how you can use the bootstrap classes' functionality to achieve granular control over the adaptive behavior of Grid View's visual elements. 
                The Grid View control displayed below hides its Discontinued and Quantity per Unit columns when orientated vertically, after assigning column elements (data cells, header cells, and footer cells) to the <strong>hidden-xs</strong> CSS class provided by Bootstrap. Assigning this class specifies that the element should not be displayed when the Grid View is viewed with an extra small display resolution.</p>
                <p>Similarly, some elements of the grid pager are assigned to the <strong>hidden-xs</strong> class to provide a more compact pager presentation on extra small screens.</p>
                <p>You can use other responsive utility Bootstrap classes to control the visibility of control elements with different screen sizes: <a href="http://getbootstrap.com/css/#responsive-utilities-classes">Bootstrap responsive utility classes</a></p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewDataColumn_CssClassestopic">BootstrapGridViewDataColumn.CssClasses</helplink> – Allows you to assign custom CSS classes to various grid column elements.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_CssClassesPagertopic">BootstrapGridView.CssClassesPager</helplink> – Allows you to assign custom CSS classes to pager elements.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Templates" Title="Templates" SeoTitle="Bootstrap GridView Templates Demo">
      <DemoSection Key="CellTemplate" Title="Cell Template">
        <Description>
          <![CDATA[
                <p>The Grid View control allows you to customize layouts of its visual elements using the template technology. This demo demonstrates the use of a template to display cells within the 'Details' column. The template contains a link labeled 'Details'. Clicking this link displays a popup window containing additional information about an employee.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="PreviewTemplate" Title="Preview Template">
        <Description>
          <![CDATA[
                <p>Preview Rows are used to display large memo fields or custom data across all the columns within a Grid View. This demo illustrates how to create a template to display images along with textual content within preview rows.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataToggleInColumns" Title="Data Attributes in Header">
        <Description>
          <![CDATA[
                <p>This demo demonstrates the use of the <strong>data-toggle</strong> attribute to declaratively assign an action to a control displayed within a column header template. In this demo, a button's <strong>data-toggle</strong> attribute is set to <strong>gridview-column-filterpopup</strong> to show the header filter popup.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataToggleInRows" Title="Data Attributes in Row">
        <Description>
          <![CDATA[
                <p>This demo demonstrates the use of the <strong>data-toggle</strong> attribute to declaratively assign an action to a control displayed within a data item template. In this demo, each data row displays custom Edit and Delete buttons. The Edit button's <strong>data-toggle</strong> attribute is set to <strong>gridview-datarow-edit</strong> allowing the button to start editing the current row on click. Likewise, the Delete button's <strong>data-toggle</strong> attribute is set to <strong>gridview-datarow-delete</strong> allowing the button to delete the current row. Additionally, the Title Panel template contains a custom button whose <strong>data-toggle</strong> attribute is set to <strong>gridview-newrow</strong> allowing the button to create a new data row.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <DemoGroup Key="CardView" Title="Card View" SeoTitle="Bootstrap CardView Demo" IconCssClass="icon icon-card" OrderIndex="1" >
    <PreDescription>
      <![CDATA[
        <p>
        The DevExpress Bootstrap Card View is a full-featured data presentation control that renders itself using Bootstrap CSS classes. 
        It fully supports data editing and delivers numerous end-user data shaping features, including facilities for end-user data filtering and sorting. Total summaries are also available out-of-the box.
        </p>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
          <p>The layouts of separate Card View’s visual elements are customizable using templates.</p>
          <p>The Card View has been designed to work with large data sources and supports data binding in server mode. In this mode, it only loads the records to be displayed on screen and delegates all data processing to the database server.</p>
          <p>The Card View control automatically splits content across multiple pages and a built-in pager enables end-users to navigate through data.</p> 
          <p>Extensive server-side and client-side APIs cover multiple popular customization scenarios and gives you full control over the Card View’s behavior and presentation.</p>
      ]]>
    </Description>
    <Demo Key="LargeDataBase" Title="Binding to Large DB" SeoTitle="Bootstrap GridView Binding to Large DataBase Demo">
      <DemoSection Key="BindingToLargeDatabase" Title="Binding to Large Database (Server Mode)">
        <Description>
          <![CDATA[
            <p>The Card View control supports binding to data in the server mode using the <helplink href="http://help.devexpress.com/#AspNet/clsDevExpressDataLinqEntityServerModeDataSourcetopic">EntityServerModeDataSource</helplink> component. In this mode, the Grid View loads only the minimum amount of data required for display on screen and delegates all data processing (such as grouping and sorting) to the database server. This technique significantly reduces the application's response time when working with large data sets.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="FilteringAndSorting" Title="Filtering and Sorting" SeoTitle="Bootstrap CardView Filtering and Sorting Demo">
      <DemoSection Key="SearchPanel" Title="Search Panel">
        <Description>
          <![CDATA[
            <p>The Card View control allows you to filter data and highlight search results via an integrated easy-to-use Search Panel. To enable the Search Panel, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridSearchPanelSettings_Visibletopic">SettingsSearchPanel.Visible</helplink> property to <strong>true</strong>.</p>
            <p>To use an external editor instead of the built-in search panel, assign the editor’s identifier to the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridSearchPanelSettings_CustomEditorIDtopic">SettingsSearchPanel.CustomEditorID</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridBase_SearchPanelFiltertopic">CardView.SearchPanelFilter</helplink> - Specifies the search text programmatically.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_ApplySearchPanelFiltertopic">ClientCardView.ApplySearchPanelFilter</helplink> - Sets the search text on the client-side.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewSearchPanelSettings_ColumnNamestopic">SettingsSearchPanel.ColumnNames</helplink> - Specifies particular columns to which the search panel filter should be applied. All columns are used for searching by default. The columns can be identified by a field name, column name or caption.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridDataColumnSettings_AllowFilterBySearchPaneltopic">DataColumn.Settings.AllowFilterBySearchPanel</helplink> - Prevents a particular column from being filtered using the search panel.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_SearchPanelEditorCreatetopic">GridView.SearchPanelEditorCreate</helplink> - Fires when a search panel editor is being created. Handling this event allows you to adjust the editor’s properties or provide a custom editor by specifying the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridEditorCreateEventArgs_EditorPropertiestopic">e.EditorProperties</helplink> event parameter.</li>              
            </ul>      
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HeaderFilter" Title="Header Filter">
        <Description>
          <![CDATA[
            <p>The Card View control provides a powerful data filtering mechanism that displays a dropdown list of all unique values within a column. Clicking the column header’s filter button invokes this dropdown list. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridSettings_ShowHeaderFilterButtontopic">Settings.ShowHeaderFilterButton</helplink> to <strong>true</strong> to show header filter buttons.</p>
            <p>You can set header filter settings for each data column using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewColumn_SettingsHeaderFiltertopic">Column.SettingsHeaderFilter</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridDataColumnHeaderFilterSettings_Modetopic">DataColumn.SettingsHeaderFilter.Mode</helplink> - Specifies the type of header filter for a column: CheckedList, DateRangeCalendar, DateRangePicker, List.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewColumn_FilterExpressiontopic">DataColumn.FilterExpression</helplink> - Gets the column’s filter expression.</li>
            </ul>
            <p>Note that the Card View control does not display column headers by default. To enable column headers, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewSettings_ShowHeaderPaneltopic">Settings.ShowHeaderPanel</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HeaderFilterWithCheckedListMode" Title="Header Filter - Checked List mode">
        <Description>
          <![CDATA[
            <p>The header filter can operate in <strong>CheckedList</strong> mode, in which it displays a check box list allowing an end-user to specify multiple filtering criteria. You can enable the <strong>CheckedList</strong> mode for a column's header filter by setting the column's <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridDataColumnHeaderFilterSettings_Modetopic">SettingsHeaderFilter.Mode</helplink> property to <strong>GridHeaderFilterMode.CheckedList</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AdvancedFiltering" Title="Header Filter - Custom Values">
        <Description>
          <![CDATA[
            <p>The Card View control allows you to create custom filter values, define filter criteria and display these values within the column's filter dropdown. To do this, handle the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_HeaderFilterFillItemstopic">HeaderFilterFillItems</helplink> event. The event argument contains a list of predefined filter values, which contains a data column's unique values. These values are shown in the header filter popup by default. You can modify this list and fill it with custom items. Each filter value should have a title and filter expression.</p>
            <p>In this demo, custom filter values are displayed within the 'Total' and 'Quantity' columns' filter dropdowns.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridHeaderFilterEventArgs_Valuestopic">e.Values</helplink> - A list of column header filter items.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridHeaderFilterEventArgs_AddValuetopic">e.AddValue</helplink> - Adds a new item to the list of header filter items. The Criteria Language Syntax help topic describes the filter expression syntax.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridHeaderFilterEventArgs_AddShowAlltopic">e.AddShowAll</helplink> - Adds the 'All' item to the header filter.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Sorting" Title="Sorting Data">
        <Description>
          <![CDATA[
            <p>An end-user can sort the Card View by clicking the header of a column by which data should be sorted. An arrow glyph indicates the sort order within the sorted column. The Card View can be sorted against multiple columns by clicking the required column headers while holding down the shift key.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridBehaviorSettings_AllowSorttopic">SettingsBehavior.AllowSort</helplink> property defines whether the Card View can be sorted. The default value is <strong>true</strong>.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewColumn_SortIndextopic">DataColumn.SortIndex</helplink> - Specifies a column’s position among sorted columns. The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewColumn_SortIndextopic">SortIndex</helplink> equals 1 when the column is not sorted.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewColumn_SortOrdertopic">DataColumn.SortOrder</helplink> - Specifies a column’s sort order.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_SortBytopic">CardView.SortBy</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_SortBytopic">ClientCardView.SortBy</helplink> - Sort data by the specified column using the specified sort order.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridBase_ClearSorttopic">GridView.ClearSort</helplink> - Clears sorting applied to the Card View.</li>
            </ul>
            <p>Note that the Card View control does not display column headers by default. To enable column headers, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewSettings_ShowHeaderPaneltopic">Settings.ShowHeaderPanel</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Editing" Title="Editing" SeoTitle="Bootstrap CardView Data Editing Demo">
      <DemoSection Key="EditingWithEditForm" Title="Editing With Edit Form">
        <Description>
          <![CDATA[
            <p>The Card View control provides end-user data editing functionality out of the box. By default, card editing is performed in Edit Form mode. In this mode, the Card View shows the Edit Form instead of the currently edited card. The Edit Form displays edit cells that correspond to data columns, and the <strong>Cancel/Update</strong> commands that allow end-users to discard changes or save them to a database.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewFormLayoutProperties_Itemstopic">SettingsEditing.FormLayoutProperties.Items</helplink> collection property defines the Edit Form layout. If this property is not set, the Edit Form layout is generated based on the card layout (which is controlled by the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewFormLayoutProperties_Itemstopic">CardLayoutProperties.Items</helplink> property). The following layout item types are allowed:</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewColumnLayoutItemt">BootstrapCardViewColumnLayoutItem</helplink> – On a card, displays the value of a data column to which the layout item is bound. On the Edit Form, displays an editor allowing an end-user to edit the column’s value.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewCommandLayoutItemtopic">BootstrapCardViewCommandLayoutItem</helplink> – Displays command buttons. The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewCommandLayoutItemtopic">BootstrapCardViewCommandLayoutItem</helplink> class exposes the following properties allowing you to specify which command items should be displayed: ShowEditButton, ShowDeleteButton, ShowNewButton, ShowSelectCheckbox. Additionally, you can use the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewCommandLayoutItem_CustomButtonstopic">BootstrapCardViewCommandLayoutItem.CustomButtons</helplink> collection property to create custom command buttons. Each custom button in the collection is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewCustomCommandButtontopic">BootstrapCardViewCustomCommandButton</helplink> object.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapEditModeCommandLayoutItemtopic">BootstrapEditModeCommandLayoutItem</helplink> – Displays the Update and Cancel command buttons within the Edit Form.</li>
            </ul>
            <p>By default all data editing operations are prohibited. In this demo, row insertion, deletion, and editing is explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="EditingInPopupEditForm" Title="Editing in Popup Edit Form">
        <Description>
          <![CDATA[
            <p>In this mode, the Edit Form is displayed within a popup window. To use this mode, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewEditingSettings_Modetopic">SettingsEditing.Mode</helplink> property to <strong>PopupEditForm</strong>.</p>
            <p>By default, all data editing operations are prohibited. In this demo, card insertion, deletion, and editing are explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
         ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="BatchEditingAndUpdating" Title="Batch Editing and Updating">
        <Description>
          <![CDATA[
            <p>The Card View control allows you to edit and update multiple cards on the client side and send them to the server in a single request.</p>
            <p>To enable the batch editing functionality, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewEditingSettings_Modetopic">SettingsEditing.Mode</helplink> property to <strong>Batch</strong>. In this mode, data displayed on a Card View page can be edited using in-line editors. The modified cells are highlighted. Deleted cards are also highlighted and display the Recover command item. To hide the deleted cards  from the view, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewBatchEditSettings_HighlightDeletedCardstopic">SettingsEditing.BatchEditSettings.HighlightDeletedCards</helplink> property to <strong>false</strong>. All changes are maintained on the client side until the Save changes button is clicked or all changes are canceled by clicking the Cancel changes button.</p>
            <p>If a Card View contains modified data, it displays a confirm message before a callback or postback is performed.</p>
            <p>You can customize the batch edit mode settings using the following properties.</p>
            <ul>
              <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewBatchEditSettings_EditModetopic">EditMode</helplink> property allows you to specify which control element (cell or card) is used to edit data.</li>
              <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebGridBatchEditSettings_StartEditActiontopic">StartEditAction</helplink> property specifies the action used to begin editing data.</li>
            </ul>
            <p>The client <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_batchEditApitopic">batchEditApi</helplink> property provides access to the batch editing client API. The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_BatchEditStartEditingtopic">BatchEditStartEditing</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_BatchEditEndEditingtopic">BatchEditEndEditing</helplink> events occur when a Card View switches to/leaves the batch edit mode.</p>
            <p>By default, all data editing operations are prohibited. In this demo, card insertion, deletion, and editing are explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>            
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataValidation" Title="Data Validation">
        <Description>
          <![CDATA[
            <p>The Card View Control allows you to manually validate the edited card and display errors for invalid fields. This demo demonstrates how you can provide data validation by handling the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_CardValidatingtopic">CardValidating</helplink> event.</p>
            <p>To indicate cards with invalid data, the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_HtmlCardPreparedtopic">HtmlCardPrepared</helplink> event is handled. This event is raised for each data row when the corresponding card within the card view has been created. In this sample, cards with invalid data are colored in red (a text-danger CSS class is applied).</p>
            <p>In the Edit Form, an error icon indicates an invalid field. Hover over the icon with the mouse to display a hint along with a description of the error.</p>
            <p>By default, all data editing operations are prohibited. In this demo, card insertion, deletion, and editing are explicitly enabled using settings available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_SettingsDataSecuritytopic">SettingDataSecurity</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Selection" Title="Selection and Focus" SeoTitle="Bootstrap CardView Selection and Focus Demo">
      <DemoSection Key="Focusing" Title="Focusing">
        <Description>
          <![CDATA[
            <p>When the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewBehaviorSettings_AllowFocusedCardtopic">SettingsBehavior.AllowFocusedCard</helplink> is set to <strong>true</strong>, one of the cards in the Card View control is focused. You can use this feature in multiple ways, for example, to display additional information for the focused card.</p>
            <p>An end-user can move focus to another card by clicking it. Handle the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_FocusedCardChangedtopic">FocusedCardChanged</helplink> event to respond to changing card focus.</p>
            <p>You can programmatically change card focus using the following API:</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_GetFocusedCardIndextopic">GetFocusedCardIndex</helplink> - Gets the index of the currently focused card on the client.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_SetFocusedCardIndextopic">SetFocusedCardIndex</helplink> - Sets the focused card by its index on the client.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_FocusedCardIndextopic">FocusedCardIndex</helplink> - Gets or sets the focused card index on the server-side.</li>
            </ul>
            <p>Set the focused card index to -1 on the client or server-side to reset a focused card.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Selection" Title="Selection">
        <Description>
          <![CDATA[
            <p>When card selection is enabled, the Card View control allows end-users to select cards by clicking them or enabling selection checkboxes.</p>
            <p>To show selection checkboxes within a layout item, set a layout item’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewCommandLayoutItem_ShowSelectCheckboxtopic">ShowSelectCheckBox</helplink> property to <strong>true</strong>.</p>
            <p>Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewBehaviorSettings_AllowSelectByCardClicktopic">SettingsBehavior.AllowSelectByCardClick</helplink> property to <strong>true</strong> to enable row selection via mouse click. Once set, clicking any card clears the previous selection and selects this card.</p>
            <p>To select multiple cards, click the desired rows while holding down the <kbd>Ctrl</kbd> key. Clicking a card in this manner toggles its selected state and preserves the selection. To select contiguous cards, click the first row you wish to select, hold down the <kbd>Shift</kbd> key, and click the last row. You can continue customizing the selection by clicking individual cards while holding down the <kbd>Ctrl</kbd> key.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SelectionAPI" Title="Selection API">
        <Description>
          <![CDATA[
            <p>The Card View control provides a client-side API allowing you to programmatically manipulate card selection and obtain information about the currently selected card.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_Selectiontopic">CardView.Selection</helplink> object represents an API to manipulate selection on the server-side.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxGridBase_SelectionChangedtopic">CardView.SelectionChanged</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCardView_SelectionChangedtopic">ClientCardView.SelectionChanged</helplink> - Fire when selection has been changed.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SelectRowstopic">ClientCardView.SelectRows</helplink> - Allows you to select or deselect the specified cards, or select all cards within the Card View.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SelectRowsByKeytopic">ClientCardView.SelectRowsByKey</helplink> - Allows you to select or deselect cards by their keys.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_SelectAllRowsOnPagetopic">ClientCardView.SelectAllRowsOnPage</helplink> - Allows you to select or deselect all cards displayed on the current page.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridView_UnselectRowstopic">ClientCardView.UnselectRows</helplink> - Deselects all cards or the specified cards within the Card View.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Summary" Title="Summary" SeoTitle="Bootstrap CardView Summary">
      <DemoSection Key="Summary" Title="Summary">
        <Description>
          <![CDATA[
            <p>Total summaries are aggregate function values calculated against all cards within the Card View and displayed in the summary panel when the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewSettings_ShowSummaryPaneltopic">Settings.ShowSummaryPanel</helplink> property is set to <strong>true</strong>.</p>
            <p>The Card View control stores its total summary items in the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_TotalSummarytopic">TotalSummary</helplink> collection. Each item in the collection is an instance of the <helplink href="http://help.devexpress.com/#AspNet/clsDevExpressWebASPxCardViewSummaryItemtopic">ASPxCardViewSummaryItem</helplink> class.</p>
            <p>Built-in aggregate functions include: Min, Max, Avg, Sum and Count.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ColumnTypes" Title="Column Types" SeoTitle="Bootstrap CardView Column Types Demo">
      <DemoSection Key="DataColumn" Title="Data Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewColumntopic">BootstrapCardViewColumn</helplink> is a type of a grid column that automatically determines the actual column type (and, consequently, the control used for both displaying and editing cell data) based on the type of a data field to which a column is bound:</p>
            <ul>
              <li>A Date Edit column is created for the DateTime data type.</li>
              <li>A Check Box column is created for the Bool data type.</li>
              <li>A Text column is created for any other data type.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="BinaryImageColumn" Title="Binary Image Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewBinaryImageColumntopic">BootstrapCardViewBinaryImageColumn</helplink> column used to display images for columns that contain binary data. You can access the Binary Image settings using a column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewBinaryImageColumn_PropertiesBinaryImagetopic">PropertiesBinaryImage</helplink> property.</p>
            <p>Editing settings of the BinaryImage control are available via the PropertiesBinaryImage.EditingSettings property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageEditProperties_ImageWidthtopic">PropertiesBinaryImage.ImageWidth</helplink> - Specifies the width of the image displayed within a column.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageEditProperties_ImageHeighttopic">PropertiesBinaryImage.ImageHeight</helplink> - Specifies the height of the image displayed within a column.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ButtonEditColumn" Title="Button Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewButtonEditColumntopic">BootstrapCardViewButtonEditColumn</helplink> column displays the Button Edit control as its cell editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewButtonEditColumn_PropertiesButtonEdittopic">PropertiesButtonEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButtonEditProperties_Buttonstopic">PropertiesButtonEdit.Buttons</helplink> - a collection property that allows you to specify buttons that should be displayed within the cell editor.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="CheckColumn" Title="Check Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewCheckColumntopic">BootstrapCardViewCheckColumn</helplink> is a column using a check box to display and edit data from Boolean data fields. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewCheckColumn_PropertiesCheckEdittopic">PropertiesCheckEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCheckBoxProperties_UseDisplayImagestopic">PropertiesCheckEdit.UseDisplayImages</helplink> - Specifies whether the editor's check state is represented by icons or specific texts in browse mode.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCheckBoxProperties_DisplayTextCheckedtopic">PropertiesCheckEdit.DisplayTextChecked</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCheckBoxProperties_DisplayTextUncheckedtopic">DisplayTextUnchecked</helplink> - Specifies the text that represents the checked/unchecked state of a column editor in browse mode.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewEditorCssClasses_IconCheckColumnCheckedtopic">CssClassesEditor.IconCheckColumnChecked</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridViewEditorCssClasses_IconCheckColumnUncheckedtopic">IconCheckColumnUnchecked</helplink> - Specifies the icons that represent the checked/unchecked state of a column editor in browse mode.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ComboBoxColumn" Title="Combo Box Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewComboBoxColumntopic">BootstrapCardViewComboBoxColumn</helplink> is a column whose values are edited using the Combo Box editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewComboBoxColumn_PropertiesComboBoxtopic">PropertiesComboBox</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapComboBoxProperties_Itemstopic">PropertiesComboBox.Items</helplink> - specifies collection of Combo Box items.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAutoCompleteBoxPropertiesBase_DataSourceIDtopic">PropertiesComboBox.DataSourceID</helplink> - allows to bind Combo Box item collection to a data source.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="DateEditColumn" Title="Date Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewDateColumntopic">BootstrapCardViewDateColumn</helplink> is a column using the Date Edit control to display and edit data from a DateTime data field. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewDateColumn_PropertiesDateEdittopic">PropertiesDateEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebDateEditProperties_EditFormattopic">PropertiesDateEdit.EditFormat</helplink> - Specifies possible formats of the date column: Time, DateTime, Date, Custom.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="DropDownEditColumn" Title="Drop-Down Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewDropDownEditColumntopic">BootstrapCardViewDropDownEditColumn</helplink> column provides a cell editor containing a customizable drop-down window. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCardViewDropDownEditColumn_PropertiesDropDownEdittopic">PropertiesDropDownEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapDropDownEditProperties_DropDownWindowWidthtopic">PropertiesDropDownEdit.DropDownWindowTemplate</helplink> - Specifies a template used to display the editor’s drop-down window content.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="HyperLinkColumn" Title="Hyperlink Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewHyperLinkColumntopic">BootstrapCardViewHyperLinkColumn</helplink> column represents a data column with hyperlink functionality. You can access settings of a displayed hyperlink using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewHyperLinkColumn_PropertiesHyperLinkEdittopic">PropertiesHyperLinkEdit</helplink> property.</p>
            <p>By default, if no display text is provided for a hyperlink through the corresponding settings (<helplink href="http://help.devexpress.com/#AspNet/DevExpressWebHyperLinkProperties_Texttopic">HyperLinkProperties.Text</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebHyperLinkProperties_TextFieldtopic">HyperLinkProperties.TextField</helplink>), the hyperlink displays the URL obtained from the column's data field. You can disable this behavior by setting the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewHyperLinkColumn_ShowUrlAsDisplayTexttopic">BootstrapCardViewHyperLinkColumn.ShowUrlAsDisplayText</helplink> property to <strong>false</strong>.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebHyperLinkProperties_NavigateUrlFormatStringtopic">HyperLinkProperties.NavigateUrlFormatString</helplink> - Specifies the pattern used to format the hyperlink location url in display mode.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ImageColumn" Title="Image Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewImageColumntopic">BootstrapCardViewImageColumn</helplink> is a column used to display images from specified URLs. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewImageColumn_PropertiesImagetopic">PropertiesImage</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebImageEditPropertiesBase_ImageUrlFormatStringtopic">PropertiesImage.ImageUrlFormatString</helplink> - specifies the pattern used to format the URL that points to the image displayed in the cell</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="MemoColumn" Title="Memo Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewMemoColumntopic">BootstrapCardiewMemoColumn</helplink> is a data column used to display and edit multiline text data. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewMemoColumn_PropertiesMemoEdittopic">PropertiesMemoEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMemoProperties_Columnstopic">PropertiesMemoEdit.Columns</helplink> - Gets or sets the textarea's width in characters.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMemoProperties_Rowstopic">PropertiesMemoEdit.Rows</helplink> - Gets or sets the textarea's height in characters.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ProgressBarColumn" Title="Progress Bar Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewProgressBarColumntopic">BootstrapCardViewProgressBarColumn</helplink> column presents numeric data as a progress bar. You can access settings of a displayed progress bar using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewProgressBarColumn_PropertiesProgressBartopic">PropertiesProgressBar</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebProgressBarProperties_Minimumtopic">PropertiesProgressBar.Minimum</helplink> - Specifies the minimum range value of a progress bar column (when the progress bar is empty).</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebProgressBarProperties_Maximumtopic">PropertiesProgressBar.Maximum</helplink> - Specifies the maximum range value of a progress bar column (when the progress bar is completely filled).</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="SpinEditColumn" Title="Spin Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewSpinEditColumntopic">BootstrapCardViewSpinEditColumn</helplink> is a column used to display and edit numeric data. The column data is edited using the Spin Edit control. You can access the Spin Edit settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewSpinEditColumn_PropertiesSpinEdittopic">PropertiesSpinEdit</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinEditProperties_Incrementtopic">PropertiesSpinEdit.Increment</helplink> - Specifies the value by which the spin editor's value is changed when clicking a small increment/decrement spin button.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinEditProperties_NumberFormattopic">PropertiesSpinEdit.NumberFormat</helplink> - Specifies possible display formats for a spin editor's value: Number, Currency, Percent, Custom.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinEditProperties_MinValuetopic">PropertiesSpinEdit.MinValue</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinEditProperties_MaxValuetopic">MaxValue</helplink> - Specify the minimum and maximum values of the column editor.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TagBoxColumn" Title="Tag Box Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewTagBoxColumntopic">BootstrapCardViewTagBoxColumn</helplink> is a column used to display and edit values with the Tag Box editor. You can access the cell editor’s settings using the column’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewTagBoxColumn_PropertiesTagBoxtopic">PropertiesTagBox</helplink> property.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxProperties_Tagstopic">PropertiesTagBox.Tags</helplink> - Provides access a collection of editor tags.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAutoCompleteBoxPropertiesBase_DataSourceIDtopic">PropertiesTagBox.DataSourceID</helplink> - Allows to bind the tags collection to a data source.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxProperties_AllowCustomTagstopic">PropertiesTagBox.AllowCustomTags</helplink> - Specifies whether end-users can input tokens that are not contained in the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxProperties_Tagstopic">Tags</helplink> collection.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TextColumn" Title="Text Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewTextColumntopic">BootstrapCardViewTextColumn</helplink> is a data column used to display and edit text. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewTextColumn_PropertiesTextEdittopic">PropertiesTextEdit</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="TimeEditColumn" Title="Time Edit Column">
        <Description>
          <![CDATA[
            <p>A <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewTimeEditColumntopic">BootstrapCardViewTimeEditColumn</helplink> is a column using the Time Edit control to display and edit data from a DateTime data field. You can access the cell editor's settings using the column's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewTimeEditColumn_PropertiesTimeEdittopic">PropertiesTimeEdit</helplink> property.</p>
            <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.TimeEditProperties.EditFormat.property">PropertiesTimeEdit.EditFormat</helplink> - specifies possible formats of the date column: Time, DateTime, Date, Custom</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ConditionalFormatting" Title="Conditional Formatting" SeoTitle="Bootstrap CardView Conditional Formatting Demo">
      <DemoSection Key="CardFormatting" Title="Card Formatting">
        <Description>
          <![CDATA[
            <p>The Card View control supports conditional formatting, i.e., automatically applies cell formatting based on the specified rules. This feature helps end-users quickly notice critical information, identify trends and exceptions, and compare data.</p>
            <p>Formatting rules can be created at design time or programmatically. The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardView_FormatConditionstopic">FormatConditions</helplink> property provides an access to a collection of rules, which are represented by the <helplink href="http://help.devexpress.com/#AspNet/clsDevExpressWebGridFormatConditionBasetopic">GridFormatConditionBase</helplink> class descendants.</p>
            <p>In this demo, the <strong>ApplyToCard</strong> property is set to <strong>true</strong> to specify that formatting should be applied to the whole card.</p>
            <p>The style settings applied to card cells can be exported together with data to various formats using our data aware export engine. 
            Moreover, when we export data to Excel formats (XLS and XLSX), the format conditions are transformed to corresponding Excel conditional formatting rules. 
            Therefore, you can manage the rules in Excel after export. You can take a look at a card view export capabilities in the <a href="Export.aspx#ExportWithFormatConditions">Export with Format Conditions</a> demo.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemFormatting" Title="Item Formatting">
        <Description>
          <![CDATA[
            <p>This example demonstrates conditional formatting applied to separate card items (in cases when a format condition object’s <strong>ApplyToCard</strong> property is not set).</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Export" Title="Export" SeoTitle="Bootstrap CardView Export Demo">
      <DemoSection Key="ExportingTo" Title="Exporting to PDF, XLS, XLSX, CSV and RTF">
        <Description>
          <![CDATA[
            <p>The Card View control allows you to export Card View data with ease. Data can be exported to a file or stream in the following formats:</p>
            <ul>
              <li>PDF (WritePdf, WritePdfToResponse)</li>
              <li>XLS (WriteXls, WriteXlsToResponse)</li>
              <li>XLSX (WriteXlsx, WriteXlsxToResponse)</li>
              <li>RTF (WriteRtf, WriteRtfToResponse)</li>
              <li>CSV (WriteCsv, WriteCsvToResponse)</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ExportSelectedRecords" Title="Export Selected Records">
        <Description>
          <![CDATA[
            <p>To export only the currently selected cards, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCardViewExportSettings_ExportSelectedCardsOnlytopic">SettingsExport.ExportSelectedCardOnly</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ExportWithFormatConditions" Title="Export with Format Conditions">
        <Description>
          <![CDATA[
            <p>When data is exported to a PDF or RTF file, the Card View maintains the style settings applied to the cells (with the exception of images). 
            Moreover, when you export data to Excel formats (XLS and XLSX), the format conditions are transformed to corresponding Excel conditional formatting rules. 
            Therefore, you can manage the rules in Excel after export.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Toolbar" Title="Toolbar" SeoTitle="Bootstrap CardView Toolbar Customization">
      <DemoSection Key="Toolbar" Title="Toolbar">
        <Description>
          <![CDATA[
            <p>The Card View control can display toolbars aggregating commands related to the Card View and its data.</p>
            <p>All Card View toolbars are available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_Toolbarstopic">Toolbars</helplink> collection property, in which each toolbar is a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewToolbartopic">BootstrapCardViewToolbar</helplink> object. Each item on the toolbar is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCardViewToolbarItemtopic">BootstrapCardViewToolbarItem</helplink> object available through the toolbar’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewToolbar_Itemstopic">BootstrapCardViewToolbar.Items</helplink> collection property.</p>
            <p>A toolbar item's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewToolbarItemBase_Commandtopic">Command</helplink> property allows you to associate the toolbar item with one of the built-in commands or custom logic implemented in the Card View’s server-side or client-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardView_ToolbarItemClicktopic">ToolbarItemClick</helplink> event handler.</p>
            <p>Refer to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewToolbarCommandEnumtopic">BootstrapCardViewToolbarCommand</helplink> documentation topic to view the full list of available commands.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ToolbarCustomItems" Title="Custom Toolbar Items">
        <Description>
          <![CDATA[
            <p>You can provide custom logic for a toolbar item by setting its <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCardViewToolbarItemBase_Commandtopic">Command</helplink> property to <strong>Custom</strong>. Handle the client-side <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridBase_ToolbarItemClicktopic">ToolbatItemClick</helplink> event to process a toolbar item click.</p>
            <p>If you also want to perform server-side processing, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientProcessingModeEventArgs_processOnServertopic">processOnServer</helplink> client event argument to <strong>true</strong>, which forces a callback after the client-side processing is finished.</p>
            <p>You can specify that the server-side processing should be initiated by a postback rather than a callback by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientGridToolbarItemClickEventArgs_usePostBacktopic">usePostBack</helplink> client event argument to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Templates" Title="Templates" SeoTitle="Bootstrap CardView Templates Demo">
      <DemoSection Key="CardTemplate" Title="Card Template">
        <Description>
          <![CDATA[
            <p>The Card View control allows you to customize layouts of its visual elements using the template technology. 
            This example demonstrates how to use templates to create custom card layouts.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataToggleInHeaders" Title="Data Attributes in Header">
        <Description>
          <![CDATA[
            <p>This demo demonstrates the use of the <strong>data-toggle</strong> attribute to declaratively assign an action to a control displayed within a header template. In this demo, an &lt;a&gt; element’s data-toggle attribute is set to <strong>cardview-column-sort</strong> to sort data by the column’s values and a button's <strong>data-toggle</strong> attribute is set to <strong>cardview-column-filterpopup</strong> to show the header filter popup.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DataToggleInCards" Title="Data Attributes in Card">
        <Description>
          <![CDATA[
            <p>This demo demonstrates the use of the <strong>data-toggle</strong> attribute to declaratively assign an action to a control displayed within a data item template. In this demo, each data row displays custom Edit and Delete buttons. The Edit button's <strong>data-toggle</strong> attribute is set to <strong>cardview-card-edit</strong> allowing the button to start editing the current card on click. Likewise, the Delete button's <strong>data-toggle</strong> attribute is set to <strong>cardview-card-delete</strong> allowing the button to delete the current card. Additionally, the Title Panel template contains a custom button whose <strong>data-toggle</strong> attribute is set to <strong>cardview-newcard</strong> allowing the button to create a new card.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <DemoGroup Key="Charts" Title="Charts" SeoTitle="Bootstrap Chart Controls Demo" IconCssClass="icon icon-chart" OrderIndex="2">
    <PreDescription>
      <![CDATA[
        <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118575">DevExpress Bootstrap Charts</helplink> are a set of server-side wrappers for JavaScript-based DevExtreme Chart widgets that allow you to use the familiar ASP.NET approach to integrate DevExtreme Charts into your web application. The Bootstrap Chart is a control that visualizes data from a local or remote storage using a great variety of series types along with different interactive elements, such as tooltips, crosshair pointer, a legend, etc. You can use one of these chart types depending on your task:</p>
          <ul>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118689">BootstrapChart</helplink> to show data in a 2d coordinate system</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118691">BootstrapPieChart</helplink> to visualize portions of data as segments in a circle</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118691">BootstrapPolarChart</helplink> to represent data in a polar coordinate system</li>
          </ul>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>Bootstrap Charts help you transform data to its most appropriate, concise and readable visual representation. Regardless of the data source or manner in which application information is stored on disk, Bootstrap Charts guarantee flexibility and speed in its consumption of input data as well as its ability to output/render information on screen or on the printed page.</p>
      ]]>
    </Description>
    <Demo Key="DataBinding" Title="Data Binding" SeoTitle="Bootstrap Charts Data Binding Demo">
      <DemoSection Key="DataSourceControl" Title="Data Source Controls">
        <Description>
          <![CDATA[
            <p>The Chart control can obtain data from one of ASP.NET data source controls (such as <strong>EntityDataSource</strong>) on the server side. It is the easiest way to provide large amounts of data from the database to the control, and it is the right choice if you do not need to get data from third-party sources.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="JSON" Title="JSON Files">
        <Description>
          <![CDATA[
            <p>If your server stores data in JSON, performing AJAX requests is inevitable. But instead of configuring these requests manually, assign the URL of your data storage (in this demo, a JSON file) to the <helplink href="https://documentation.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapWebClientUIWidget_DataSourceUrltopic">DataSourceUrl</helplink> property, and the Chart will do the rest. This URL may specify an absolute or relative path to the resource.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="JSONP" Title="JSONP">
        <Description>
          <![CDATA[
            <p>You can use a JSONP callback parameter supported by <helplink href="http://api.jquery.com/jQuery.ajax/">jQuery.ajax()</helplink> to access a web service that implements a JSONP (JSON with padding) endpoint.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Selection" Title="Selection" SeoTitle="Bootstrap Charts Selection Demo">
      <DemoSection Key="SingleSelection" Title="Single Selection">
        <Description>
          <![CDATA[
            <p>The Chart control supports selection of points and series with a mouse click. To allow selecting a single item at a time, set the Chart control’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartBase_PointSelectionModetopic">PointSelectionMode</helplink> (for points) or <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChart_SeriesSelectionModetopic">SeriesSelectionMode</helplink> (for series) property to <strong>Single</strong>.</p>
            <p>This demo illustrates the use of the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartBase_PointSelectionModetopic">PointSelectionMode</helplink> property and the client-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_PointClicktopic">PointClick</helplink> event to implement single item selection in the Chart.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MultipleSelection" Title="Multiple Selection">
        <Description>
          <![CDATA[
            <p>To allow multiple item selection, set the Chart control’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartBase_PointSelectionModetopic">PointSelectionMode</helplink> (for points) or <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChart_SeriesSelectionModetopic">SeriesSelectionMode</helplink> (for series) property to <strong>Multiple</strong>.</p>
            <p>This demo illustrates the use of the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChart_SeriesSelectionModetopic">SeriesSelectionMode</helplink> property and the client-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChartClientSideEvents_SeriesClicktopic">SeriesClick</helplink> event to implement multiple item selection in the Chart.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Customization" Title="Customization" SeoTitle="Bootstrap Charts Customization Demo">
      <DemoSection Key="Points" Title="Points">
        <Description>
          <![CDATA[
            <p>By default, all series points in a chart are identical, but you can specify a unique appearance for individual points using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartBase_OnClientCustomizePointtopic">OnClientCustomizePoint</helplink> property. A client-side callback function assigned to this property should return an object containing modified point options. See the <helplink href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/dxChart/Configuration/series/point/">point</helplink> object for information about all options available for customization.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Series" Title="Series">
        <Description>
          <![CDATA[
            <p>To specify individual options of a particular series, assign a client-side callback function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartSeriesTemplateSettings_OnClientCustomizeSeriestopic">SeriesTemplate.OnClientCustomizeSeries</helplink> property.</p>
            <p>Define a data source, set the argument and value fields using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartCommonSeriesBase_ArgumentFieldtopic">CommonSeriesSettings.ArgumentField</helplink> and <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartCommonSeriesBase_ValueFieldtopic">CommonSeriesSettings.ValueField</helplink> properties, which will apply to all series. Then, define a template for the series using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChart_SeriesTemplatetopic">SeriesTemplate</helplink> property. Assign the data source field that specifies the series name to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartSeriesTemplateSettings_NameFieldtopic">SeriesTemplate.NameField</helplink> property.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartSeriesTemplateSettings_OnClientCustomizeSeriestopic">OnClientCustomizeSeries</helplink> property specifies a callback function that should return a <helplink href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/dxChart/Configuration/series/">series</helplink> object containing customized settings of an individual series.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Axes" Title="Axes">
        <Description>
          <![CDATA[
            <p>To customize the text displayed by axis labels or the hint that appears when a user points to an axis label, assign a client-side callback function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartAxisLabelSettings_OnClientCustomizeTexttopic">Label.OnClientCustomizeText</helplink> or <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartAxisLabelSettings_OnClientCustomizeHinttopic">Label.OnClientCustomizeHint</helplink> property of the required axis.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Tooltip" Title="Tooltip">
        <Description>
          <![CDATA[
            <p>To customize the appearance of a particular tooltip, use the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetTooltipSettings_OnClientCustomizeTooltiptopic">Tooltip.OnClientCustomizeTooltip</helplink> property. This property should be assigned a function returning an object containing customized settings. The following fields can be specified in this object.</p>
            <ul>
            <li><strong>color</strong> - Specifies the color of a tooltip.</li>
            <li><strong>text</strong> - Specifies the text displayed by a tooltip.</li>
            <li><strong>html</strong> - Specifies the HTML markup for a tooltip content. If you are going to use external resources (for example, images) in the markup, specify the size of the area they will occupy.</li>
            <li><strong>fontColor</strong> - Specifies the color of the text displayed by a tooltip.</li>
            <li><strong>borderColor</strong> - Specifies the color of the tooltip border.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ClientSideEvents" Title="Client-Side Events" SeoTitle="Bootstrap Charts Client-Side Events Demo">
      <DemoSection Key="ClicksAndHover" Title="Clicks and Hover">
        <Description>
          <![CDATA[
            <p>The following events allow you to respond to mouse clicks on various elements of the Сhart.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChartClientSideEvents_ArgumentAxisClicktopic">ArgumentAxisClick</helplink></li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_LegendClicktopic">LegendClick</helplink></li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChartClientSideEvents_SeriesClicktopic">SeriesClick</helplink></li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_PointClicktopic">PointClick</helplink></li>
            </ul>
            <p>You can handle mouse hover events for points and series of the Сhart.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChartClientSideEvents_SeriesHoverChangedtopic">SeriesHoverChanged</helplink></li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_PointHoverChangedtopic">PointHoverChanged</helplink></li>
            </ul>
            <p>When implementing a handling function, use the object passed to it as its parameter. Among the fields of this object, you can find the element whose state (click, hover) has been changed.</p>
          ]]>
        </Description>
      </DemoSection>
      
      <DemoSection Key="Selection" Title="Selection">
        <Description>
          <![CDATA[
            <p>The Chart supports selection of points and series with a mouse click, to which you can respond using the following events.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCoordinateSystemChartClientSideEvents_SeriesSelectionChangedtopic">SeriesSelectionChanged</helplink></li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_PointSelectionChangedtopic">PointSelectionChanged</helplink></li>
            </ul>
            <p>When implementing a handling function, use the object passed to it as its parameter. Among the fields of this object, you can find the element whose selection has been changed.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="Tooltips" Title="Tooltips">
        <Description>
          <![CDATA[
            <p>A point's tooltip appears when a user moves the mouse cursor over the point. When a tooltip appears, you can perform specific actions by handling the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_TooltipShowntopic">TooltipShown</helplink> event. Additionally, when a tooltip is hidden, you can perform specific actions by handling the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_TooltipHiddentopic">TooltipHidden</helplink> event. The event parameter object provides access to the series point whose tooltip has been shown/hidden.</p>
          ]]>
        </Description>
      </DemoSection>

      <DemoSection Key="ChartControlState" Title="Chart Control State">
        <Description>
          <![CDATA[
            <p>This demo illustrates the usage of client-side events provided by the Chart control.</p>
            <p>Handle the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Disposingtopic">Disposing</helplink> event to perform a custom action when the widget is being removed.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEventsBase_Donetopic">Done</helplink> event fires when the Series and Point chart elements are ready to be accessed.</p>
            <p>When an error or warning appears, the widget notifies you by passing a message to the browser console. This message contains the ID of the incident, a brief description, and a link to the <a href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/Errors_and_Warnings/">Errors and Warnings</a> document where further information about this incident can be found. However, you can handle errors and warnings the way you require. To do this, implement a client-side function performing the required actions and assign it to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_IncidentOccurredtopic">IncidentOccurred</helplink> event. Within this function, you have access to the information about an occurred incident. This information can be accessed from the <strong>Target</strong> field of the object passed to the callback function as a parameter. This information includes the following.<p>
            <ul>
              <li><strong>id</strong> - Contains the ID of an incident. The full list of IDs can be found in the <a href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/Errors_and_Warnings/">Errors and Warnings</a> document.</li>
              <li><strong>type</strong> - Contains the type of an incident. This field equals <em>'error'</em> for errors or <em>'warning'</em> for warnings.</li>
              <li><strong>args</strong> - Contains the argument of an incident's message. The content of this field varies greatly, depending on the incident. For example, it may contain the name of a data source field that has not been specified correctly, or the name of an option that has not been set properly.</li>
              <li><strong>text</strong> - Contains text passed to the browser console. This text includes the content of the <strong>args</strong> field if there is any.</li>
              <li><strong>widget</strong> - Contains the name of a widget that produced the error or warning.</li>
              <li><strong>version</strong> - Contains the currently used version of the ChartJS library.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Exporting" Title="Exporting">
        <Description>
          <![CDATA[
            <p>To perform a custom action before Chart data is exported, assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Exportingtopic">Exporting</helplink> event. For example, you can cancel exporting using the <strong>Cancel</strong> field of the event parameter object.</p>
            <p>Assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Exportedtopic">Exported</helplink> event if you need to perform a custom action after Chart data is exported. For example, this function can notify the user that the exporting has completed.</p>
            <p>To perform a custom action before a file with exported data is saved on the user's local storage, assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_FileSavingtopic">FileSaving</helplink> event. Using the <strong>Cancel</strong> field of the event parameter object, you can cancel file saving.</p>
          ]]>
        </Description>
      </DemoSection>


      <DemoSection Key="Zoom" Title="Zoom">
        <Description>
          <![CDATA[
            <p>When you deal with a large amount of data, providing an efficient way of navigating this data is essential. The Chart control allows you to enable built-in scrolling and zooming. You can use the mouse wheel or the "pinch" gesture for zooming and the horizontal slide gesture across the chart (using mouse or touch interface) for scrolling. Write a handler for the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEvents_ZoomStarttopic">ZoomStart</helplink> (<helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartClientSideEvents_ZoomEndtopic">ZoomEnd</helplink>) event to perform specific operations when zooming or scrolling begins (ends).</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Export" Title="Export" SeoTitle="Bootstrap Charts Export Demo">
      <DemoSection Key="ExportingPrintingMenu" Title="Exporting/Printing Menu">
        <Description>
          <![CDATA[
            <p>This feature allows a user to print a chart displayed by the control or export it to one of the supported document formats. The control displays an "Exporting/Printing" button when exporting is enabled, which invokes a drop-down menu that lists exporting and printing commands. The following document formats are supported: PNG, PDF, JPEG, SVG and GIF.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ExportAndPrintingAPI" Title="Export and Printing API">
        <Description>
          <![CDATA[
            <p>This demo illustrates the <strong>ExportTo</strong> and <strong>Print</strong> client API methods used to initiate exporting and printing from code using the <i>Print</i> and <i>Export</i> buttons above the Chart. Clicking the <i>Print</i> button invokes the browser's Print dialog and clicking the <i>Export</i> button saves the chart as a PNG file to your local storage.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="BarSeries" Title="Bar Series" SeoTitle="Bootstrap Charts Types Bar Series Demo">
      <DemoSection Key="StandardBar" Title="Standard Bar">
        <Description>
          <![CDATA[
            <p>This example illustrates the ease with which you can create a bar chart.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SideBySideBar" Title="Side-by-Side Bar">
        <Description>
          <![CDATA[
            <p>This example illustrates a Side-By-Side Bar series view, in which bars are positioned side-by-side to help compare values across different categories.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="StackedBar" Title="Stacked Bar">
        <Description>
          <![CDATA[
            <p>This example illustrates a Stacked Bar series view, which, unlike the side-by-side bar series, can present both the proportion and the total value of each data category using rectangular bars stacked on top of one another.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="FullStackedBar" Title="Full Stacked Bar">
        <Description>
          <![CDATA[
            <p>This example illustrates a Full-Stacked Bar series view, which is useful to compare the percentage value of various bar series for each argument. The height of each bar always equals 100%.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SideBySideStackedBar" Title="Side-by-Side Stacked Bar">
        <Description>
          <![CDATA[
            <p>This example shows the Side-by-Side Stacked Bar series view. This view allows you to stack series having the same Stacked property value into the same bars and combines the advantages of both the Side-by-Side Bar and Stacked Bar view types.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SideBySideFullStackedBar" Title="Side-by-Side Full-Stacked Bar">
        <Description>
          <![CDATA[
            <p>This example shows the Side-by-Side Full-Stacked Bar series view. This view allows you to stack series having the same Stacked property value into the same bars and combines the advantages of both the Side-by-Side Bar and Full-Stacked Bar view types.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="LineSeries" Title="Line And Point Series" SeoTitle="Bootstrap Charts Types Line Point Spline Scatter Bubble Step Series Demo">
      <DemoSection Key="Line" Title="Line">
        <Description>
          <![CDATA[
            <p>This example shows the Line series view. This view is useful when you need to show line trends for several series on the same diagram and to compare the values of several series for the same points arguments.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Spline" Title="Spline">
        <Description>
          <![CDATA[
            <p>This example shows the Spline series view. This view is similar to the Line chart but plots a fitted curve through each data point in a series.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Scatter" Title="Scatter">
        <Description>
          <![CDATA[
            <p>This example shows the Scatter series view. You can use Scatter whenever you need to allow the user to draw their conclusions about information displayed within the chart.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="StepLine" Title="Step Line">
        <Description>
          <![CDATA[
            <p>This example shows the Step Line series view. This view is useful when you need to show how much values have changed for different points of the same series.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Bubble" Title="Bubble">
        <Description>
          <![CDATA[
            <p>This example shows a Bubble series view. This chart, in addition to the XY point diagram capabilities, allows you to visually represent the Weight of a series point by a bubble's size.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="FinancialSeries" Title="Financial Series" SeoTitle="Bootstrap Charts Types Financial Series Stock Candlestick Demo">
      <DemoSection Key="Stock" Title="Stock">
        <Description>
          <![CDATA[
            <p>In this example, the Stock series displays variations in stock price throughout the course of a given day.</p>
            <p>Left and right lines at each point represent the Open and Close prices, and the bottom and top values of the vertical line shown at each point represents the Low and High prices.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Candlestick" Title="Candlestick">
        <Description>
          <![CDATA[
            <p>In this example, the Candlestick series displays variations in stock price throughout the course of a given day.</p>
            <p>A filled rectangle represents the Open and Close prices, and the bottom and top values of the vertical line shown at each point represent the Low and High prices.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="AreaSeries" Title="Area Series" SeoTitle="Bootstrap Charts Types Area Series Spline Step Demo">
      <DemoSection Key="Area" Title="Area">
        <Description>
          <![CDATA[
            <p>This demo shows the Area series view. This view is useful when you need to show trends for several series on the same diagram and also demonstrate the relationship of parts to a whole.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SplineArea" Title="Spline Area">
        <Description>
          <![CDATA[
            <p>This example shows the Spline Area series view. This view is similar to the Area chart but plots a fitted curve through each data point in a series.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="StepArea" Title="Step Area">
        <Description>
          <![CDATA[
            <p>This demo illustrates the Step Area series view, which shows how much values have changed for different points of the same series.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="RangeSeries" Title="Range Series" SeoTitle="Bootstrap Charts Types Range Series Demo">
      <DemoSection Key="RangeBar" Title="Range Bar">
        <Description>
          <![CDATA[
            <p>This example illustrates the use of the range bar series type. Range bars can be used to display value ranges corresponding to specified arguments. The data displays as sets of rectangular bars beginning and ending at a specified values.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RangeArea" Title="Range Area">
        <Description>
          <![CDATA[
            <p>Range area series can be used to display value ranges corresponding to specified arguments. The data displays as a color-filled space between the line that joins the beginning the end series points.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="PieSeries" Title="Pie Series" SeoTitle="Bootstrap Charts Types Pie Series Demo">
      <DemoSection Key="Pie" Title="Pie">
        <Description>
          <![CDATA[
            <p>This example demonstrates the Pie Chart control, which is used to compare percentage values of different point arguments in the same series.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="PieMultipleSeries" Title="Pie with Multiple Series">
        <Description>
          <![CDATA[
            <p>This example illustrates the ability of a Pie Chart to display multiple series as nested rings.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Doughnut" Title="Doughnut">
        <Description>
          <![CDATA[
            <p>This example shows the Pie Chart in the Doughnut mode, which is similar to the default mode, but the chart displays a pie with a non-zero radius hole.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="PolarRadarCharts" Title="Polar and Radar Charts" SeoTitle="Bootstrap Charts Types Polar Radar Charts Demo">
      <DemoSection Key="ContinuousData" Title="Continuous Data">
        <Description>
          <![CDATA[
            <p>In this example, the Polar Chart control visualizes a curve that has the shape of a petalled flower. This curve is commonly known as "rose" or "rhodonea", and a line series type visualizes it.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DiscreteData" Title="Discrete Data">
        <Description>
          <![CDATA[
            <p>This example demonstrates how to visualize discrete data using the Polar Chart control. Months in the data source form discrete categories that divide the PolarChart.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SpiderWeb" Title="Spider Web">
        <Description>
          <![CDATA[
            <p>This example displays the Spider Web mode of the Polar Chart control. In this mode, chart sectors are straight rather than circular. This mode is enabled using the UseSpiderWeb option.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="WindRose" Title="Wind Rose">
        <Description>
          <![CDATA[
            <p>This example illustrates a Wind Rose using the Polar Chart control with the StackedBad series type.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="PeriodicData" Title="Periodic Data">
        <Description>
          <![CDATA[
            <p>This example illustrates the visualization of periodic data. The Period option of the argument axis is specified to notify the chart that data is periodic.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="InvertedChart" Title="Inverted Chart">
        <Description>
          <![CDATA[
            <p>This example shows the Polar Chart with inverted axes.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <DemoGroup Key="Navigation" Title="Navigation" SeoTitle="Bootstrap Navigation Controls Demo" IconCssClass="icon icon-nav" OrderIndex="3">
    <PreDescription>
      <![CDATA[
        <p>The DevExpress Bootstrap Controls suite ships with a set of navigation tools that will help you build easy-to-navigate websites and web applications.</p>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>The following controls are included:</p>
        <ul>
            <li>The Ajax-enabled Menu, Accordion, and Tree View controls visualize the structure of your web application’s resources using hierarchical data presentation. These controls can function in a data-bound mode, in which they automatically retrieve their items from a hierarchical data source such as a <strong>SiteMapDataSource</strong> or <strong>XmlDataSource</strong>.</li>
            <li>The standalone Pager control provides a user interface that you can use to implement custom page navigation within your web application.</li>
            <li>The Popup Control is used to display overlapping temporary windows that appear separately from an application's main window, and are typically used to display quick reference information.</li>
        </ul>
      ]]>
    </Description>
    <Demo Key="Accordion" Title="Accordion" SeoTitle="Bootstrap Accordion Demo" >
      <DemoSection Key="DefaultAccordion" Title="Default Accordion">
        <Description>
          <![CDATA[
                <p>The <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapAccordion.class">Accordion</helplink> control allows you to provide navigation capabilities to your web application. The control displays navigation items arranged in collapsible groups. Groups within the Accordion can be accessed through the Groups property. Each group has a collection of items available through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordionGroup_Itemstopic">BootstrapAccordionGroup.Items</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemsSelection" Title="Items Selection">
        <Description>
          <![CDATA[
              <p>The Accordion control supports selection of items with a mouse click client/server-side API. Set the Accordion control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_AllowSelectItemtopic">AllowSelectItem</helplink> property to <strong>true</strong> to allow item selection.</p>
              <p>Use the following API to programmatically get or set the selection status:</p>
              
              <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientNavBar_SetSelectedItemtopic">BootstrapClientAccordion.SetSelectedItem</helplink> – Sets the selected item on the client.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientNavBar_GetSelectedItemtopic">BootstrapClientAccordion.GetSelectedItem</helplink> – Gets the selected item on the client.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_SelectedItemtopic">BootstrapAccordion.SelectedItem</helplink> – Gets or sets the selected Item on the server.</li>
              </ul>              
              
              <p>Moreover, the Accordion control can automatically select an item for a current page. You can control this behavior using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_SyncSelectionModetopic">SyncSelectionMode</helplink> property.</p> 
              <p>To respond to selection changes, subscribe to the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientNavBar_ItemClicktopic">BootstrapClientAccordion.ItemClick</helplink> client event or <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_ItemClicktopic">ItemClick</helplink> server event.</p> 

              <aside>
                  <p>Note that only one item can be selected at a time.</p>
              </aside>           ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoCollapse" Title="Auto Collapse">
        <Description>
          <![CDATA[
                <p>When the Auto Collapse feature is activated, only one Accordion group can be expanded at a time. To activate this functionality, set the Accordion control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_AutoCollapsetopic">AutoCollapse</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadContentOnCallbacks" Title="Load Content on Callbacks">
        <Description>
          <![CDATA[
                <p>The Accordion control supports loading the content of collapsed groups using callbacks the first time a group is expanded. This approach allows the Accordion control to avoid the initial transfer of the group’s data to the client, thus optimizing the page’s load time. To enable callbacks, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_EnableCallBackstopic">EnableCallBacks</helplink> property to <strong>true</strong>.</p>
                <p>When a group is expanded for the first time, its content is retrieved from the server and then cached on the client. The next time the group is expanded, its content is taken from the cache and no callback to the server is performed.</p>
                <p><small>Note that in this demo the callback time is intentionally extended so that the loading indicator is visible during callbacks.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The Accordion control can display supplementary information for any item or group within a badge. A badge can display text, an icon or both. Use the following API to configure badges on the server side:</p>                
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordionGroup_HeaderBadgetopic">BootstrapAccordionGroup.HeaderBadge</helplink> – Provides access to group header badge settings allowing you to specify the badge text and/or icon.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordionItem_Badgetopic">BootstrapAccordionItem.Badge</helplink> - Provides access to item badge settings allowing you to specify the badge text and/or icon.</li>
                </ul>          
                <p>The methods listed below allow you to manipulate badges on the client:</p>                
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionGroup_GetHeaderBadgeTexttopic">BootstrapClientAccordionGroup.GetHeaderBadgeText</helplink> - Gets the text of the group header badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionGroup_SetHeaderBadgeTexttopic">BootstrapClientAccordionGroup.SetHeaderBadgeText</helplink> - Sets the text of the group header badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionGroup_GetHeaderBadgeIconCssClasstopic">BootstrapClientAccordionGroup.GetHeaderBadgeIconCssClass</helplink> - Gets the icon CSS class of the group header badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionGroup_SetHeaderBadgeIconCssClasstopic">BootstrapClientAccordionGroup.SetHeaderBadgeIconCssClass</helplink> - Sets the icon CSS class of the group header badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionItem_GetBadgeTexttopic">BootstrapClientAccordionItem.GetBadgeText</helplink> - Gets the text of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionItem_SetBadgeTexttopic">BootstrapClientAccordionItem.SetBadgeText</helplink> - Sets the text of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionItem_GetBadgeIconCssClasstopic">BootstrapClientAccordionItem.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientAccordionItem_SetBadgeIconCssClasstopic">BootstrapClientAccordionItem.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the item badge.</li>
                </ul>                
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordionGroup_HeaderBadgetopic">BootstrapAccordionGroup.HeaderBadge</helplink> and <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordionItem_Badgetopic">BootstrapAccordionItem.Badge</helplink> properties do not effect templated group headers and items.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostBack" Title="Auto PostBack">
        <Description>
          <![CDATA[
                <p>The Auto Postback feature allows the Accordion control to automatically initiate a postback when an end-user performs an action that you can handle on the server side (e.g., clicks an accordion item). Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_AutoPostBacktopic">AutoPostBack</helplink> property to <strong>true</strong> to enable this feature.</p>
                <p>Depending on the performed action, one of the following events fires on the server in response to a postback:</p>
                
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_ItemClicktopic">ItemClick</helplink> – Fires when an end-user clicks an accordion item.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_HeaderClicktopic">HeaderClick</helplink> – Fires when an end-user clicks a group header.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_ExpandedChangingtopic">ExpandedChanging</helplink> – Fires when a group is about to expand or collapse.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_ExpandedChangedtopic">ExpandedChanging</helplink> – Fires when a group has expanded or collapsed.</li>
                </ul>   
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
                <p>The Accordion control supports binding to a data source which can be any object that implements the <strong>IHierarchicalEnumerable</strong> or <strong>IHierarchicalDataSource</strong> interface (e.g., <strong>SiteMapDataSource</strong>, <strong>XmlDataSource</strong>, etc.). Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxHierarchicalDataWebControl_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to an Accordion control.</p>
                <p>A data-bound Accordion control automatically creates accordion groups and items for all recognized first and second level data items respectively. Created groups and items obtain values for their properties from data item attributes with matching names. You can also explicitly specify mappings between group or item properties and names of data item attributes using the following properties.</p>
                
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_GroupDataFieldstopic">GroupDataFields</helplink> – Provides access to properties specifying data fields from which accordion group settings should be obtained.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapAccordion_ItemDataFieldstopic">ItemDataFields</helplink> – Provides access to properties specifying data fields from which accordion item settings should be obtained.</li>
                </ul>
                <p>You can modify settings of each auto-created <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapAccordionItem.class">Item</helplink> or <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapAccordionGroup.class">Group</helplink> object during data binding in the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapAccordion.ItemDataBound.event">ItemDataBound</helplink> and <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapAccordion.GroupDataBound.event">GroupDataBound</helplink> events.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Accordion control supports templates allowing you to customize control appearance and layout. 
                A template can be applied to all items or groups (using control level templates) or specific ones (using item/group level templates). 
                Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapAccordiontopic">BootstrapAccordion</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_GroupContentTemplatetopic">GroupContentTemplate</helplink> – Specifies a common template used for displaying the content of all groups within the current accordion control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_GroupHeaderTemplatetopic">GroupHeaderTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_GroupHeaderTemplateCollapsedtopic">GroupHeaderTemplateCollapsed</helplink> – Specify common template used for displaying the headers of all groups within the current accordion control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_ItemTemplatetopic">ItemTemplate</helplink> – Specifies a common template used for displaying the content of all items within the current accordion control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxNavBar_ItemTextTemplatetopic">ItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of all items within the current accordion control.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapAccordionGrouptopic">BootstrapAccordionGroup</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarGroup_ContentTemplatetopic">ContentTemplate</helplink> – Specifies a common template used for displaying the content of the current accordion group.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarGroup_HeaderTemplatetopic">HeaderTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarGroup_HeaderTemplateCollapsedtopic">HeaderTemplateCollapsed</helplink> – Specifies a common template used for displaying the header of the current accordion group.</li>
                  <li><helplink href="http://help.devexpress.com/#WPF/DevExpressXpfNavBarNavBarGroup_ItemTemplatetopic">ItemTemplate</helplink> – Specifies a common template used for displaying the content of all items within the current accordion group.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarGroup_ItemTextTemplatetopic">ItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of all items within the current accordion group.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapAccordionItemtopic">BootstrapAccordionItem</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarItem_Templatetopic">Template</helplink> – Specifies a template used for displaying the content of the current item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebNavBarItem_TextTemplatetopic">TextTemplate</helplink> – Specifies a template used for displaying the text content of the current item.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the capabilities of the Accordion control's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordion.members">client events</helplink> and allows you to specify which client-side events you want to track. Interact with the Accordion interface to see the information about all tracked events raised in response to your actions in the event log.</p>
                <p>The <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarItem.name.property">item.name</helplink> and <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarGroup.name.property">group.name</helplink> properties of the event handler's parameter allow you to identify the item for which an event has been raised.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.ItemClick.event">ItemClick</helplink> – Fires when an end-user clicks an accordion item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.HeaderClick.event">HeaderClick</helplink> – Fires when an end-user clicks a group header.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.ExpandedChanging.event">ExpandedChanging</helplink> – Fires before the expansion state of a group is changed. Allows to cancel this operation or force processing the event on the server side.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.ExpandedChanged.event">ExpandedChanged</helplink> – Fires after the expansion state of a group is changed.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
              <p>The Accordion control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
              <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxNavBar.EnableClientSideAPI.property">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxNavBar.ClientInstanceName.property">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxNavBar.ClientSideEvents.property">ClientSideEvents</helplink> property is handled.</p>
              <p>This demo allows you to interactively explore capabilities of the Accordion control's client-side API.</p>
              <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordion.class">BootstrapClientAccordion</helplink> methods:</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.CollapseAll.method">CollapseAll</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.ExpandAll.method">ExpandAll</helplink> – Collapses/expands all groups.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.GetGroup.method">GetGroup</helplink> – Returns the accordion group specified by its index.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.GetSelectedItem.method">GetSelectedItem</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBar.SetSelectedItem.method">SetSelectedItem</helplink> – Gets/sets the selected item.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.SetVisible.method">SetVisible</helplink> – Gets/sets the control’s visibility.</li>
              </ul>
              <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordionItem.class">BootstrapClientAccordionItem</helplink> methods:</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordionItem.GetIconCssClass.method">GetIconCssClass</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordionItem.SetIconCssClass.method">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the accordion item.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarItem.GetText.method">GetText</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarItem.SetText.method">SetText</helplink> – Gets/sets the text displayed by the accordion item.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarItem.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarItem.SetVisible.method">SetVisible</helplink> – Gets/sets the accordion item's visibility.</li>
              </ul>
              
              <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordionGroup.class">BootstrapClientAccordionGroup</helplink> methods:</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientAccordionGroup.GetItem.overloads">GetItem</helplink> – Returns the group's item specified by its index.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarGroup.GetExpanded.method">GetExpanded</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarGroup.SetExpanded.method">SetExpanded</helplink> – Gets/sets the expanded state of the accordion group.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarGroup.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientNavBarGroup.SetVisible.method">SetVisible</helplink> – Gets/sets the group’s visibility.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Menu" Title="Menu" SeoTitle="Bootstrap Menu Demo" >
      <DemoSection Key="DefaultMenu" Title="Default Menu">
        <Description>
          <![CDATA[
                <p>By default, the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapMenu.class">Menu</helplink> control has a tree-like structure with root items aligned horizontally and sub-items available in drop-down menus. Each menu item is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapMenuItemtopic">BootstrapMenuItem</helplink> object and provides access to a collection of its sub-items through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenu_Itemstopic">Items</helplink> collection property. The horizontal Menu re-orients its root items vertically if the display width is insufficient. The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ShowPopOutImagestopic">ShowPopoutImages</helplink> property enables the pop-out images, which indicate whether a menu item has child items.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="VerticalOrientation" Title="Vertical Orientation">
        <Description>
          <![CDATA[
                <p>By default, if the display resolution allows, the Menu arranges its items horizontally. To switch to the vertical orientation, set the Menu control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenu_Orientationtopic">Orientation</helplink> property to <strong>Vertical</strong>. Note that a horizontally oriented menu can still be displayed vertically to fit a low-resolution display.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemAutoWidth" Title="Item AutoWidth">
        <Description>
          <![CDATA[
                <p>To control how root menu item widths are calculated, use the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenu_ItemAutoWidthtopic">ItemAutoWidth</helplink> property. When this property is set to <strong>true</strong>, root items are automatically resized to fit the Menu control's width.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemSelection" Title="Item Selection">
        <Description>
          <![CDATA[
                <p>The Menu control supports selection of root items with a mouse click. To allow item selection, set the Menu control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_AllowSelectItemtopic">AllowSelectItem</helplink> property to <strong>true</strong>. Note that only one item can be selected at a time.</p>
                <p>Handle the client <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> or server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> event to detect a selection change. You can identify the clicked item by the value of its <strong>Name</strong> property.</p>
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapMenu.SelectedItem.property">Menu.SelectedItem</helplink> - gets or sets the selected item</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.SetSelectedItem.method">ClientMenu.SetSelectedNode</helplink> - selects the specified menu item</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.GetSelectedItem.method">ClientMenu.GetSelectedNode</helplink> - returns the selected menu item</li>
                </ul>
                <p>Moreover, the Menu control can automatically select an item for a current page. You can control this behavior using the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxMenuBase.SyncSelectionMode.property">SyncSelectionMode</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemChecking" Title="Item Checking">
        <Description>
          <![CDATA[
                <p>This feature allows you to arrange menu items into logical check groups in which items behave as radio buttons. You can assign a check group to an item by setting the item’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_GroupNametopic">GroupName</helplink> property. Within a logical check group only one item can be selected at a time. The Menu control allows you to define an unlimited number of check groups for both root items and sub-items. Also you can set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_GroupNametopic">GroupName</helplink> to a unique value to force the menu item to change its checked state on every click.</p>
                <p>You can detect a change in an item’s checked state by handling the client <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> or server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> event.</p>
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MenuItem.Checked.property">Item.Checked</helplink> - specifies the item's checked state</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.GetChecked.method">ClientItem.GetChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.SetChecked.method">ClientItem.SetChecked</helplink> - gets/sets the item's checked state on the client-side</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="PopupMenu" Title="Popup Menu">
        <Description>
          <![CDATA[
                <p>The Bootstrap Popup Menu control allows you to provide your web application with the context menu functionality. A popup menu can be associated with a specific control using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPopupMenu_PopupElementCssSelectortopic">PopupElementCssSelector</helplink> property. The menu is invoked automatically when a specific action (a left or right mouse click or mouse hovering) defined by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupMenu_PopupActiontopic">PopupAction</helplink> property is performed within the associated control. To show the Popup Menu control near a specific HTML element on the client side, use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupMenu_ShowAtElementtopic">ShowAtElement</helplink> or <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupMenu_ShowAtElementByIDtopic">ShowAtElementByID</helplink> method.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The Menu control can display supplementary information for any item within a badge. A badge can display text and/or icon. Use the following API to set contents of item badges:</p>              
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenuItem_Badgetopic">BootstrapMenuItem.Badge</helplink> - Gets or sets the item badge on the server.</li>
                </ul>
                <p>The methods listed below allow you to manipulate badges on the client:</p>                
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_GetBadgeTexttopic">BootstrapClientMenuItem.GetBadgeText</helplink> - Gets the text of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_SetBadgeTexttopic">BootstrapClientMenuItem.SetBadgeText</helplink> - Sets the text of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_GetBadgeIconCssClasstopic">BootstrapClientMenuItem.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the item badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_SetBadgeIconCssClasstopic">BootstrapClientMenuItem.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the item badge.</li>
                </ul>
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenuItem_Badgetopic">BootstrapMenuItem.Badge</helplink> property does not affect templated menu items.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostback" Title="Auto Postback">
        <Description>
          <![CDATA[
                <p>The Auto Postback feature allows the Menu control to automatically initiate a postback when an end-user clicks a menu item, which enables you to process the item click on the server side by handling the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenu_ItemClicktopic">ItemClick</helplink> event. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_AutoPostBacktopic">AutoPostBack</helplink> property to <strong>true</strong> to enable this feature.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
                <p>The Menu control supports binding to a data source, which can be any object that implements the <strong>IHierarchicalEnumerable</strong> or <strong>IHierarchicalDataSource</strong> interface (e.g., <strong>SiteMapDataSource</strong>, <strong>XmlDataSource</strong>, etc.). Set the Menu control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxHierarchicalDataWebControl_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to a menu.</p>
                <p>A data-bound Menu control automatically creates a menu item for each data item. A created menu item obtains values for its properties from data item attributes with matching names. You can also explicitly specify mappings between menu item properties and data item attributes using the following properties.</p>

                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenu_IconCssClassFieldtopic">IconCssClassField</helplink> – Specifies the name of a data field providing CSS classes of icons displayed within menu items.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_NameFieldtopic">NameField</helplink> – Specifies the name of a data field providing unique identifiers to menu items.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_NavigateUrlFieldtopic">NavigateUrlField</helplink> - Specifies the name of a data field providing menu item navigation locations.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_TextFieldtopic">TextField</helplink> - Specifies the name of a data field providing menu item display texts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ToolTipFieldtopic">ToolTipField</helplink> - Specifies the name of a data field providing menu item tooltip texts.</li>
                </ul>  
                <p>You can modify settings of each auto-created <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapMenuItem.class">Item</helplink> object during data binding in the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapMenu.ItemDataBound.event">ItemDataBound</helplink> event.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Menu control supports templates allowing you to customize control appearance and layout. A template can be applied to all menu items (using control level templates) or a specific menu item (using item level templates). Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapMenutopic">BootstrapMenu</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ItemTemplatetopic">ItemTemplate</helplink> – Specifies a common template used for displaying the content of all items within the current menu control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_RootItemTemplatetopic">RootItemTemplate</helplink> – Specifies a common template used for displaying the content of root items within the current menu control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ItemTextTemplatetopic">ItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of all items within the current menu control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_RootItemTextTemplatetopic">RootItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of root items within the current menu control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_SubMenuTemplatetopic">SubMenuTemplate</helplink> – Specifies a common template used for displaying the content of all submenus within the current menu control.</li>
                </ul>                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapMenuItemtopic">BootstrapMenuItem</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Templatetopic">Template</helplink> – Specifies a template used for displaying the content of the current item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_TextTemplatetopic">TextTemplate</helplink> – Specifies a template used for displaying the text content of the current item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_SubMenuTemplatetopic">SubMenuTemplate</helplink> – Specifies a template used for displaying the content of the submenu of the current item.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the capabilities of the Menu control's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenu.members">client events</helplink> and allows you to specify which client-side events you want to track. Interact with the Menu interface to see the information about all tracked events raised in response to your actions in the event log.</p>
                <p>The <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.name.property">item.name</helplink> property of the event handler's parameter allows you to identify the item for which an event has been raised.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> – Fires when an end-user clicks a menu item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOver.event">ItemMouseOver</helplink> - Fires when the mouse cursor moves onto a menu item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOut.event">ItemMouseOut</helplink> - Fires when the mouse cursor moves outside a menu item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.PopUp.event">PopUp</helplink> – Fires for a menu item when it displays a drop-down menu.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.CloseUp.event">CloseUp</helplink> - Fires for a menu item when its drop-down menu is closed.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
            <p>The Menu control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
            <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxMenuBase.EnableClientSideAPI.property">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxMenuBase.ClientInstanceName.property">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxMenuBase.ClientSideEvents.property">ClientSideEvents</helplink> property is handled.</p>
            <p>This demo allows you to interactively explore capabilities of the Menu control's client-side API.</p>
            <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenu.members">BootstrapClientMenu</helplink> methods:</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenu.GetItem.overloads">GetItem</helplink> - Returns a menu item specified by its index.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenu.GetSelectedItem.overloads">GetSelectedItem</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenu.SetSelectedItem.overloads">SetSelectedItem</helplink> – Gets/sets the selected item.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.SetVisible.method">SetVisible</helplink> – Gets/sets the control’s visibility.</li>
            </ul>
            <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenuItem.members">BootstrapClientMenuItem</helplink> methods:</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenuItem.GetItem.overloads">GetItem</helplink> – Returns a subitem specified by its index.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.GetEnabled.method">GetEnabled</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.SetEnabled.method">SetEnabled</helplink> – Gets/sets the enabled state of the menu item.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenuItem.GetIconCssClass.method">GetIconCssClass</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientMenuItem.SetIconCssClass.method">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the menu item.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.GetText.method">GetText</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.SetText.method">SetText</helplink> – Gets/sets the text displayed by the menu item.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.SetVisible.method">SetVisible</helplink> – Gets/sets the menu item's visibility.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Pager" Title="Pager" SeoTitle="Bootstrap Pager Demo">
      <DemoSection Key="DefaultPager" Title="Default Pager">
        <Description>
          <![CDATA[
                <p>The <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapPager.class">Pager</helplink> control provides a visual interface for custom paging in your web application.</p>
                <p>By default, the pager displays a summary indicating the current page number out of the total page count, and navigation buttons. The number of simultaneously displayed navigation buttons is controlled by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_NumericButtonCounttopic">NumericButtonCount</helplink> property.</p>
                <p>To implement your custom paging logic, use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_PageIndexChangingtopic">PageIndexChanging</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_PageIndexChangedtopic">PageIndexChanged</helplink> events.</p>
                <p>Note that navigating between pages initiates a postback, which causes reloading the entire web page if the Pager control is not wrapped in an AJAX-enabled container. For demonstration purposes, this demo displays the Pager control within the <strong>asp:UpdatePanel</strong></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="WithPageSizeItem" Title="With PageSize Item">
        <Description>
          <![CDATA[
                <p>The Page Size item provides a visual interface to specify the number of data items to be displayed within a single page. To enable the Page Size item, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPagerButtonProperties_Visibletopic">PageSizeItemSettings.Visible</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="WithFirstAndLastButtons" Title="With First and Last Buttons">
        <Description>
          <![CDATA[
                <p>The First and Last pager buttons allow an end-user to quickly navigate to the first or last page of the paginated content. The visibility of the First and Last buttons is controlled by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPagerButtonProperties_Visibletopic">FirstPageButton.Visible</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPagerButtonProperties_Visibletopic">LastPageButton.Visible</helplink> properties respectively.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="WithoutSummary" Title="Without Summary">
        <Description>
          <![CDATA[
                <p>It is possible to hide the summary from the pager. You can achieve this goal by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPagerButtonProperties_Visibletopic">Summary.Visible</helplink> property to <strong>false</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="WithoutNumericButtons" Title="Without Numeric Buttons">
        <Description>
          <![CDATA[
                <p>You can hide numeric navigation buttons from the pager leaving only the Prev and Next buttons. To achieve this, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_ShowNumericButtonstopic">ShowNumericButtons</helplink> property to <strong>false</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HideDisabledButtons" Title="Hide Disabled Buttons">
        <Description>
          <![CDATA[
                <p>The Pager control can automatically hide currently disabled navigation buttons (e.g., hide the Next and Last buttons when the last page is displayed). To activate this behavior, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_ShowDisabledButtonstopic">ShowDisabledButtons</helplink> property to <strong>false</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="EllipsisMode" Title="Ellipsis Mode">
        <Description>
          <![CDATA[
                <p>The ellipsis mode determines where in the pager the ellipsis symbol is placed to indicate page numbers that are omitted. The Pager control can display the ellipsis symbol inside or outside the range of pages, or never display the ellipsis symbol. To specify the ellipsis mode, assign the required <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPagerEllipsisModeEnumtopic">PagerEllipsisMode</helplink> enumeration value to the Pager control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPagerBase_EllipsisModetopic">EllipsisMode</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Tabs" Title="Tabs" SeoTitle="Bootstrap Tabs Demo" >
      <DemoSection Key="DefaultTabControl" Title="Default Tab Control">
        <Description>
          <![CDATA[
                <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTabControltopic">Tab Control</helplink> provides a visual interface for creating custom tabbed layouts. The Tab Control provides only navigation means and requires manually updating specific content to reflect a selected tab's changes.</p>          
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTabControl.ActiveTab.property">TabControl.ActiveTab</helplink> - specifies the current active tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_TabClicktopic">TabControl.TabClick</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.TabClick.event">ClientTabControl.TabClick</helplink> - Occurs when an end-user clicks a tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabChangedtopic">TabControl.ActiveTabChanged</helplink> - Occurs when an end-user changes an active tab by clicking another tab.</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.ActiveTabChanging.event">ClientTabControl.ActiveTabChanging</helplink> - Occurs before an active tab is changed. Allows to cancel this operation or force processing the event on the server side.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTabBase_Nametopic">BootstrapTab.Name</helplink> – Specifies a tab’s name, which identifies the item in the Tabs collection.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTabBase_Texttopic">BootstrapTab.Text</helplink> - Specifies a tab’s display text.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTab_TabIconCssClasstopic">BootstrapTab.TabIconCssClass</helplink> – Specifies the CSS class of an icon displayed by a tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTab_NavigateUrltopic">BootstrapTab.NavigateUrl</helplink> – Specifies a tab’s navigation location.</li>
                </ul>
                <p>Use the <a href="../Layout/PageControl.aspx">Page Control</a> to associate specific contents with each tab.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="TabAlignment" Title="Tab Alignment">
        <Description>
          <![CDATA[
                <p>Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_TabAligntopic">TabAlign</helplink> property to specify the alignment of tabs within the control. The following modes are supported: <strong>Justify</strong>, <strong>Left</strong>, <strong>Right</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The Tab Control can display supplementary information for any tab within a badge. A badge can display a text, an icon or both. Use the following API to set the contents of item badges:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTab_Badgetopic">BootstrapTab.Badge</helplink> - Gets or sets the tab badge on the server.</li>
                </ul>
                <p>The methods listed below allow you to manipulate badges on the client:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetBadgeTexttopic">BootstrapClientTab.GetBadgeText</helplink> - Gets the text of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetBadgeTexttopic">BootstrapClientTab.SetBadgeText</helplink> - Sets the text of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetBadgeIconCssClasstopic">BootstrapClientTab.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_SetBadgeIconCssClasstopic">BootstrapClientTab.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the tab badge.</li>
                </ul>
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTab_Badgetopic">BootstrapTab.Badge</helplink> property does not affect templated tabs.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostBack" Title="Auto PostBack">
        <Description>
          <![CDATA[
              <p>If the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_AutoPostBacktopic">AutoPostBack</helplink> property is set to <strong>true</strong>, the Tab Control automatically initiates a postback when an end-user performs an action that you can handle on the server side (for example, switches the tab).</p>
              <p>Depending on the action, one of the following events fires on the server in response to a postback:</p>
              <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabChangedtopic">ActiveTabChanged</helplink> – Fires when the active page was changed.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabChangingtopic">ActiveTabChanging</helplink> – Fires when the active page is being changed.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
                <p>This demo illustrates how the Tab Control can be populated with tab information taken from a data source. The Tab Control supports standard data binding - any object that implements the <strong>IHierarchicalEnumerable</strong> or <strong>IHierarchicalDataSource</strong> interface may be used as a data source for this control. In this sample, the Tab Control is bound to the <strong>XmlDataSource</strong> component that obtains data from an xml file. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxHierarchicalDataWebControl_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to a Tab Control.</p>
                <p>A data-bound Tab Control automatically creates a tab for each data item. A created tab obtains values for its properties from data item attributes with matching names. You can also explicitly specify mappings between tab properties and names of data item attributes using the following properties.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabIconCssClassFieldtopic">ActiveTabIconCssClassField</helplink> - Specifies the name of a data field providing CSS classes of icons displayed by the active tab.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_TabIconCssClassFieldtopic">TabIconCssClassField</helplink> - Specifies the name of a data field providing CSS classes of icons displayed by tabs.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_NameFieldtopic">NameField</helplink> - Specifies the name of a data field providing unique identifiers to tabs.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_NavigateUrlFieldtopic">NavigateUrlField</helplink> - Specifies the name of a data field providing tab navigation locations.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_TextFieldtopic">TextField</helplink> - Specifies the name of a data field providing tab display texts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_ToolTipFieldtopic">ToolTipField</helplink> - Specifies the name of a data field providing tab tooltip texts.</li>
                </ul> 
                <p>You can modify settings of each auto-created <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTab.class">Tab</helplink> object during data binding in the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTabControl.TabDataBound.event">TabDataBound</helplink> event.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Tab Control supports templates allowing you to customize control appearance and layout. 
                A template can be applied to all tabs (using control level templates) or a specific tab (using item level templates). 
                Moreover, templates can be specified for tabs in both active and inactive states. Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTabControltopic">BootstrapTabControl</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_TabTemplatetopic">TabTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControl_ActiveTabTemplatetopic">ActiveTabTemplate</helplink> – Specify common templates used for displaying the content of all tabs within the current tab control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_TabTextTemplatetopic">TabTextTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_ActiveTabTextTemplatetopic">ActiveTabTextTemplate</helplink> – Specify common templates used for displaying the text content of all tabs within the current tab control.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTabtopic">BootstrapTab</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTab_TabTemplatetopic">TabTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTab_ActiveTabTemplatetopic">ActiveTabTemplate</helplink> – Specify templates used for displaying the content of the current tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTab_TabTextTemplatetopic">TabTextTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTab_ActiveTabTextTemplatetopic">ActiveTabTextTemplate</helplink> – Specify templates used for displaying the text content of the current tab.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the capabilities of the Tab Control's client events and allows you to specify which client-side events you want to track.</p>
                <p>The <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.name.property">tab.name</helplink> property of the event handler's parameter allows you to identify the tab for which an event has been raised.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_TabClicktopic">TabClick</helplink> – Fires when an end-user clicks a toolbar item.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabChangingtopic">ActiveTagChanging</helplink> – Fires when the active tab is being changed. Allows to cancel this operation or force processing the event on the server side.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabControl_ActiveTabChangedtopic">ActiveTabChanged</helplink> – Fires after the active tab was changed.</li>
                </ul>
                <p>Interact with a Tab control interface below to see the information about all tracked events raised in response to your actions in the event log.</p>        
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
            <p>The Tab Control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
            <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTabControlBase.EnableClientSideAPI.property">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTabControlBase.ClientInstanceName.property">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTabControlBase.ClientSideEvents.property">ClientSideEvents</helplink> property is handled.</p>
            <p>This demo allows you to interactively explore capabilities of the Tab Control's client-side API.</p>
            <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTabControl.members">BootstrapClientTabControl</helplink> methods:</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTabControl.GetTab.overloads">GetTab</helplink> – Returns a tab specified by its index within the Tab Control’s tab collection.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTabControl.GetActiveTab.overloads">GetActiveTab</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTabControl.SetActiveTab.overloads">SetActiveTab</helplink> – Gets/sets the active tab.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.GetActiveTabIndex.method">GetActiveTabIndex</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.SetActiveTabIndex.method">SetActiveTabIndex</helplink> - Gets/sets the active tab index.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.GetVisible.method">GetVisible</helplink> and <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientControlBase.SetVisible.method">SetVisible</helplink> – Gets/sets the control’s visibility.</li>
            </ul>
            <p><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTab.members">BootstrapClientTab</helplink> methods:</p>
            <ul>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.GetEnabled.method">GetEnabled</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.SetEnabled.method">SetEnabled</helplink> – Gets/sets the enabled state of the tab.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.GetText.method">GetText</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.SetText.method">SetText</helplink> – Gets/sets the text displayed by the tab.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTab.GetIconCssClass.method">GetIconCssClass</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTab.SetIconCssClass.method">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the tab.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTab.GetActiveIconCssClass.method">GetActiveIconCssClass</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTab.SetActiveIconCssClass.method">SetActiveIconCssClass</helplink> - Gets/sets the CSS class of the icon displayed by the tab when it is active.</li>
              <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.GetVisible.method">GetVisible</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTab.SetVisible.method">SetVisible</helplink> – Gets/sets the tab's visibility.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Toolbar" Title="Toolbar" SeoTitle="Bootstrap Toolbar Demo" >
      <DemoSection Key="DefaultToolbar" Title="Default Toolbar">
        <Description>
          <![CDATA[
                <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapToolbartopic">Toolbar Control</helplink> allows you to supply your web application with a lightweight adaptive toolbar interface.</p>
                <p>The Toolbar Control is presented as a set of buttons arranged in groups. Toolbar buttons are elements of the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapToolbar.Items.property">Items</helplink> collection. Each button can display an icon, a text or both.</p>                
                <ul>
                    <li>Client <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> and server <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> events - Occur when an end-user clicks a toolbar button.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Nametopic">BootstrapToolbarItem.Name</helplink> – Specifies a button’s name, which identifies the item in the toolbar’s Items collection.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Texttopic">BootstrapToolbarItem.Text</helplink> - Specifies a button’s display text.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_BeginGrouptopic">BootstrapToolbarItem.BeginGroup</helplink> – If set to true, the button becomes the first button in a new button group.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbarItemBase_IconCssClasstopic">BootstrapToolbarItem.IconCssClass</helplink> – Specifies the CSS class of an icon displayed by a toolbar item.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_NavigateUrltopic">BootstrapToolbarItem.NavigateUrl</helplink> – Specifies a button’s navigation location. When this property is specified, the button is rendered as a hyperlink.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DropDown" Title="DropDown Items">
        <Description>
          <![CDATA[
                <p>Each toolbar item can have multiple child items, which are specified as elements of the parent item’s <strong>Items</strong> collection. Note that all root-level toolbar items are <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapToolbarItemtopic">BootstrapToolbarItem</helplink> objects, while items of subsequent hierarchy levels are <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapToolbarMenuItemtopic">BootstrapToolbarMenuItem</helplink> objects.</p>
                <p>A root-level menu item that has child items is rendered as a drop-down button displaying a hierarchical popup menu when clicked.</p> 
                <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbarMenuItem_DropDownModetopic">DropDownMode</helplink> property allows you to specify that an item should be split into two buttons, one of which behaves like a regular button, and the other invokes a popup menu. You can process clicks on these buttons separately.</p>         
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RenderOption" Title="Render Option">
        <Description>
          <![CDATA[
                <p>You can specify contextual styles for the Toolbar control's root-level elements using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbarItemBootstrapSpecificSettings_RenderOptiontopic">Item.SettingsBootstrap.RenderOption</helplink> property. Refer to the <a href="http://getbootstrap.com/docs/3.3/css/#buttons-options">Buttons - Options</a> section of the Bootstrap documentation to learn more about different style options for buttons provided by the Bootstrap framework</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemSelection" Title="Item Selection">
        <Description>
          <![CDATA[
                <p>The Toolbar control supports selecting items with a mouse click. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_AllowSelectItemtopic">AllowSelectItem</helplink> property to true to enable this. Only one item can be selected at a time.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_AllowSelectItemtopic">AllowSelectItem</helplink> – Specifies whether item selection is allowed.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Selectedtopic">BootstrapToolbarItem.Selected</helplink> - Specifies a root-level item's selection status.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Selectedtopic">BootstrapToolbarMenuItem.Selected</helplink> – Specifies a nested menu item's selection status.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_SelectedItemtopic">BootstrapToolbar.SelectedItem</helplink> – Gets or sets the selected item on the server side.</li>
                </ul>
                <p>Handle the client <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> or server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> event to detect a selection change. You can identify the clicked item by the value of its <strong>Name</strong> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ItemChecking" Title="Item Checking">
        <Description>
          <![CDATA[
                <p>The toolbar control allows you to create a Radio Group UI by letting an end-user check toolbar buttons and popup menu items.</p>
                <p>To enable this functionality, arrange toolbar items into groups using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_GroupNametopic">BootstrapToolbarItem.GroupName</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_GroupNametopic">BootstrapToolbarMenuItem.GroupName</helplink> properties. Similarly to radio buttons, only one toolbar item within a group can be checked at a time. Also you can set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_GroupNametopic">GroupName</helplink> to a unique value to force the menu item to change its checked state on every click.</p>
                <p>You can detect a change in an item’s checked state by handling the client <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> or server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> event.</p>
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MenuItem.Checked.property">Item.Checked</helplink> - specifies the item's checked state</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.GetChecked.method">ClientItem.GetChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.SetChecked.method">ClientItem.SetChecked</helplink> - gets/sets the item's checked state on the client-side</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostback" Title="Auto Postback">
        <Description>
          <![CDATA[
                <p>The Auto Postback feature allows the Toolbar control to automatically initiate a postback when an end-user performs an action that you can handle on the server side (for example, clicks a toolbar item). Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_AutoPostBacktopic">AutoPostBack</helplink> property to <strong>true</strong> to enable this feature.</p>
                <p>Depending on the action, one of the following events fires on the server in response to a postback:</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> – Fires when a toolbar item has been clicked.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemCommandtopic">ItemCommand</helplink> - Fires when a control contained within a templated toolbar item raises the <strong>Command</strong> event.</li>
                </ul>
                <p>Note that handling any of these events enables the Auto Postack feature.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
                <p>The Toolbar control supports binding to a data source which can be any object that implements the IHierarchicalEnumerable or <strong>IHierarchicalDataSource</strong> interface (for example, <strong>SiteMapDataSource</strong>, <strong>XmlDataSource</strong>, etc.). Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxHierarchicalDataWebControl_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to a Toolbar control.</p>
                <p>A data-bound Toolbar control automatically creates a toolbar item for each data item. A created item's properties obtain values from data item attributes with matching names. You can also explicitly specify mappings between toolbar item properties and data item attribute names using the following properties:</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenuBase_BeginGroupFieldtopic">BeginGroupField</helplink> – Specifies the name of a data field that provides values defining whether a toolbar item should start a new group.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapMenuBase_IconCssClassFieldtopic">IconCssClassField</helplink> - Specifies the name of a data field providing CSS classes of icons displayed by toolbar items.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_NameFieldtopic">NameField</helplink> - Specifies the name of a data field providing toolbar item names.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_NavigateUrlFieldtopic">NavigateUrlField</helplink> - Specifies the name of a data field providing toolbar item navigation locations.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_TextFieldtopic">TextField</helplink> - Specifies the name of a data field providing toolbar item display texts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ToolTipFieldtopic">ToolTipField</helplink> - Specifies the name of a data field providing toolbar item tooltip texts.</li>
                </ul>
          ]]>
        </Description>
        <SourceFile>~/App_Data/ToolbarItems.xml</SourceFile>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Toolbar control supports templates allowing you to customize control appearance and layout. A template can be applied to all toolbar items (using control level templates) or a specific item (using item level templates). Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapToolbartopic">BootstrapToolbar</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ItemTemplatetopic">ItemTemplate</helplink> – Specifies a common template used for displaying the content of all items within the current toolbar control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_RootItemTemplatetopic">RootItemTemplate</helplink> – Specifies a common template used for displaying the content of root items within the current toolbar control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ItemTextTemplatetopic">ItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of all items within the current toolbar control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_RootItemTextTemplatetopic">RootItemTextTemplate</helplink> – Specifies a common template used for displaying the text content of root items within the current toolbar control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_SubMenuTemplatetopic">SubMenuTemplate</helplink> – Specifies a common template used for displaying the content of all submenus within the current toolbar control.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapToolbarItemtopic">BootstrapToolbarItem</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_Templatetopic">Template</helplink> – Specifies a template used for displaying the content of the current item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMenuItem_TextTemplatetopic">TextTemplate</helplink> – Specifies a template used for displaying the text content of the current item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_SubMenuTemplatetopic">SubMenuTemplate</helplink> – Specifies a template used for displaying the content of the submenu of the current item.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the Toolbar control's client event capabilities and allows you to specify which client-side events you want to track.</p>
                <p>The <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuItem.name.property">item.name</helplink> property of the event handler's parameter allows you to identify the item for which an event has been raised.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemClick.event">ItemClick</helplink> – Fires when an end-user clicks a toolbar item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOver.event">ItemMouseOver</helplink> - Fires when the mouse cursor moves onto a toolbar item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.ItemMouseOut.event">ItemMouseOut</helplink> - Fires when the mouse cursor moves outside a toolbar item.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.PopUp.event">PopUp</helplink> – Fires for a toolbar item when it displays a drop-down menu.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientMenuBase.CloseUp.event">CloseUp</helplink> - Fires for a toolbar item when its drop-down menu is closed.</li>
                </ul>
                <p>Interact with the interface of a Toolbar control below to see the information about all tracked events raised in response to your actions in the event log.</p>        
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
                <p>The Toobar control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
                <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_EnableClientSideAPItopic">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ClientInstanceNametopic">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMenuBase_ClientSideEventstopic">ClientSideEvents</helplink> property is handled.</p>
                <p>This demo allows you to interactively explore capabilities of the Toolbar control's client-side API.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapScriptsBootstrapClientToolbartopic">BootstrapClientToolbar</helplink> methods:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuBase_GetItemtopic">GetItem</helplink> - Returns a toolbar item specified by its index within the item collection.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuBase_GetSelectedItemtopic">GetSelectedItem</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuBase_SetSelectedItemtopic">SetSelectedItem</helplink> – Gets/sets the selected toolbar item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_GetVisibletopic">GetVisible</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_SetVisibletopic">SetVisible</helplink> – Gets/set the toolbar control’s visibility.</li>
                </ul>
                
                <p>BootstrapClientMenuItem methods</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_GetItemtopic">GetItem</helplink> - Returns a subitem specified by its index within an item’s subitem collection.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_GetEnabledtopic">GetEnabled</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_SetEnabledtopic">SetEnabled</helplink> – Gets/sets the enabled state of the toolbar item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_GetIconCssClasstopic">GetIconCssClass</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientMenuItem_SetIconCssClasstopic">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_GetTexttopic">GetText</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_SetTexttopic">SetText</helplink> – Gets/sets the text displayed by the item.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_GetVisibletopic">GetVisible</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientMenuItem_SetVisibletopic">SetVisible</helplink> – Gets/sets the item's visibility.</li>
                </ul>                 

          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="TreeView" Title="TreeView" SeoTitle="Bootstrap TreeView Demo" >
      <DemoSection Key="DefaultTreeView" Title="Default TreeView">
        <Description>
          <![CDATA[
                <p>The <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.class">Tree View</helplink> is a control used to display hierarchical data in tree-like form. Each Tree View node is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTreeViewNodetopic">BootstrapTreeViewNode</helplink> object and provides access to a collection of its sub-nodes through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTreeViewNode_Nodestopic">Nodes</helplink> collection property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NodesSelection" Title="Nodes Selection">
        <Description>
          <![CDATA[
                <p>The Tree View control supports selection of nodes with a mouse click. To allow node selection, set the control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_AllowSelectNodetopic">AllowSelectNodes</helplink> property to <strong>true</strong>. Note that only one node can be selected at a time.</p>
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.SelectedNode.property">TreeView.SelectedNode</helplink> - gets or sets the selected node within the Tree View control</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.SetSelectedNode.method">ClientTreeView.SetSelectedNode</helplink> - selects the specified node</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.GetSelectedNode.method">ClientTreeView.GetSelectedNode</helplink> - returns the selected node</li>
                </ul>
                <p>Handle the client <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.NodeClick.event">ItemClick</helplink> or server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapToolbar_ItemClicktopic">ItemClick</helplink> event to detect a selection change. You can identify the clicked item by the value of its Name property.</p>
                <p>Moreover, the Tree View control can automatically select an item for a current page. You can control this behavior using the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxTreeView.SyncSelectionMode.property">SyncSelectionMode</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadNodesOnCallbacks" Title="Load Nodes on Callbacks">
        <Description>
          <![CDATA[
                <p>The Tree View control can obtain its node from the server as needed using callbacks. When this mode is activated, the contents of collapsed nodes are not present on the client until these nodes are expanded. To specify whether to use the callback technology to transfer node data to from server, use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_EnableCallBackstopic">EnableCallBacks</helplink> property.</p>
                <p><small>Note that in this demo the callback time is intentionally extended so that the loading indicator is visible during callbacks.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HideExpandButtons" Title="Hide Expand Buttons">
        <Description>
          <![CDATA[
                <p>You can control whether to display the Tree View’s <strong>Hide (-)</strong> and <strong>Expand (+)</strong> buttons using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_ShowExpandButtonstopic">ShowExpandButtons</helplink> property.</p>
                <p>Collapsing and expanding actions will remain available for end-users via a mouse double click. To prevent these actions, subscribe to the client-side <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.ExpandedChanging.event">ExpandedChanging</helplink> event and set <strong>e.cancel</strong> to the <strong>true</strong> value in your event handler.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The TreeView can display supplementary information for any node within a badge. A badge can display a text, an icon or both. Use the following API to configure badges on the server side:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTreeViewNode_Badgetopic">BootstrapTreeViewNode.Badge</helplink> - Gets or sets the node badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTreeViewVirtualNode_Badgetopic">BootstrapTreeViewVirtualNode.Badge</helplink> - Gets or sets the virtual node badge.</li>
                </ul>
                <p>The methods listed below allow you to manipulate badges on the client:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_GetBadgeTexttopic">BootstrapClientTreeViewNode.GetBadgeText</helplink> - Gets the text of the node badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_SetBadgeTexttopic">BootstrapClientTreeViewNode.SetBadgeText</helplink> - Sets the text of the node badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_GetBadgeIconCssClasstopic">BootstrapClientTreeViewNode.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the node badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_SetBadgeIconCssClasstopic">BootstrapClientTreeViewNode.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the node badge.</li>
                </ul>
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTreeViewNode_Badgetopic">BootstrapTreeViewNode.Badge</helplink> property does not affect templated nodes.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostBack" Title="Auto PostBack">
        <Description>
          <![CDATA[
                <p>The Auto Postback feature allows the TreeView control to automatically initiate a postback when an end-user clicks or expands/collapses a node. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_AutoPostBacktopic">AutoPostBack</helplink> property to <strong>true</strong> to enable this feature.</p>
                <p>Use the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.NodeClick.event">NodeClick</helplink> event to process the node click on the server side. Also, you can process the expand/collapse actions on the server side via the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.ExpandedChanging.event">ExpandedChanging</helplink> and <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.ExpandedChanged.event">ExpandedChanged</helplink> events.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
                <p>The Tree View control supports binding to a data source, which can be any object that implements the <strong>IHierarchicalEnumerable</strong> or <strong>IHierarchicalDataSource</strong> interface (e.g., <strong>SiteMapDataSource</strong>, <strong>XmlDataSource</strong>, etc.). Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxHierarchicalDataWebControl_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to a Tree View.</p>    
                <p>A data-bound Tree View automatically creates a node for each data item. A created node obtains values for its properties from data item attributes with matching names. You can also explicitly specify mappings between node properties and names of data item attributes using the following properties.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTreeView_IconCssClassFieldtopic">IconCssClassField</helplink> - Specifies the name of a data field providing CSS classes of icons displayed by Tree View nodes.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_NameFieldtopic">NameField</helplink> - Specifies the name of a data field providing unique identifiers to nodes.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_NavigateUrlFieldtopic">NavigateUrlField</helplink> - Specifies the name of a data field providing node navigation locations.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_TextFieldtopic">TextField</helplink> - Specifies the name of a data field providing node display texts.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_ToolTipFieldtopic">ToolTipField</helplink> - Specifies the name of a data field providing node tooltip texts.</li>
                </ul>
                <p>You can modify settings of each auto-created <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeViewNode.class">Node</helplink> object during data binding in the <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapTreeView.NodeDataBound.event">NodeDataBound</helplink> event.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="VirtualMode" Title="Virtual Mode">
        <Description>
          <![CDATA[
                <p>When the Tree View control is functioning in Virtual mode, child nodes are created and initialized only when their parent node is expanded. To activate the Virtual mode, handle the Tree View’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_VirtualModeCreateChildrentopic">VirtualModeCreateChildren</helplink> event, which occurs when expanding a parent node for the first time. In the event handler, programmatically create a list of <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTreeViewVirtualNodetopic">BootstrapTreeViewVirtualNode</helplink> objects representing child nodes for the currently expanded node. For each created node that has no children, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTreeViewVirtualNode_IsLeaftopic">IsLeaf</helplink> property to <strong>true</strong> so that the node does not display the expand button.</p>
                <p><small>Note that in this demo the callback time is intentionally extended so that the loading indicator is visible during callbacks.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Tree View control supports templates allowing you to customize control appearance and layout. You can define templates for a node’s text or the entire node content. A template can be applied to all nodes (using control level templates) or a specific node (using node level templates). Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTreeViewtopic">BootstrapTreeView</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_NodeTemplatetopic">NodeTemplate</helplink> – Specifies a common template used for displaying all nodes' content in the current tree view control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_NodeTextTemplatetopic">NodeTextTemplate</helplink> – Specifies a common template used for displaying all nodes' text content in the current tree view control.</li>
                </ul>
                
                <p>BootstrapTreeViewNode properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTreeViewNode_Templatetopic">Template</helplink> – Specifies a template used for displaying the current node's content.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTreeViewNode_TextTemplatetopic">TextTemplate</helplink> – Specifies a template used for displaying the current node's text content.</li>
                </ul>
           ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the capabilities of the Tree View control's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientTreeView.members">client events</helplink> and allows you to specify which client-side events you want to track. Interact with the Tree View interface to see the information about all tracked events raised in response to your actions in the event log.</p>
                <p>The <helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeViewNode.name.property">node.name</helplink> property of the event handler's parameter allows you to identify the node for which an event has been raised.</p>
                <ul>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.NodeClick.event">NodeClick</helplink> – Fires when an end-user clicks a TreeView node.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.ExpandedChanging.event">ExpandedChanging</helplink> – Fires before the expansion state of a node is changed. Allows to cancel this operation or force processing the event on the server side.</li>
                    <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTreeView.ExpandedChanged.event">ExpandedChanged</helplink> – Fires after the expansion state of a node is changed.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
                <p>The Tree View control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
                <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_EnableClientSideAPItopic">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_ClientInstanceNametopic">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTreeView_ClientSideEventstopic">ClientSideEvents</helplink> property is handled.</p>
                <p>This demo allows you to interactively explore capabilities of the Tree View control's client-side API.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapScriptsBootstrapClientTreeViewtopic">BootstrapClientTreeView</helplink> methods:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeView_CollapseAlltopic">CollapseAll</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeView_ExpandAlltopic">ExpandAll</helplink> – Collapses/expands all nodes.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeView_GetNodetopic">GetNode</helplink> - Returns a node specified by its index.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeView_GetNodeByTexttopic">GetNodeByText</helplink> - Returns a node specified by its text.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeView_GetSelectedNodetopic">GetSelectedNode</helplink> and <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeView_SetSelectedNodetopic">SetSelectedNode</helplink> – Gets/sets the selected node.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_GetVisibletopic">GetVisible</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_SetVisibletopic">SetVisible</helplink> – Gets/sets the control's visibility.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapScriptsBootstrapClientTreeViewNodetopic">BootstrapClientTreeViewNode</helplink> methods:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_GetNodetopic">GetNode</helplink> - Returns a subnode specified by its index.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_GetNodeByTexttopic">GetNodeByText</helplink> - Returns a subnode specified by its text.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_GetExpandedtopic">GetExpanded</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_SetExpandedtopic">SetExpanded</helplink> - Gets/sets the expanded state of the node.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_GetIconCssClasstopic">GetIconCssClass</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTreeViewNode_SetIconCssClasstopic">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the node.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_GetTexttopic">GetText</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_SetTexttopic">SetText</helplink> – Gets/sets the text displayed by the node.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_GetVisibletopic">GetVisible</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTreeViewNode_SetVisibletopic">SetVisible</helplink> – Gets/sets the node's visibility.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <DemoGroup Key="Layout" Title="Layout" SeoTitle="Bootstrap Layout Controls Demo" IconCssClass="icon icon-form" OrderIndex="4" >
    <PreDescription>
      <![CDATA[
        <p>The DevExpress Bootstrap Controls suite ships with a set of layout controls allowing you to build complex adaptive user interfaces.</p>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>The included controls provide the following functionality:</p>
        <ul>
          <li>The Callback Panel is an AJAX-enabled container whose contents can be updated on demand using callbacks.</li>
          <li>The Form Layout is a container control that takes advantage of the Bootstrap grid system to arrange its contents allowing you to create adaptive form layouts.</li>
          <li>The Page Control allows you to present content as a set of tabbed pages.</li>
          <li>The Popup Control is used to display overlapping temporary windows that appear separately from an application's main window, and are typically used to display quick reference information.</li>
          <li>The Modal Control is used to display modal dialog boxes.</li>
        </ul>
      ]]>
    </Description>
    <Demo Key="CallbackPanel" Title="Callback Panel" SeoTitle="Bootstrap Callback Panel Demo">
      <DemoSection Key="DefaultCallbackPanel" Title="Default Callback Panel">
        <Description>
          <![CDATA[
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCallbackPaneltopic">Callback Panel</helplink> control is an AJAX-enabled container that refreshes its contents using callbacks to the server without reloading the entire page. Use the client <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_PerformCallbacktopic">PerformCallback</helplink> method to initiate a callback. Handle the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCallbackPanel_Callbacktopic">Callback</helplink> event to process a callback on the server side.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_PerformCallbacktopic">PerformCallback</helplink> method takes an optional parameter that specifies arbitrary string data to pass to the server. On the server-side, you can access this data through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCallbackPanel_Callbacktopic">Callback</helplink> event's parameter using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCallbackEventArgsBase_Parametertopic">Parameter</helplink> property.</p>
            <p>The client <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_BeginCallbacktopic">BeginCallback</helplink> and <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_EndCallbacktopic">EndCallback</helplink> events allow you to perform any client-side actions just before the callback is initiated and after server-side processing has completed.</p>
            <p><small>Note that in this demo the callback time is intentionally extended so that the loading indicator is visible during callbacks.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CallbackAnimation" Title="Callback Animation">
        <Description>
          <![CDATA[
            <p>When callback animation is enabled, the callback panel contents fade out when the callback is initiated and updated contents fade in when the response is obtained. Set the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapCallbackPanel_EnableCallbackAnimationtopic">EnableCallbackAnimation</helplink> property to <strong>true</strong> to enable animations.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
            <p>This demo illustrates the capabilities of the Callback Panel's client events and allows you to specify which client-side events you want to track.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_BeginCallbacktopic">BeginCallback</helplink> – Fires before a callback is initiated.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_EndCallbacktopic">EndCallback</helplink> – Fires after the server returned a response.</li>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientCallbackPanel_CallbackErrortopic">CallbackError</helplink> – Fires if the server returned an error.</li>
            </ul>
            <p>Click the Update button to initiate a callback to the server. Click the Force Error button for the server to throw an exception while processing a callback.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="FormLayout" Title="Form Layout" SeoTitle="Bootstrap Form Layout Demo">
      <DemoSection Key="DefaultFormLayout" Title="Default Form Layout">
        <Description>
          <![CDATA[
            <p>The <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapFormLayout.class">Form Layout</helplink> control simplifies the manner in which you create edit forms. It allows you to quickly create form layouts of any complexity by combining the order and hierarchy of the control’s layout elements.</p>
            <p>The Form Layout control renders its contents using the Bootstrap grid system markup. In compliance with the grid system functionality, each item within a Form Layout occupies between 1 and 12 virtual columns. The number of virtual columns an item occupies determines how it is sized relative to other items in the current row. This value can be defined separately for four different screen resolution groups – large, medium, small, and extra small. The following Layout Item properties allow you to define how many virtual columns an item occupies in different resolutions:</p>
            <ul>
              <li><strong>ColSpanLg</strong> - Large screens (1200px or wider).</li>
              <li><strong>ColSpanMd</strong> - Medium screens (992px or wider).</li>
              <li><strong>ColSpanSm</strong> - Small screens (768px or wider).</li>
              <li><strong>ColSpanXs</strong> - Extra small screens (less than 768px).</li>
            </ul>
            <p>Note that all layout items are rendered as <strong>.col</strong> elements within a single <strong>.row</strong> container by default. A browser moves an item to the next row if there are not enough virtual columns (with the current screen resolution) within the current virtual row to fit the item. Set the item’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapLayoutItem_BeginRowtopic">BeginRow</helplink> property to <strong>true</strong> to specify if an item should be rendered within a new row.</p>
            <p>Refer to the <a href="http://getbootstrap.com/css/#grid">Bootstrap documentation</a> for more information on the Bootstrap Grid system, and the <helplink href="http://help.devexpress.com/#AspNetBootstrap/CustomDocument118834">Form Layout Rendering</helplink> documentation topic to learn about the Form Layout rendering specifics and how to apply these specifics to construct efficient adaptive layouts.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="VerticalLayout" Title="Vertical Layout">
        <Description>
          <![CDATA[       
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapFormLayout_LayoutTypetopic">LayoutType</helplink> property defines how layout item caption and layout item contents are stacked. In this demo, the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapFormLayout_LayoutTypetopic">LayoutType</helplink> property is set to <strong>Vertical</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="BeginRow" Title="Item Wrapping">
        <Description>
          <![CDATA[
            <p>The Form Layout control uses <a href="http://getbootstrap.com/docs/4.0/layout/grid/">Bootstrap - Grid System</a> classes to render layout items. By default, all items are created as <strong>.col</strong> elements within a single <strong>.row</strong> container. A browser automatically moves an item to the next row if there are not enough virtual columns in a row to fit the item in the current screen resolution. This behavior is known as <a href="http://getbootstrap.com/docs/4.0/layout/grid/#column-wrapping">column wrapping</a> in Bootstrap. If you wish to force an item to be displayed on a new row, set the item’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapLayoutItem_BeginRowtopic">BeginRow</helplink> property to true.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
            <p>The Form Layout control allows you to supply each layout item with a caption and help text providing supplementary information about the displayed editor's purpose.</p>
            <p>A caption can be provided with an additional optional or required mark that indicates whether the field is treated as optional or required when validating the form data.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebLayoutItem_Captiontopic">BootstrapLayoutItem.Caption</helplink> – specifies a layout item’s caption.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebLayoutItem_HelpTexttopic">BootstrapLayoutItem.HelpText</helplink> – specifies a layout item’s help text.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxFormLayout_RequiredMarktopic">RequiredMark</helplink> – specifies the required mark's text.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxFormLayout_OptionalMarktopic">OptionalMark</helplink> – specifies the optional mark's text.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
            <p>You can use the Form Layout control to display and edit items from any data source. In this demo, an object containing edited data is assigned to the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDataWebControlBase_DataSourcetopic">DataSource</helplink> property in the code-behind. Form Layout items are contained in the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapFormLayout_Itemstopic">Items</helplink> collection and are bound to data source fields using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebLayoutItem_FieldNametopic">LayoutItem.FieldName</helplink> property. Each layout item contains a DevExpress data editor that allows editing values of the corresponding field type. If no items are specified explicitly, the Form Layout control automatically generates layout items with suitable editors for each data field.</p>
            <p>When the edit form is submitted to the server, new field values are obtained via the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxFormLayout_GetNestedControlValueByFieldNametopic">GetNestedControlValueByFieldName</helplink> method in the code-behind.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="PageControl" Title="Page Control" SeoTitle="Bootstrap Page Control Demo">
      <DemoSection Key="DefaultPageControl" Title="Default Page Control">
        <Description>
          <![CDATA[
                <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapPageControltopic">Page Control</helplink> displays content as a set of tabbed pages. Each page in the Page Control serves as a separate child control container allowing you to associate specific page content with each displayed tab.</p>
                <ul>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxPageControl.ActiveTabPage.property">TabControl.ActiveTabPage</helplink> - specifies the current visible tab page.</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapPageControl.TabClick.event">TabControl.TabClick</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.TabClick.event">ClientTabControl.TabClick</helplink> - Occurs when an end-user clicks a tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPageControl_TabClicktopic">TabClick</helplink> - Occurs when an end-user clicks a tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPageControl_ActiveTabChangedtopic">ActiveTabChanged</helplink> - Occurs when an end-user changes an active tab by clicking another tab.</li>
                  <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientTabControlBase.ActiveTabChanging.event">ClientTabControl.ActiveTabChanging</helplink> - Occurs before an active tab is changed. Allows to cancel this operation or force processing the event on the server side.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTabBase_Nametopic">BootstrapTabPage.Name</helplink> – Specifies a tab’s name, which identifies the item in the TabPages collection.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebTabBase_Texttopic">BootstrapTabPage.Text</helplink> - Specifies a tab’s display text.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabPage_TabIconCssClasstopic">BootstrapTabPage.TabIconCssClass</helplink> – Specifies the CSS class of an icon displayed by a tab.</li>
                </ul>
                <p>Use the <a href="../Navigation/Tabs.aspx">Tab Control</a> to only display tabs without associated content.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="TabAlignment" Title="Tab Alignment">
        <Description>
          <![CDATA[
                <p>Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_TabAligntopic">TabAlign</helplink> property to specify the alignment of tabs within the control. The following modes are supported: <strong>Justify</strong>, <strong>Left</strong>, <strong>Right</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The Page Control can display supplementary information for any tab within a badge. A badge can display a text, an icon or both. Use the following API to set the contents of item badges:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabPage_Badgetopic">BootstrapTab.Badge</helplink> - Gets or sets the tab badge on the server.</li>
                </ul>
                <p>The methods listed below allow you to manipulate badges on the client:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetBadgeTexttopic">BootstrapClientTab.GetBadgeText</helplink> - Gets the text of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_SetBadgeTexttopic">BootstrapClientTab.SetBadgeText</helplink> - Sets the text of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetBadgeIconCssClasstopic">BootstrapClientTab.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the tab badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_SetBadgeIconCssClasstopic">BootstrapClientTab.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the tab badge.</li>
                </ul>
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTabPage_Badgetopic">BootstrapTab.Badge</helplink> property does not affect templated tabs.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadContentOnCallbacks" Title="Load Content on Callbacks">
        <Description>
          <![CDATA[
                <p>The Page Control exposes the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_EnableCallBackstopic">EnableCallbacks</helplink> property allowing you to specify whether or not to use callbacks to obtain page contents from the server. If the property is set to <strong>true</strong>, only the content of the active page is sent to the client during the first request. The content of every other page is obtained from the server only once - when the page is first activated. The page content is loaded using a callback without refreshing the entire page.</p>
                <p>If the property is set to <strong>false</strong>, the contents of all pages are sent to the client with the first response, and switching the active page never initiates a callback.</p>
                <p><small>Note that in this demo the callback time is intentionally extended so that the loading indicator is visible during callbacks.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostBack" Title="Auto PostBack">
        <Description>
          <![CDATA[   
                <p>If the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_AutoPostBacktopic">AutoPostBack</helplink> property is set to <strong>true</strong>, the Page Control works in a “Server Mode”. In this mode, changing an active page causes a postback to refresh the entire web page. </p>
                
                <ul>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPageControl_ActiveTabChangedtopic">ActiveTabChanged</helplink> – Fires when the active page has been changed.</li>
                    <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPageControl_ActiveTabChangingtopic">ActiveTabChanging</helplink> – Fires when the active page is about to be changed.</li>
                </ul>                
                
                <aside>
                    <p>Note that the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_EnableCallBackstopic">EnableCallbacks</helplink> property is not in effect when the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_AutoPostBacktopic">AutoPostBack</helplink> property is set to <strong>true</strong>.</p>
                </aside>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
                <p>The Page Control supports templates allowing you to customize control appearance and layout. 
                A template can be applied to all tabs (using control level templates) or a specific tab (using item level templates). 
                Moreover, templates can be specified for tabs in both active and inactive states. Use the following properties to specify templates.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapPageControltopic">BootstrapPageControl</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_TabTemplatetopic">TabTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_ActiveTabTemplatetopic">ActiveTabTemplate</helplink> – Specify common templates used for displaying the content of all tabs within the current page control.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_TabTextTemplatetopic">TabTextTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_ActiveTabTextTemplatetopic">ActiveTabTextTemplate</helplink> – Specify common templates used for displaying the text content of all tabs within the current page control.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTabPagetopic">BootstrapTabPage</helplink> properties:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_TabTemplatetopic">TabTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_ActiveTabTemplatetopic">ActiveTabTemplate</helplink> – Specify templates used for displaying the content of the current tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_TabTextTemplatetopic">TabTextTemplate</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPageControl_ActiveTabTextTemplatetopic">ActiveTabTextTemplate</helplink> - Specify templates used for displaying the text content of the current tab.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
                <p>This demo illustrates the capabilities of the Page Control's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientPageControl.members">client events</helplink> and allows you to specify which client-side events you want to track. Interact with the tabbed interface to see the information about all tracked events raised in response to your actions in the event log.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
                <p>The Page Control offers an advanced client-side API allowing you to manipulate the control and its elements.</p>
                <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_EnableClientSideAPItopic">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_ClientInstanceNametopic">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTabControlBase_ClientSideEventstopic">ClientSideEvents</helplink> property is handled.</p>
                <p>This demo allows you to interactively explore capabilities of the Page Control's client-side API.</p>
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapScriptsBootstrapClientPageControltopic">BootstrapClientPageControl</helplink> methods:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientPageControl_GetTabtopic">GetTab</helplink> – Returns a tab specified by its index within the Page Control’s tab collection.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientPageControl_GetActiveTabtopic">GetActiveTab</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientPageControl_SetActiveTabtopic">SetActiveTab</helplink> – Gets/sets the active tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTabControlBase_GetActiveTabIndextopic">GetActiveTabIndex</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTabControlBase_SetActiveTabIndextopic">SetActiveTabIndex</helplink> - Gets/sets the active tab index.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_GetVisibletopic">GetVisible</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientControlBase_SetVisibletopic">SetVisible</helplink> – Gets/sets the control’s visibility.</li>
                </ul>
                
                <p><helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapScriptsBootstrapClientTabtopic">BootstrapClientTab</helplink> methods: </p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_GetEnabledtopic">GetEnabled</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_SetEnabledtopic">SetEnabled</helplink> – Gets/sets the enabled state of the tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_GetTexttopic">GetText</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_SetTexttopic">SetText</helplink> – Gets/sets the text displayed by the tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetIconCssClasstopic">GetIconCssClass</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_SetIconCssClasstopic">SetIconCssClass</helplink> – Gets/sets the CSS class of the icon displayed by the tab.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_GetActiveIconCssClasstopic">GetActiveIconCssClass</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTab_SetActiveIconCssClasstopic">SetActiveIconCssClass</helplink> - Gets/sets the CSS class of the icon displayed by the tab when it is active.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_GetVisibletopic">GetVisible</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTab_SetVisibletopic">SetVisible</helplink> – Gets/sets the tab's visibility.</li>
                </ul>           

          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Popup" Title="Popup" SeoTitle="Bootstrap Popup Dialog Demo" >
      <DemoSection Key="DefaultPopupControl" Title="Default Popup">
        <Description>
          <![CDATA[
                <p>The <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapPopupControl.class">Popup Control</helplink> is used to display overlaping temporary windows that appear separately from an application's main window, and are typically used to display quick reference information. By default, the Popup controls display a header with the <strong>Close</strong> button and the popup body with the specified content. To add content to a popup window, use the <strong>ContentCollection.ContentControl</strong> property in markup or <strong>BootstrapPopupControl.Controls.Add</strong> in code behind.</p>
                <p>The Popup Control's advanced features such as resizing, dragging, and absolute positioning require the content container to have a fixed size. This means the container cannot have a responsive layout (its size is not based on the screen resolution).</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_Showtopic">BootstrapClientPopupControl.Show</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_ShowAtElementtopic">ShowAtElement</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_ShowAtPostopic">ShowAtPos</helplink> methods show the popup window on the client side.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_ShowOnPageLoadtopic">BootstrapPopupControl.ShowOnPageLoad</helplink> - allows you to show or hide the popup window  from the server-side code.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_PopupActiontopic">BootstrapPopupControl.PopupAction</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_CloseActiontopic">BootstrapPopupControl.CloseAction</helplink> - specifies which action forces a popup window to appear or hide.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPopupControl_PopupElementCssSelectortopic">BootstrapPopupControl.PopupElementCssSelector</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientPopupControl_SetPopupElementCssSelectortopic">BootstrapClientPopupControl.SetPopupElementCssSelector</helplink> - associates the Popup Control with another control or an HTML element via a CSS selector on the server/client.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_PopupHorizontalAligntopic">BootstrapPopupControl.PopupHorizontalAlign</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_PopupVerticalAligntopic">BootstrapPopupControl.PopupVerticalAlign</helplink> - specifies the popup window alignment.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HeaderAndFooter" Title="Header and Footer">
        <Description>
          <![CDATA[
                <p>To specify whether or not to display the Popup Control’s header and footer, use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_ShowHeadertopic">ShowHeader</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_ShowFootertopic">ShowFooter</helplink> properties. To specify the header and footer text, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_HeaderTexttopic">HeaderText</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_FooterTexttopic">FooterText</helplink> respectively.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Dragging" Title="Dragging">
        <Description>
          <![CDATA[
                <p>The Popup Control can be dragged within the bounds of the client browser's window. To enable this functionality, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_AllowDraggingtopic">AllowDragging</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Resizing" Title="Resizing">
        <Description>
          <![CDATA[
                <p>The Popup Control supports resizing. To enable this feature, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_AllowResizetopic">AllowResize</helplink> property to <strong>true</strong>. A popup window's size limits can be specified via the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_MinHeighttopic">MinHeight</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_MinWidthtopic">MinWidth</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_MaxHeighttopic">MaxHeight</helplink>, and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_MaxWidthtopic">MaxWidth</helplink> properties.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadContentOnCallbacks" Title="Load Content on Callbacks">
        <Description>
          <![CDATA[
                <p>The Bootstrap Popup Control has the capability to load the content of popup windows on demand. Several content loading modes are available from the following settings of the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_LoadContentViaCallbacktopic">LoadContentViaCallback</helplink> property.</p>

                <ul>
                    <li><strong>None</strong> - The content is always (initially) rendered inside popup windows (the default behavior).</li>
                    <li><strong>OnPageLoad</strong> - The loading of the popup window content starts immediately after the entire page has loaded.</li>
                    <li><strong>OnFirstShow</strong> - The loading of the popup window content starts when a popup window is invoked for the first time. </li>
                </ul>
                <p>Using a postponed load of the popup window content, you can enhance the response time of your web page on its initial load.</p>
                <p>In this demo, a template is used to place an Update Content button within the popup window’s footer. Clicking this button initiates a callback that updates the popup’s content using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_PerformCallbacktopic">PerformCallback</helplink> method. Use the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapPopupControl_Callbacktopic">Callback</helplink> event handler to handle the callback on the server side.</p>
                <p><small>For demonstration purposes, the callback processing time is intentionally extended in this demo.</small></p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ModalMode" Title="Modal Mode">
        <Description>
          <![CDATA[
                <p>In the modal mode, when the popup window is displayed, the Popup Control prohibits interactions with the parent page. To enable the modal mode, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_Modaltopic">Modal</helplink> property to <strong>true</strong>. </p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AdaptiveMode" Title="Adaptive Mode">
        <Description>
          <![CDATA[
            <p>
              The Popup Control supports an adaptive mode, in which the popup window is shown as a modal dialog that automatically rearranges its content to fit the browser window. 
              This dialog is displayed with a modal overlay that covers the host page preventing an end-user from interacting with its content. 
              Scrolling the host page is also disabled.
            </p>
            <p>Note that in adaptive mode, the Popup Control doesn't support resizing, dragging or absolute positioning.</p>
            <p>
              Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_Modetopic">SettingsAdaptivity.Mode</helplink> property to enable the adaptive mode. 
              When this property is set to <strong>On</strong>, the popup window automatically switches to the adaptive mode if the browser window’s width is less than the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_SwitchAtWindowInnerWidthtopic">SettingsAdaptivity.SwitchAtWindowInnerWidth</helplink> property value. 
              When the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_Modetopic">SettingsAdaptivity.Mode</helplink> property is set to <strong>Always</strong>, the popup window is always adaptive.
            </p>
            <p>You can specify an adaptive Popup Control’s vertical and horizontal alignment relative to the page boundaries using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_VerticalAligntopic">SettingsAdaptivity.VerticalAlign</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_HorizontalAligntopic">SettingsAdaptivity.HorizontalAlign</helplink> properties.</p>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_VerticalAligntopic">SettingsAdaptivity.VerticalAlign</helplink> property accepts the following values:</p>
            <ul>
              <li>WindowCenter – The window is centered vertically.</li>
              <li>WindowTop – The window is aligned to the top.</li>
              <li>WindowBottom – The window is aligned to the bottom.</li>
            </ul>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_HorizontalAligntopic">SettingsAdaptivity.HorizontalAlign</helplink> property accepts the following values:</p>
            <ul>
              <li>WindowCenter - The window is centered horizontally.</li>
              <li>WindowLeft - The window is aligned to the left.</li>
              <li>WindowRight - The window is aligned to the right.</li>
            </ul>
            <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_FixedHeadertopic">SettingsAdaptivity.FixedHeader</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebPopupControlAdaptivitySettings_FixedFootertopic">SettingsAdaptivity.FixedFooter</helplink> properties specify whether the corresponding elements should stay fixed while an end-user scrolls an adaptive Popup Control's content.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AnimationTypes" Title="Animation Types">
        <Description>
          <![CDATA[
            <p>The Popup Control can be displayed and closed with one of two available animations: <strong>Fade</strong> and <strong>Slide</strong>. To specify the animation type for these actions, specify the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_PopupAnimationTypetopic">PopupAnimationType</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_CloseAnimationTypetopic">CloseAnimationType</helplink> properties.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
            <p>The Popup Control allows you to customize the contents of the popup window's elements with the corresponding templates:</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_HeaderTemplatetopic">HeaderTemplate</helplink> – Specifies a template used for displaying the contents of the popup control window's header.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_FooterTemplatetopic">FooterTemplate</helplink> – Specifies a template used for displaying the contents of the popup control window's footer.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_HeaderContentTemplatetopic">HeaderContentTemplate</helplink> – Specifies a template used for displaying the text content of the popup control window's header.</li>
              <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_FooterContentTemplatetopic">FooterContentTemplate</helplink> – Specifies a template used for displaying the text content of the popup control window's footer.</li>
            </ul>      
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideEvents" Title="Client-Side Events">
        <Description>
          <![CDATA[
            <p>This demo illustrates the capabilities of the Popup Control's <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientPopupControl.members">client events</helplink> and allows you to specify which client-side events you want to track.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientPopupControlBase.PopUp.event">PopUp</helplink> – Fires when a popup window is invoked.</li>
              <li><helplink href="http://help.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientPopupControlBase.CloseUp.event">CloseUp</helplink> - Fires when a popup window closes or hides. The closeReason property allows you to identify the reason the popup window closes (API, CloseButton, etc.).</li>
            </ul>
            <p>Interact with the Popup Control to see the information about all tracked events raised in response to your actions in the event log.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClientSideAPI" Title="Client-Side Functionality">
        <Description>
          <![CDATA[
                <p>The Popup Control offers an advanced client-side API allowing you to manipulate the control and its elements. </p>
                <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_EnableClientSideAPItopic">EnableClientSideAPI</helplink> property specifies whether or not the client-side API is available. Note that the client-side API is automatically enabled if the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControlBase_ClientInstanceNametopic">ClientInstanceName</helplink> property is specified or any client-side event available through the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxPopupControl_ClientSideEventstopic">ClientSideEvents</helplink> property is handled.</p>
                <p>This demo allows you to interactively explore capabilities of the Popup Control's client-side API.</p>             
                <p></p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_Showtopic">Show</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_ShowAtElementtopic">ShowAtElement</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_ShowAtPostopic">ShowAtPos</helplink> - Show the popup window.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_Hidetopic">Hide</helplink> - Hides the popup window.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientPopupControl_SetPopupElementCssSelectortopic">SetPopupElementCssSelector</helplink> – Sets a CSS selector specifying what HTML elements should invoke the popup window.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControl_GetCurrentPopupElementtopic">GetCurrentPopupElement</helplink> – Returns an object that invoked the popup window.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_GetHeaderTexttopic">GetHeaderText</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_SetHeaderTexttopic">SetHeaderText</helplink> – Gets/sets the text displayed within the popup window's header.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_GetContentHtmltopic">GetContentHtml</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_SetContentHtmltopic">SetContentHtml</helplink> – Gets/sets the contents of the popup window.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_GetFooterTexttopic">GetFooterText</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientPopupControlBase_SetFooterTexttopic">SetFooterText</helplink> – Gets/sets the text displayed within the popup window's footer.</li>               
                </ul>

          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>
    
  <DemoGroup Key="Editors" Title="Editors" SeoTitle="Bootstrap Editors Demo" IconCssClass="icon icon-editors" OrderIndex="5">
    <PreDescription>
      <![CDATA[
        <p>DevExpress Bootstrap Data Editors are a powerful collection of data edit and multi-purpose server controls rendered using Bootstrap CSS classes. These controls can function in bound and unbound modes, both as standalone data editors and within container controls such as the DevExpress Bootstrap Grid View.</p>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>To simplify constructing responsive layouts of any complexity with our data editors, the DevExpress Bootstrap Controls suite provides the Form Layout control.</p>
        <p>Our data editors provide a powerful and seamless built-in mechanism for data validation both on the client and server. The validation mechanism supports multiple ways to define the validation logic and to indicate validation failures.</p>
      ]]>
    </Description>
    <Demo Key="BinaryImage" Title="Binary Image" SeoTitle="Bootstrap Binary Image Demo" >
      <DemoSection Key="DefaultBinaryImage" Title="Default Binary Image">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapBinaryImagetopic">Binary Image</helplink> control is used to display images obtained from a binary stream with the capability to upload images to the server. To specify a display image, assign a byte array containing image data to the control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxBinaryImage_ContentBytestopic">ContentBytes</helplink> property.</p>
              <p>To allow file uploading, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageEditingSettings_Enabledtopic">EditingSettings.Enabled</helplink> property to <strong>true</strong>. After an end-user uploads an image, a byte array containing the new image data is accessible through the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxBinaryImage_ContentBytestopic">ContentBytes</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DragAndDropSupport" Title="Drag and Drop Support">
        <Description>
          <![CDATA[
              <p>The drag-and-drop feature allows an end-user to upload an image file by dragging it onto the Binary Image control’s drop zone. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageEditingSettings_AllowDropOnPreviewtopic">EditingSettings.AllowDropOnPreview</helplink> property to <strong>true</strong> to enable the drag and drop functionality.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ButtonPanelPosition" Title="Button Panel Position">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageButtonPanelSettings_Positiontopic">EditingSettings.ButtonPanelSettings.Position</helplink> property allows you to specify the button panel's position relative to the image.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ButtonPanelVisibility" Title="Button Panel Visibility">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebBinaryImageButtonPanelSettings_Visibilitytopic">EditingSettings.ButtonPanelSettings.Visibility</helplink> property allows you to specify when the button panel is displayed. The following property values are supported:</p>
              <ul>
                <li><strong>Always</strong> – The panel is always displayed.</li>
                <li><strong>Faded</strong> – The panel is always visible. The panel is faded when the mouse pointer is not hovering over the image.</li>
                <li><strong>None</strong> – The panel is never displayed.</li>
                <li><strong>OnMouseOver</strong> – The panel is displayed when the mouse pointer is hovering over the image. On touch devices, the "mouse over" behavior can be simulated by tapping on the image.</li>
              </ul>           
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Button" Title="Button" SeoTitle="Bootstrap Button Demo" >
      <DemoSection Key="DefaultButton" Title="Default Button">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapButtontopic">Bootstrap Button</helplink> control with default settings. The Bootstrap Button control extends the standard button functionality by implementing an enhanced API, which you can use to manipulate the button's properties and respond to button events both in client-side and server-side code. In this demo, the client-side <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.Click.event">Click</helplink> event is handled to display a text message.</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxButton.Text.property">Button.Text</helplink> - specifies the text within the button.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.BootstrapButtonCssClasses.Icon.property">Button.CssClasses.Icon</helplink> - specifies the icon within the button.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.DoClick.method">ClientButton.DoClick</helplink> - simulates the button click.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientButton.GetText.method">ClientButton.GetText</helplink> / <helplink href="https://documentation.devexpress.com/AspNetBootstrap/DevExpress.Web.Bootstrap.Scripts.BootstrapClientButton.SetText.method">ClientButton.SetText</helplink> - get/sets the text displayed within the button.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_Clicktopic">Button.Click</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.Click.event">ClientButton.Click</helplink> - occurs on the client/server side after the button is clicked.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AutoPostBack" Title="AutoPostBack">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_AutoPostBacktopic">AutoPostBack</helplink> property allows you to define whether or not a button automatically initiates a postback to the server when clicked. The AutoPostback mode is activated automatically if the button has the server-side event handlers.</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxButton.Click.event">Click</helplink> - occurs when a button is clicked.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxButton.CheckedChanged.event">CheckedChanged</helplink> - occurs when a button's <a href="#RadioButtons">checked state</a> is changed.</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxButton.PostBackUrl.property">PostBackUrl</helplink> - specifies the URL of the page to post when the button is clicked.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RadioButtons" Title="Checking">
        <Description>
          <![CDATA[
              <p>This example demonstrates how to create a Radio Group UI using button controls. Only one button can be selected at a time.</p>
              <p>You can set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_GroupNametopic">GroupName</helplink> to a unique value to force the button to change its checked state on every click.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_GroupNametopic">GroupName</helplink> - joins multiple buttons into a radio group</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_Checkedtopic">Checked</helplink> - specifies whether the current button is selected within the radio group</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.GetChecked.method">ClientButton.GetChecked</helplink> / <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.SetChecked.method">ClientButton.SetChecked</helplink> - gets/sets the button's checked state</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.Scripts.ASPxClientButton.GetChecked.method">ClientButton.CheckedChanged</helplink> - occurs when the button's checked state is changed</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RenderOption" Title="Render Option">
        <Description>
          <![CDATA[
              <p>This example demonstrates buttons of various styles supported by the Bootstrap Framework.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButtonBootstrapSpecificSettings_RenderOptiontopic">SettingsBootstrap.RenderOption</helplink> - specifies the button style</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badge" Title="Badge">
        <Description>
          <![CDATA[
                <p>The Button can display supplementary information within a badge. A badge can display a text, an icon or both. Use the following API to set a badge:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButton_Badgetopic">BootstrapButton.Badge</helplink> - Gets or sets the button badge on the server.</li>
                </ul>                
                <p>The methods listed below allow you to manipulate the badge on the client:</p>              
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientButton_GetBadgeTexttopic">BootstrapClientButton.GetBadgeText</helplink> - Gets the text of the button badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientButton_SetBadgeTexttopic">BootstrapClientButton.SetBadgeText</helplink> - Sets the text of the button badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientButton_GetBadgeIconCssClasstopic">BootstrapClientButton.GetBadgeIconCssClass</helplink> - Gets the icon CSS class of the button badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientButton_SetBadgeIconCssClasstopic">BootstrapClientButton.SetBadgeIconCssClass</helplink> - Sets the icon CSS class of the button badge.</li>
                </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ButtonEdit" Title="Button Edit" SeoTitle="Bootstrap Button Edit Demo">
      <DemoSection Key="DefaultButtonEdit" Title="Default Button Edit">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapButtonEdittopic">Bootstrap Button Edit</helplink> control with default settings. The Bootstrap Button Edit control displays a text editor with one (by default) or more buttons displayed in its client region.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ButtonsCollection" Title="Buttons Collection">
        <Description>
          <![CDATA[
              <p>In this example, the Bootstrap Button Edit control displays two custom buttons - one on the left and one on the right of the editor. In the markup sample, you can see how these buttons are defined as elements of the  <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButtonEdit_Buttonstopic">Buttons</helplink> collection property.</p>
              <ul>
                <li> <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapButtonEdit_Buttonstopic">Buttons</helplink> - provides access to the collection of custom buttons</li>
                <li> <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapEditButtontopic">BootstrapEditButton</helplink> - the class of each button displayed within the editor</li>
                <li> <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebEditButton_Positiontopic">EditButton.Position</helplink> - specifies the position of a button within the editor</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ClearButton" Title="Clear Button">
        <Description>
          <![CDATA[
              <p>In this example, the Button Edit control displays a clear button, which will delete the current content of the editor when clicked. The clear button can be displayed in one of the following modes.</p>
              <ul>
                <li><strong>Always</strong> – the clear button is always visible as in this example</li>
                <li><strong>Auto</strong> - the clear button is displayed on touch devices only</li>
                <li><strong>Never</strong> - the clear button is not displayed</li>
                <li><strong>OnHover</strong> - the clear button is displayed when an editor is hovered over or focused</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This example illustrates how the  <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButtonEdit_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Mask" Title="Mask">
        <Description>
          <![CDATA[
              <p>In this example, the Button Edit control takes advantage of the masked input feature to only accept values formatted as phone numbers. The mask is specified using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMaskSettings_Masktopic">MaskSettings.Mask</helplink> property.</p>
              <p>Refer to the <a href="https://documentation.devexpress.com/AspNet/5744/ASP-NET-WebForms-Controls/Data-Editors/Common-Concepts/Mask-Editing/Mask-Types">Mask Types</a> topic, for a list of the available mask types.</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MaskSettings.ErrorText.property">MaskSettings.ErrorText</helplink> - specifies the error text to be displayed, if user input is not valid against the specified mask</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MaskSettings.ShowHints.property">MaskSettings.ShowHints</helplink> - MaskSettings.ShowHints - enables a hint that displays when an end-user enters a value into a masked editor (range and enumeration mask types are supported)</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes, when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the following MSDN topics: <a href="http://msdn.microsoft.com/en-us/library/427bttx3.aspx">Numeric Format Strings</a> and <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Button Edit control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Calendar" Title="Calendar" SeoTitle="Bootstrap Calendar Demo">
      <DemoSection Key="DefaultCalendar" Title="Default Calendar">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCalendartopic">Calendar</helplink> control with default settings. The Bootstrap Calendar control allows an end-user to select dates and navigate through months and years.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MultiSelect" Title="Multi Select">
        <Description>
          <![CDATA[
              <p>In this example, the Calendar control allows you to select several dates. Click a date while pressing Ctrl to add an individual date to the selection. You can also use the Shift key to select a range of dates.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCalendar_EnableMultiSelecttopic">EnableMultiSelect</helplink> - specifies whether the multi-select feature is enabled</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MultiMonthView" Title="Multi-Month View">
        <Description>
          <![CDATA[
              <p>This example illustrates the multi-month view feature. The Calendar control below simultaneously displays multiple months, organizing them into several rows and columns.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCalendar_Rowstopic">Rows</helplink> - specifies the number of rows</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCalendar_Columnstopic">Columns</helplink> - specifies the number of columns</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisabledDates" Title="Disabled Dates">
        <Description>
          <![CDATA[
              <p>In this example, some of the dates displayed by the Calendar control are disabled, so they appear grayed out and cannot be selected. The control provides two approaches to disabling dates.</p>
              <ul>
                <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCalendar_DisabledDatestopic">DisabledDates</helplink> collection property allows you to disable specific dates.</li>
                <li>The client-side <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientCalendar_CustomDisabledDatetopic">CustomDisabledDate</helplink> and server-side <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCalendar_CustomDisabledDatetopic">CustomDisabledDate</helplink> events allow you to disable the selection of dates based on custom logic.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>     
    </Demo>
    <Demo Key="CheckBox" Title="CheckBox" SeoTitle="Bootstrap Check Box Demo">
      <DemoSection Key="DefaultCheckBox" Title="Default Check Box">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCheckBoxtopic">Bootstrap Check Box</helplink> control with default settings. The Bootstrap Check Box is a check editor that indicates whether a specific condition is on or off. It is commonly used to introduce Yes/No or True/False selection to an end-user.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="GrayedState" Title="Grayed State">
        <Description>
          <![CDATA[
              <p>The Check Box below allows the third, "Intermediate", state.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCheckBox_AllowGrayedtopic">AllowGrayed</helplink> - specifies whether the Check Box allows three check states</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCheckBox_AllowGrayedByClicktopic">AllowGrayedByClick</helplink> - controls whether end-users are allowed to switch the editor to the indeterminate state or whether this can only be done programmatically</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="CheckBoxList" Title="CheckBoxList" SeoTitle="Bootstrap Check Box List Demo">
      <DemoSection Key="DefaultCheckBoxList" Title="Default Check Box List">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapCheckBoxListtopic">Bootstrap Check Box List</helplink> editor with default settings. The Bootstrap Check Box List editor is a check box group that allows an end-user to select multiple items. Its content can be generated dynamically by binding the editor to a data source. Each item within a Check Box List is represented by a <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapListEditItemtopic">BootstrapListEditItem</helplink> object.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RepeatColumns" Title="Repeat Columns">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCheckListBase_RepeatColumnstopic">RepeatColumns</helplink> property specifies the number of columns displayed within the Check Box List editor.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo> 
    <Demo Key="ComboBox" Title="Combo Box" SeoTitle="Bootstrap Combo Box Demo">
      <DemoSection Key="DefaultComboBox" Title="Default Combo Box">
        <Description>
          <![CDATA[
             <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapComboBoxtopic">Combo Box</helplink> control with default settings. The Combo Box control is a drop-down list editor allowing your end-users to select from a list of values. The items can be loaded from the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_DataSourcetopic">DataSource</helplink> or populated using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapComboBox_Itemstopic">Items</helplink> collection. The control provides enchanced server-side and client-side  API for different scenarios.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Valuetopic">BootstrapListEditItem.Value</helplink> - gets/sets value for a specific item.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Texttopic">BootstrapListEditItem.Text</helplink> - specifies text for an item. The text can be different than value.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListEditItem_IconCssClasstopic">BootstrapListEditItem.IconCssClass</helplink> - specifies a custom icon for an item.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxComboBox_Valuetopic">BootstrapComboBox.Value</helplink>/<helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEditBase_GetValuetopic">BootstrapClientComboBox.GetValue</helplink>/<helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEditBase_SetValuetopic">BootstrapClientComboBox.SetValue</helplink> - gets or sets the editor's value on the server/client.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxComboBox_SelectedIndexChangedtopic">BootstrapComboBox.SelectedIndexChanged</helplink>/<helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientComboBox_SelectedIndexChangedtopic">BootstrapClientComboBox.SelectedIndexChanged</helplink> - raises on the server/client side when selected item is changed.</li>
             </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DropDownStyle" Title="DropDown Style">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxComboBox_DropDownStyletopic">DropDownStyle</helplink> property specifies the manner in which and end-user can change an editor value. When this property is set to <strong>DropDownList</strong>, it is only possible to change the editor's value by selecting an item from the drop-down list.</p>
              <p>In this demo, the DropDownStyle property is set to <strong>DropDown</strong>, so you can change the editor's value by either selecting an item from the drop-down list or entering new values into the edit box without invoking the drop-down list.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
              <p>The Combo Box control’s content can be dynamically generated by binding the editor to a data source. On retrieving items from the data source, item characteristics such as text and value are obtained from specific data fields. These data fields either can be defined manually using the TextField and ValueField properties or the Combo Box control can obtain them automatically provided that data fields in the data source are named the same as corresponding characteristics (“Text”, “Value”).</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="IncrementalFiltering" Title="Incremental Filtering">
        <Description>
          <![CDATA[
              <p>The Combo Box control allows you to dynamically filter list items based on the text typed into the editor’s input box on the client side (“find-as-you-type” filtering). The following modes are available.</p>
              <ul>
                <li><strong>Contains</strong> - The editor is filtered for list items that contain the search string. Search string matches are highlighted.</li>
                <li><strong>StartsWith</strong> - The editor is filtered for list items that begin with the search string. The editor value is autocompleted with the first corresponding value.</li>
                <li><strong>None</strong> - Filtering is not applied to list items.</li>
              </ul>
              <p>To try this feature in action, set the focus to the Combo Box control and start typing.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadItemsOnCallbacks" Title="Load Items on Callbacks">
        <Description>
          <![CDATA[
              <p>In this example, the Combo Box operates in callback mode. In this mode, list items that are not currently displayed within the editor's drop-down window are dynamically loaded when you scroll the list. The callback mode makes the first page load much faster, since only a few items need to be loaded initially.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_EnableCallbackModetopic">EnableCallbackMode</helplink> - specifies whether or not the Combo Box operates in callback mode</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_CallbackPageSizetopic">CallBackPageSize</helplink> - defines the number of items to be obtained from the server each time it's required</li>
              </ul>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This example illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes, when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the following MSDN topics: <a href="http://msdn.microsoft.com/en-us/library/427bttx3.aspx">Numeric Format Strings</a> and <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a>.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Combo Box control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Templates" Title="Templates">
        <Description>
          <![CDATA[
              <p>The Combo Box control allows you to customize layouts of its visual elements using the template technology. In this demo, the Button Template is used to customize the Combo Box control's drop-down button. For the custom button to expand the dropdown list on click, the corresponding action is declaratively assigned to the button using the <strong>data-toggle</strong> attribute.</p>
              <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapComboBoxProperties_TextFormatStringtopic">TextFormatString</helplink> property is specified to provide a custom format for the value displayed by the ComboBox's input. Placeholder indexes in the format string correspond to indexes of the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapComboBoxProperties_Fieldstopic">Fields</helplink> collection's items.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="DateEdit" Title="Date Edit" SeoTitle="Bootstrap Date Edit Demo" >
      <DemoSection Key="DefaultDateEdit" Title="Default Date Edit">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapDateEdittopic">Bootstrap Date Edit</helplink> control with default settings. The Bootstrap Date Edit control is a date editor control that combines the functionality of a single-line text editor, button editor, and drop-down calendar.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="TimeSection" Title="Time Section">
        <Description>
          <![CDATA[
              <p>The Date Edit control allows you to edit date-time values using a time section of drop-down window or directly within an edit box. The time section settings can be accessed through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapDateEdit_TimeSectionPropertiestopic">TimeSectionProperties</helplink> property:</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebDateEditTimeSectionProperties_Visibletopic">TimeSectionProperties.Visible</helplink> - Controls the time section's visibility.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapDateEditTimeSectionProperties_TimeEditPropertiestopic">TimeSectionProperties.TimeEditProperties</helplink> - Provides access to the time edit settings.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebDateEditTimeSectionProperties_ShowOkButtontopic">TimeSectionProperties.ShowOkButton</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebDateEditTimeSectionProperties_ShowCancelButtontopic">TimeSectionProperties.ShowCancelButton</helplink> - specify the time section's <strong>Ok</strong> and <strong>Cancel</strong> buttons visibility.</li>
              </ul>
              <p>The <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxDateEdit.EditFormat.property">EditFormat</helplink> property allows you to specify whether the edit box should display a date, time, or both.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MultiMonthView" Title="Multi-Month View">
        <Description>
          <![CDATA[
              <p>This example illustrates the multi-month view feature. The drop-down calendar of the Date Edit control below simultaneously displays multiple months, organizing them into several rows and columns.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCalendarProperties_Rowstopic">CalendarProperties.Rows</helplink> - specifies the number of rows</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebCalendarProperties_Columnstopic">CalendarProperties.Columns</helplink> - specifies the number of columns</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisabledDates" Title="Disabled Dates">
        <Description>
          <![CDATA[
              <p>In this example, some of the dates displayed by the Date Edit control's drop-down calendar are disabled, so they appear grayed out and cannot be selected. The control provides two approaches to disabling dates.</p>
              <ul>
                <li>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDateEdit_DisabledDatestopic">DisabledDates</helplink> collection property allows you to disable specific dates.</li>
                <li>The client-side <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientDateEdit_CalendarCustomDisabledDatetopic">CalendarCustomDisabledDate</helplink> and server-side <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDateEdit_CalendarCustomDisabledDatetopic">CalendarCustomDisabledDate</helplink> events allow you to disable the selection of dates based on custom logic.</li>
              </ul>
              <p>If a disabled date is typed into the input element, it is considered invalid and is handled by the editor in a way specified by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDateEdit_DateOnErrortopic">DateOnError</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This example illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDateEdit_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Mask" Title="Mask">
        <Description>
          <![CDATA[
              <p>In this example, the Date Edit control takes advantage of the masked input feature to only accept values in a specific date format. To enable masked input within a date editor, the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditorsASPxDateEdit_UseMaskBehaviortopic">UseMaskBehavior</helplink> property should be set to <strong>true</strong>.</p>
              <p>The mask is specified using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxDateEdit_EditFormatStringtopic">EditFormatString</helplink> property when the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.ASPxDateEdit.EditFormat.property">EditFormat</helplink> property is set to <strong>Custom</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the following MSDN topics: <a href="http://msdn.microsoft.com/en-us/library/427bttx3.aspx">Numeric Format Strings</a> and <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a>.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Date Edit control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ListBox" Title="ListBox" SeoTitle="Bootstrap List Box Demo" >
      <DemoSection Key="DefaultListBox" Title="Default List Box">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapListBoxtopic">Bootstrap List Box</helplink> control with default settings. The Bootstrap List Box control displays a list of items that can be selected by end-users. In this demo, it is allowed to select only one item at a time and initial selection is set with the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListEdit_SelectedIndextopic">BootstrapListBox.SelectedIndex</helplink> property. The control can be bound to a <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_DataSourcetopic">DataSource</helplink> or populated using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListBox_Itemstopic">Items</helplink> collection.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Valuetopic">BootstrapListEditItem.Value</helplink> - gets/sets a value for a specific item.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Texttopic">BootstrapListEditItem.Text</helplink> - specifies text for an item. The text can be different than a value.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListEditItem_IconCssClasstopic">BootstrapListEditItem.IconCssClass</helplink> - specifies a custom icon for an item.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Selectedtopic">BootstrapListEditItem.Selected</helplink> - specifies whether an item is selected.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="SelectionViaCheckBoxes" Title="Selection via CheckBoxes">
        <Description>
          <![CDATA[
          <p>When the List Box control’s <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListBox_SelectionModetopic">SelectionMode</helplink> property is set to <strong>CheckColumn</strong>, the List Box displays a column of check boxes indicating the selection status of list items. In this mode, multiple items can be selected within the editor using the mouse click.</p>
          <ul>
            <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListBox_SelectedItemstopic">BootstrapListBox.SelectedItems</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListBox_SelectedIndicestopic">BootstrapListBox.SelectedIndices</helplink> - gets List Box' selected items or indices on the server side.</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_GetSelectedItemstopic">BootstrapClientListBox.GetSelectedItems</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_SelectItemstopic">BootstrapClientListBox.SelectItems</helplink> - manipulates selected items on the client side.</li>
            <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientListBox_GetSelectedIndicestopic">BootstrapClientListBox.GetSelectedIndices</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientListBox_SelectIndicestopic">BootstrapClientListBox.SelectIndices</helplink> - gets/sets selected indices on the client side.</li>
          </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Badges" Title="Badges">
        <Description>
          <![CDATA[
                <p>The ListBox can display supplementary information for any item within a badge. A badge can display a text, an icon or both. Use the following API to configure badges on the server side:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListEditItem_Badgetopic">BootstrapListEditItem.Badge</helplink> - Gets or sets the item badge on the server.</li>
                </ul>                
                <p>The methods listed below allow you to manipulate badges on the client:</p>
                <ul>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_GetItemBadgeTexttopic">BootstrapClientListBox.GetItemBadgeText</helplink> - Gets the text of an item's badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_SetItemBadgeTexttopic">BootstrapClientListBox.SetItemBadgeText</helplink> - Sets the text an item's badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_GetItemBadgeIconCssClasstopic">BootstrapClientListBox.GetItemBadgeIconCssClass</helplink> - Gets the icon CSS class of an item's badge.</li>
                  <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientListBox_SetItemBadgeIconCssClasstopic">BootstrapClientListBox.SetItemBadgeIconCssClass</helplink> - Sets the icon CSS class of an item's badge.</li>
                </ul>                
                <p>Note that the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListEditItem_Badgetopic">BootstrapListEditItem.Badge</helplink> property does not affect templated items.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
              <p>The List Box control’s content can be dynamically generated by binding the editor to a data source. On retrieving items from the data source, item characteristics such as the text and value are obtained from specific data fields. These data fields can be either defined manually using the TextField and ValueField properties or the List Box control can obtain them automatically provided that the data fields in the data source are named the same as corresponding characteristics (“Text”, “Value”).</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadItemsOnCallbacks" Title="Load Items on Callbacks">
        <Description>
          <![CDATA[
              <p>In this example, the List Box operates in callback mode. In this mode, list items that are not currently displayed within the editor are dynamically loaded when you scrolls the list. The callback mode makes the first page load much faster, since only a few items need to be loaded initially.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListBox_EnableCallbackModetopic">EnableCallbackMode</helplink> - specifies whether or not the List Box operates in callback mode</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxListBox_CallbackPageSizetopic">CallBackPageSize</helplink> - defines the number of items to be obtained from the server each time it's required</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Memo" Title="Memo" SeoTitle="Bootstrap Memo Demo">
      <DemoSection Key="DefaultMemo" Title="Default Memo">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapMemotopic">Bootstrap Memo</helplink> control with default settings. The Bootstrap Memo control is a text editor allowing multi-line input.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This demo illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxMemo_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Memo control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ProgressBar" Title="Progress Bar" SeoTitle="Bootstrap Progress Bar Demo">
      <DemoSection Key="DefaultProgressBar" Title="Default Progress Bar">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapProgressBartopic">Bootstrap Progress Bar</helplink> control with default settings. By default, the Progress Bar control displays the status of a process in percent.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Striped" Title="Striped">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapProgressBarBootstrapSpecificSettings_Stripedtopic">SettingsBootstrap.Striped</helplink> property determines whether or not the Progress Bar should display a striped pattern in its filled area.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Animated" Title="Animated">
        <Description>
          <![CDATA[
              <p>The pattern displayed by a striped Progress Bar can be animated. To enable animation, set the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapProgressBarBootstrapSpecificSettings_Animatedtopic">SettingsBootstrap.Animated</helplink> property to <strong>true</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="HidePositionText" Title="Hide Position Text">
        <Description>
          <![CDATA[
              <p>To hide text indicating the current position of the progress bar, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxProgressBar_ShowPositiontopic">ShowPosition</helplink> property to <strong>false</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="RadioButton" Title="Radio Button" SeoTitle="Bootstrap Radio Button Demo">
      <DemoSection Key="DefaultRadioButton" Title="Default Radio Button">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapRadioButtontopic">Bootstrap Radio Button</helplink> control with default settings. The Bootstrap Radio Button editor allows an end-user to perform a single-option selection.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="RadioButtonList" Title="Radio Button List" SeoTitle="Bootstrap Radio Button List Demo">
      <DemoSection Key="DefaultRadioButtonList" Title="Default Radio Button List">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapRadioButtonListtopic">Bootstrap Radio Button List</helplink> control with default settings. The Bootstrap Radio Button List editor is a radio button group that provides end-users with the capability to select a single item at a time.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="RepeatColumns" Title="Repeat Columns">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxCheckListBase_RepeatColumnstopic">RepeatColumns</helplink> property specifies the number of columns displayed within the Radio Button List editor.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="SpinEdit" Title="Spin Editor" SeoTitle="Bootstrap SpinEdit Demo">
      <DemoSection Key="DefaultSpinEdit" Title="Default SpinEdit">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapSpinEdittopic">Bootstrap Spin Edit</helplink> control with default settings. The Bootstrap Spin Edit control provides easy numeric value editing by incrementing and decrementing edit values using spin buttons, a mouse wheel, or keyboard.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MinValueAndMaxValue" Title="MinValue and MaxValue">
        <Description>
          <![CDATA[
              <p>In this example, the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_MinValuetopic">MinValue</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_MaxValuetopic">MaxValue</helplink> properties are used to specify the minimum and maximum values allowed to be entered using the Spin Editor.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LargeIncrement" Title="Large Increment">
        <Description>
          <![CDATA[
              <p>The Spin Edit control allows you to edit numeric values with ease by clicking small or large increment buttons.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinButtons_ShowIncrementButtonstopic">SpinButtons.ShowIncrementButtons</helplink> - controls the visibility of small increment buttons</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebSpinButtons_ShowLargeIncrementButtonstopic">SpinButtons.ShowLargeIncrementButtons</helplink> - controls the visibility of large increment buttons</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_Incrementtopic">Increment</helplink> - specifies the increment with which the editor's value is changed when a small increment button is clicked</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_LargeIncrementtopic">LargeIncrement</helplink> - specifies the increment with which the editor's value is changed when a large increment button is clicked</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebEditButton_Positiontopic">SpinButtons.Position</helplink> - determines the position of increment buttons</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="FloatNumber" Title="Float Number">
        <Description>
          <![CDATA[
              <p>In this example, the Spin Edit control allows editing float numbers.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_NumberTypetopic">NumberType</helplink> - specifies whether a spin editor edits float or integer values</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_DecimalPlacestopic">DecimalPlaces</helplink> - specifies the number of decimal places in float mode</li>
              </ul>
              <p>In float mode, culture-specific separators are supported, allowing decimal separators to be uniquely displayed in various cultures.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This demo illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxSpinEdit_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the following MSDN topics: <a href="http://msdn.microsoft.com/en-us/library/427bttx3.aspx">Numeric Format Strings</a> and <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Spin Edit control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="TagBox" Title="Tag Box" SeoTitle="Bootstrap Tag Box Demo">
      <DemoSection Key="DefaultTagBox" Title="Default Tag Box">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTagBoxtopic">Tag Box</helplink> control provides an interface for selecting multiple unique values (tags) from a predefined list with the autocomplete functionality. End-users can select a value from a drop-down list or by typing in the tag box. The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_Tagstopic">Tags</helplink> property provides access to a collection of strings corresponding to selected values. Note that tags must be unique. A tag can be removed from the selection using either its remove button or the <kbd>backspace</kbd> key.</p>
              <p></p>
              <ul>
                <li>Client <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_TagsChangedtopic">BootstrapClientTagBox.TagsChanged</helplink> and server <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_TagsChangedtopic">BootstrapTagBox.TagsChanged</helplink> events – Fire when the collection of selected values has been changed.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTokenBox_Texttopic">Text</helplink> - Specifies a string containing the editor tag texts divided with a separator.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTokenBox_TextSeparatortopic">TextSeparator</helplink> – Specifies the separator to use in the Text property's value.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTokenBox_Valuetopic">Value</helplink> - Specifies a string containing values corresponding to the editor tags divided with a separator.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTokenBox_ValueSeparatortopic">ValueSeparator</helplink> - Specifies the separator to use in the Value property's value.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Texttopic">BootstrapListEditItem.Text</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebListEditItem_Valuetopic">BootstrapListEditItem.Value</helplink>, <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapListEditItem_IconCssClasstopic">BootstrapListEditItem.IconCssClass</helplink> – specify a predefined item’s text, value and icon correspondingly.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_CssClassestopic">CssClasses</helplink> - Provides access to CSS classes applied to the Tag Box control's visual elements.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxBootstrapSpecificSettings_TagRenderOptiontopic">SettingsBootstrap.TagRenderOption</helplink> – Specifies the Bootstrap label appearance style applied to a tag element.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_GetTagCollectiontopic">BootstrapClientTagBox.GetTagCollection</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_SetTagCollectiontopic">BootstrapClientTagBox.SetTagCollection</helplink> – Get or set the collection of selected tags on the client side.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_AddTagtopic">BootstrapClientTagBox.AddTag</helplink> / <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_RemoveTagtopic">BootstrapClientTagBox.RemoveTag</helplink> – Add or remove a tag to/from selection on the client side.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_AddItemtopic">BootstrapClientTagBox.AddItem</helplink> / <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientComboBox_RemoveItemtopic">BootstrapClientTagBox.RemoveItem</helplink> – Add or remove and item to/from the control's <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_Itemstopic">Items</helplink> collection on the client side.</li>
              </ul>              
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="AllowCustomTags" Title="Custom Tags">
        <Description>
          <![CDATA[
              <p>An end-user can specify a custom tag, which is not specified in the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_Itemstopic">Items</helplink> collection, by typing it into the Tag Box. This behavior can be changed via the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxProperties_AllowCustomTagstopic">AllowCustomTags</helplink> property: when its value is set to <strong>false</strong>, it is only possible to change the editor's value by selecting a tag from the drop-down list.</p>
              <p>The server-side <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_CustomTagsAddedtopic">CustomTagsAdded</helplink> event provides a notification that an end-user specified a custom tag. You can access a collection of specified custom tags through the event’s <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBoxCustomTagsAddedEventArgs_CustomTagstopic">CustomTags</helplink> argument, so you can programmatically add such tags to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_Itemstopic">Items</helplink> collection in the event handler.</p>
              <p>Use the client <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapScriptsBootstrapClientTagBox_IsCustomTagtopic">IsCustomTag</helplink> method to find out whether the specified tag is a custom tag.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Data_Binding" Title="Data Binding">
        <Description>
          <![CDATA[
              <p>Binding the editor to a data source enables the Tag Box control to dynamically generate its content. Set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_DataSourceIDtopic">DataSourceID</helplink> property to assign a data source to a Tag Box control.</p>
              <p>A data-bound Tag Box control automatically creates a list item for each data item. On retrieving items from the data source, list item characteristics such as text, value, and icon are obtained from specific data fields with matching names. You can also explicitly specify mappings between toolbar item properties and data item attribute names using the following properties:</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_ValueFieldtopic">ValueField</helplink> – Specifies the name of a data field providing values to the editor’s items.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_TextFieldtopic">TextField</helplink> - Specifies the name of a data field providing tag texts.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_IconCssClassFieldtopic">IconCssClassField</helplink> - Specifies the name of a data field providing CSS classes of icons displayed within tag elements.</li>
              </ul>
              <p></p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="IncrementalFiltering" Title="Incremental Filtering">
        <Description>
          <![CDATA[
              <p>The Tag Box control allows you to dynamically filter list items based on the text typed into the editor’s input box on the client side (“find-as-you-type” filtering). The following modes are available:</p>
              <ul>
                <li><strong>Contains</strong> - The editor is filtered for list items that contain the search string. Search string matches are highlighted.</li>
                <li><strong>StartsWith</strong> - The editor is filtered for list items that begin with the search string. The editor value is auto-completed with the first corresponding value.</li>
                <li><strong>None</strong> - Filtering is not applied to list items.</li>
              </ul>
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_IncrementalFilteringDelaytopic">IncrementalFilteringDelay</helplink> property allows you to specify the time interval between the moment an end-user starts typing within the editor box, and filtering is applied.</p>
              <p>Use the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_FilterMinLengthtopic">FilterMinLength</helplink> to specify the minimum length of the filter string input required to initiate a filtering operation.</p>
              <p>To try incremental filtering in action, set the focus to the Tag Box control and start typing.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="LoadItemsOnCallbacks" Title="Load Items on Callbacks">
        <Description>
          <![CDATA[
              <p>In this example, the Tag Box operates in callback mode. In this mode, list items that are not currently displayed within the editor's drop-down window are dynamically loaded when you scroll the list. The callback mode makes the first page load much faster, since only a few items need to be loaded initially.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_EnableCallbackModetopic">EnableCallbackMode</helplink> - specifies whether or not the Tag Box operates in callback mode.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_CallbackPageSizetopic">CallBackPageSize</helplink> - defines the number of items to be obtained from the server each time it is required.</li>
              </ul>
              <p>Note that in this demo the callback time is extended intentionally so that the loading indicator is visible during callbacks.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This example illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxAutoCompleteBoxBase_NullTexttopic">NullText</helplink> property can be used to display the prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null, and the editor is not focused. The prompt text disappears when the editor receives focus.</p>
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_NullTextDisplayModetopic">NullTextDisplayMode</helplink> property allows you to specify whether the prompt text should always be displayed, or only when the editor is unfocused.</p>
        ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Tag Box control displays a caption at the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - Specifies the caption text.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - Specifies the help text.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_CaptionSettingstopic">CaptionSettings</helplink> – Provides access to settings related to the editor caption.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_HelpTextSettingstopic">HelpTextSettings</helplink> - Provides access to settings related to the editor help text.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Validation" Title="Validation">
        <Description>
          <![CDATA[
              <p>The Tag Box editor provides a universal mechanism for performing data validation on both the client and server. You can access the validation settings through the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTagBox_ValidationSettingstopic">ValidationSettings</helplink> property.</p>
              <p>Use the following API to define the validation logic:</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebValidationSettings_RequiredFieldtopic">ValidationSettings.RequiredField</helplink> - specifies that the Tag Box editor is a required input field.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebValidationSettings_RegularExpressiontopic">ValidationSettings.RegularExpression</helplink> - specifies a regular expression to check user input in the Tag Box editor.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEdit_Validationtopic">BootstrapTagBox.Validation</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEdit_Validationtopic">BootstrapClientTagBox.Validation</helplink> - allow you to provide custom validation logic to an editor. Within event handlers, you can test the TagBox editor's value and, if it does not meet your requirements, specify the editor as invalid. We recommend performing both client-side and server-side validations for security reasons.</li>
              </ul>
              <p>You can force editor validation using the following approaches:</p>
              <ul>
                <li>Validation on leave - editor value changes causes validation by default. You can disable this behavior by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebValidationSettings_ValidateOnLeavetopic">ValidationSettings.ValidateOnLeave</helplink> property to <strong>false</strong>.</li>
                <li>Validation API methods call - <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEdit_Validatetopic">BootstrapTagBox.Validate</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEdit_ValidateEditorsInContainertopic">BootstrapTagBox.ValidateEditorsInContainer</helplink> on the server side and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEdit_Validatetopic">BootstrapClientTagBox.Validate</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEdit_ValidateEditorsInContainertopic">BootstrapClientTagBox.ValidateEditorsInContainer</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEdit_ValidateEditorsInContainerByIdtopic">BootstrapClientTagBox.ValidateEditorsInContainerById</helplink>, <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEdit_ValidateGrouptopic">BootstrapClientTagBox.ValidateGroup</helplink> on the client side.</li>
                <li>Action on other editors - certain editors like <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapButtontopic">BootstrapButton</helplink> can force validation by default. You can disable this behavior by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxButton_CausesValidationtopic">BootstrapButton.CausesValidation</helplink> property to <strong>false</strong>.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="TextBox" Title="Text Box" SeoTitle="Bootstrap Text Box Demo">
      <DemoSection Key="DefaultTextBox" Title="Default Text Box">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapTextBoxtopic">Bootstrap Text Box</helplink> control with default settings. The Bootstrap Text Box control is a single-line text editor.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This demo illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextBox_NullTexttopic">NullText</helplink> property can be used to display prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is null and the editor is not focused. The prompt text disappears when the editor receives focus. To show the null text even in the focused editor set the <helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.NullTextDisplayMode.enum">NullTextDisplayMode</helplink> property to <strong>UnfocusedAndFocused</strong>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Mask" Title="Mask">
        <Description>
          <![CDATA[
              <p>In this example, the Text Box control takes advantage of the masked input feature to only accept values formatted as phone numbers. The mask is specified using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebMaskSettings_Masktopic">MaskSettings.Mask</helplink> property.</p>
              <p>Refer to the <a href="https://documentation.devexpress.com/AspNet/5744/ASP-NET-WebForms-Controls/Data-Editors/Common-Concepts/Mask-Editing/Mask-Types">Mask Types</a> topic, for a list of the available mask types.</p>
              <ul>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MaskSettings.ErrorText.property">MaskSettings.ErrorText</helplink> - specifies the error text to be displayed, if user input is not valid against the specified mask</li>
                <li><helplink href="https://documentation.devexpress.com/AspNet/DevExpress.Web.MaskSettings.ShowHints.property">MaskSettings.ShowHints</helplink> - MaskSettings.ShowHints - enables a hint that displays when an end-user enters a value into a masked editor (range and enumeration mask types are supported)</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the following MSDN topics: <a href="http://msdn.microsoft.com/en-us/library/427bttx3.aspx">Numeric Format Strings</a> and <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a>.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Text Box control displays a caption on the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - specifies the caption text</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - specifies the help text</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="TimeEdit" Title="Time Edit" SeoTitle="Bootstrap Time Edit Demo">
      <DemoSection Key="DefaultTimeEdit" Title="Default Time Edit">
          <Description>
            <![CDATA[
              <p>The Bootstrap Time Edit control provides the capability to display and edit date-time values. 
              End-users can modify the editor value by clicking spin buttons to increment or decrement different date and time values (months, days, hours, minutes or seconds), 
              or by typing directly into the edit box. You can specify the control’s value using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_DateTimetopic">DateTime</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_Valuetopic">Value</helplink> properties on the server side 
              and the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTimeEdit_SetDatetopic">BootstrapClientTimeEdit.SetDate</helplink> and <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientEditBase_SetValuetopic">BootstrapClientTimeEdit.SetValue</helplink> methods on the client side.</p>
              <ul>
                <li>Client <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebScriptsASPxClientTimeEdit_DateChangedtopic">BootstrapClientTimeEdit.DateChanged</helplink> and server <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_DateChangedtopic">BootstrapTimeEdit.DateChanged</helplink> events - Fire when the editor's date-time value has been changed.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_SpinButtonstopic">SpinButtons</helplink> - Controls the visibility and other settings of editor spin buttons.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_ClearButtontopic">ClearButton</helplink> - Controls the visibility and other settings of editor's clear button.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_Buttonstopic">Buttons</helplink> - Provides access to a collection of editor custom buttons.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_CssClassestopic">CssClasses</helplink> - Provides access to CSS classes applied to the Time Edit control's visual elements.</li>
              </ul>
          ]]>
          </Description>
      </DemoSection>
      <DemoSection Key="EditFormat" Title="Edit Format">
        <Description>
          <![CDATA[
              <p>The Time edit control supports masked value editing. You can specify the predefined masks using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_EditFormattopic">EditFormat</helplink> property, or a custom mask by setting the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_EditFormattopic">EditFormat</helplink> property to <strong>Custom</strong> and assigning the mask string to the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_EditFormatStringtopic">EditFormatString</helplink> property.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DisplayFormat" Title="Display Format">
        <Description>
          <![CDATA[
              <p>The <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_DisplayFormatStringtopic">DisplayFormatString</helplink> property specifies the pattern used to format the value of an editor for display purposes when the editor is not focused. Display values can be formatted using the standard formatting mechanism described in MSDN. For more information about composing format patterns, see the <a href="http://msdn.microsoft.com/en-us/library/97x6twsz.aspx">Date and Time Format Strings</a> MSDN topic.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="NullText" Title="Null Text">
        <Description>
          <![CDATA[
              <p>This example illustrates how the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTimeEdit_NullTexttopic">NullText</helplink> property can be used to display the prompt text (watermark) in the editor's edit box. Specified text is displayed when the value of the editor is <strong>null</strong>, and the editor is not focused. The prompt text disappears when the editor receives focus.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CaptionAndHelpText" Title="Caption and HelpText">
        <Description>
          <![CDATA[
              <p>In this example, the Time Edit control displays a caption at the top and auxiliary help text at the bottom of the editor.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxEditBase_Captiontopic">Caption</helplink> - Specifies the caption text.</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxTextEdit_HelpTexttopic">HelpText</helplink> - Specifies the help text.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_CaptionSettingstopic">CaptionSettings</helplink> – Provides access to settings related to the editor caption.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapTimeEdit_HelpTextSettingstopic">HelpTextSettings</helplink> - Provides access to settings related to the editor help text.</li>
              </ul>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="UploadControl" Title="Upload Control" SeoTitle="Bootstrap Upload Control Demo">
      <DemoSection Key="DefaultUploadControl" Title="Default Upload Control">
        <Description>
          <![CDATA[
              <p>This example demonstrates the <helplink href="http://help.devexpress.com/#AspNetBootstrap/clsDevExpressWebBootstrapBootstrapUploadControltopic">Bootstrap Upload Control</helplink> control with default settings. The Bootstrap Upload Control provides an interface allowing your end-users to upload files to the server using the browser. End-users can select the files they wish to upload to the server by entering the file’s path into a text box, by invoking the standard Open File dialog, or by dragging the file to the control.</p>
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="MultiFileSelection" Title="Multi-File Selection">
        <Description>
          <![CDATA[
              <p>In this example, the Upload Control operates in the multi-file selection mode allowing you to select multiple files in a single file-open dialog. By default, this mode is disabled. To enable it, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadAdvancedModeSettings_EnableMultiSelecttopic">AdvancedModeSettings.EnableMultiSelect</helplink> property to <strong>true</strong>.</p>
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DragAndDrop" Title="Drag and Drop Support">
        <Description>
          <![CDATA[
              <p>This example allows you to drag one or more files to the upload control to add these files to the control file list. By default, the drag and drop functionality is disabled. To enable it, set the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxUploadControl_UploadModetopic">UploadMode</helplink> property to <strong>Advanced</strong> and switch the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadAdvancedModeSettings_EnableDragAndDroptopic">AdvancedModeSettings.EnableDragAndDrop</helplink> property to <strong>true</strong>.</p>
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Amazon" Title="File Upload to Amazon">
        <Description>
          <![CDATA[
              <p>The Upload Control allows you to upload files to the most popular cloud services.</p>
              <p>In this demo, the Upload Control's UploadStorage property is set to Amazon (Amazon Simple Storage Service). To connect the Upload Control to Amazon cloud storage, register an Amazon account in the <strong>global.asax</strong> file using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAccountManager_RegisterAmazontopic">RegisterAmazon</helplink> method and then specify the following settings provided by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxUploadControl_AmazonSettingstopic">AmazonSettings</helplink> property.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadControlAmazonSettings_AccountNametopic">AccountName</helplink> - Specifies the name of an Amazon account</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadControlAmazonSettings_BucketNametopic">BucketName</helplink> - Specifies the name of the current bucket</li>
              </ul>
            ]]>
        </Description>
        <SourceFile>~/Global.asax</SourceFile>
      </DemoSection>
      <DemoSection Key="Azure" Title="File Upload to Azure">
        <Description>
          <![CDATA[
              <p>To connect the Upload Control to Azure cloud storage, register an Azure account in the <strong>global.asax</strong> file using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAccountManager_RegisterAzuretopic">RegisterAzure</helplink> method and then specify the following settings provided by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxUploadControl_AzureSettingstopic">AzureSettings</helplink> property.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadControlAzureSettings_AccountNametopic">AccountName</helplink> - Specifies the name of an Azure account</li>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadControlAzureSettings_ContainerNametopic">ContainerName</helplink> - Specifies the name of the current container (blob storage)</li>
              </ul>
            ]]>
        </Description>
        <SourceFile>~/Global.asax</SourceFile>
      </DemoSection>
      <DemoSection Key="Dropbox" Title="File Upload to Dropbox">
        <Description>
          <![CDATA[
              <p>To connect the Upload Control to Dropbox cloud storage, register a Dropbox account in the <strong>global.asax</strong> file using the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebAccountManager_RegisterDropboxtopic">RegisterDropbox</helplink> method and then specify the following settings provided by the <helplink href="http://help.devexpress.com/#AspNet/DevExpressWebASPxUploadControl_DropboxSettingstopic">DropboxSettings</helplink> property.</p>
              <ul>
                <li><helplink href="http://help.devexpress.com/#AspNet/DevExpressWebUploadControlDropboxSettings_AccountNametopic">AccountName</helplink> - Specifies the name of a Dropbox account</li>
              </ul>
            ]]>
        </Description>
        <SourceFile>~/Global.asax</SourceFile>
      </DemoSection>
    </Demo>   
    <Demo Key="Validation" Title="Validation" SeoTitle="Bootstrap Editors Validation Demo">
      <DemoSection Key="Validation" Title="Validation">
        <Description>
          <![CDATA[
            <p>The DevExpress Bootstrap editors provide a universal mechanism for performing data validation on both the client and server. You can access the validation settings of a data editor through the editor’s <strong>ValidationSettings</strong> property.</p>
            <p>You can provide the required validation logic by declaring that the editor is a required input field, or by specifying a regular expression to check user input.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CustomValidation" Title="Custom Validation">
        <Description>
          <![CDATA[
            <p>The DevExpress Bootstrap editors allow you to provide custom validation logic to an editor. To achieve this goal, handle the editor’s <strong>Validation</strong> event on the server side, client side, or both.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <DemoGroup Key="RangeSelector" Title="Range Selector" SeoTitle="Bootstrap Range Selector Control Demo" IconCssClass="icon icon-range-selector" OrderIndex="6" >
    <PreDescription>
      <![CDATA[
        <p>DevExpress Bootstrap Range Selector is a server-side wrapper for JavaScript-based DevExtreme Range Selector widget that allow you to use the familiar ASP.NET approach to integrate DevExtreme Range Selector into your web application. The Bootstrap Range Selector is a control that allows a user to select a range of values on a scale and handle changes of the currently selected range. You can configure the following settings:</p>
          <ul>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_Charttopic">Chart</helplink> - Sets the options required to display a chart as the range selector's background.</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_SettingsScaletopic">SettingsScale</helplink> - Specifies options of the range selector's scale.</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_SettingsSliderMarkertopic">SettingsSliderMarker</helplink> - Defines the options of the range selector slider markers.</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_SettingsBackgroundtopic">SettingsBackground</helplink> - Allows you to customize the range selector's background: image, fill color, etc.</li>
            <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapGridView_SettingsBehaviortopic">SettingsBehavior</helplink> - Specifies the options for interaction with the end user.</li>
          </ul>
      ]]>
    </PreDescription>
    <Description>
      <![CDATA[
        <p>The Bootstrap Range Selector control helps you transform data to its most appropriate, concise and readable visual representation. This control allows you to conveniently edit the input data for filtering in a data views or charts. Regardless of the data source or manner in which application information is stored on disk, the Bootstrap Range Selector control guarantees flexibility and speed in its consumption of input data as well as its ability to output/render information on the screen or on the printed page.</p>
      ]]>
    </Description>
    <Demo Key="DataBinding" Title="Data Binding" SeoTitle="Bootstrap Range Selector Data Binding Demo">
      <DemoSection Key="DataSourceControl" Title="Data Source Controls">
        <Description>
          <![CDATA[
            <p>The Range Selector control can obtain data from one of ASP.NET data source controls (such as <strong>EntityDataSource</strong>) on the server side. It is the easiest way to provide large amounts of data from the database to the control, and it is the right choice if you do not need to get data from third-party sources.</p>
            <p>For data binding, assign the data source control ID to the <helplink href="">DataSourceID</helplink> property. You can also specify the <helplink href="">DataSource</helplink> property from code behind and call the <helplink href="">DataBind</helplink> method.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="JSON" Title="JSON Files">
        <Description>
          <![CDATA[
            <p>If your server stores data in JSON, performing AJAX requests is inevitable. But instead of configuring these requests manually, assign the URL of your data storage (in this demo, a JSON file) to the <helplink href="">DataSourceUrl</helplink> property, and the Range Selector will do the rest. This URL may specify an absolute or relative path to the resource.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="JSONP" Title="JSONP">
        <Description>
          <![CDATA[
            <p>You can use a JSONP callback parameter supported by <helplink href="http://api.jquery.com/jQuery.ajax/">jQuery.ajax()</helplink> to access a web service that implements a JSONP (JSON with padding) endpoint.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Scale" Title="Scale Types" SeoTitle="Bootstrap Range Selector Scale Demo">
      <DemoSection Key="Numeric" Title="Numeric Scale">
        <Description>
          <![CDATA[
            <p>The Continuous scale type is used by default when the scale displays numeric or date-time values.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="DateTime" Title="Date-Time Scale">
        <Description>
          <![CDATA[
            <p>This demo illustrates the use of a date-time scale. In this example, the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MinRangetopic">SettingsScale.MinRange</helplink> and <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MaxRangetopic">SettingsScale.MaxRange</helplink> properties are set to prevent an end-user from selecting a vacation period shorter than a week and longer than 31 days. To select a specific month, click between the corresponding scale markers.</p>
            <ul>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_TickIntervaltopic">SettingsScale.TickInterval</helplink> - Specifies an interval between ticks.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MinorTickIntervaltopic">SettingsScale.MinorTickInterval</helplink> - Specifies an interval between minor ticks.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MinorTickVisibletopic">SettingsScale.MinorTickVisible</helplink> - Indicates whether or not minor ticks are visible.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_RangeIntervalUnittopic">SettingsScale.RangeIntervalUnit</helplink> – Specifies the minimum time unit that can be included into the selected range.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_TickIntervalUnittopic">SettingsScale.TickIntervalUnit</helplink> – Specifies the time unit used to measure the time interval indicated by one tick.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MinorTickIntervalUnittopic">SettingsScale.MinorTickIntervalUnit</helplink> - Specifies the time unit used to measure the time interval indicated by one minor tick.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Logarithmic" Title="Logarithmic Scale">
        <Description>
          <![CDATA[
            <p>In this demo, a logarithmic scale is used to display a range of rapidly growing values. Each scale tick represents a number (logarithm base) raised to a power. You can specify the logarithm base using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_LogarithmBasetopic">SettingsScale.LogarithmBase</helplink> option.</p>
            <ul>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScale_MinorTickCounttopic">SettingsScale.MinorTickCount</helplink> - Specifies the number of minor ticks between neighboring major ticks.</li>
                <li>S<helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorScaleLabel_Formattopic">ettingsScale.Label.Format</helplink> - Specifies the scale label text format.</li>
                <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorSliderMarker_Formattopic">SettingsSliderMarker.Format</helplink> - Specifies the slider marker text format.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Discrete" Title="Discrete Scale">
        <Description>
          <![CDATA[
            <p>The Discrete scale type is used to select a range within a set of categories defined by string values.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Semidiscrete" Title="Semidiscrete Scale">
        <Description>
          <![CDATA[
            <p>The Semidiscrete scale type provides the discrete representation of continuous data. This scale type requires the SettingsScale.MinRange property to be set.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="Customization" Title="Customization" SeoTitle="Bootstrap Range Selector Customization Demo">
      <DemoSection Key="Image" Title="Background Image">
        <Description>
          <![CDATA[
            <p>The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_SettingsBackgroundtopic">SettingsBackground</helplink> property provides access to options related to the range selector's background.</p>
            <ul>
              <li><helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorBackgroundSettings_ImageUrltopic">SettingsBackground.ImageUrl</helplink> – Specifies the URL of an image to display on the background.</li>
            </ul>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Formatting" Title="Text Formatting">
        <Description>
          <![CDATA[
            <p>This demo illustrates how you can apply custom text formatting to various elements of the Range Selector control.</p>
            <p>In this demo, the format of the text displayed by the slider marker is customized using a client callback function assigned to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorSliderMarker_OnClientCustomizeTexttopic">SettingsSliderMarker.OnClientCustomizeText</helplink> property.</p>
            <p>In the same way, custom formatting is applied to scale labels. Additionally, the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetFormat_Precisiontopic">SettingsScale.Label.Format.Precision</helplink> property is used to specify the precision of the displayed values.</p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="CustomizedChart" Title="Background Chart">
        <Description>
          <![CDATA[
            <p>The Range Selector control can display a data-bound chart on top of the background. You can configure the displayed chart using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_Charttopic">Chart</helplink> property. To show the chart without a background, set the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorBackgroundSettings_Visibletopic">SettingsBackground.Visible</helplink> property to <strong>false</strong>.<p>
          ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ChartSeriesTemplate" Title="Chart Series Template">
        <Description>
          <![CDATA[
            <p>This demo illustrates the capability of the Range Selector to display the Chart with series customized using a series template. The <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapChartSeriesTemplateSettings_OnClientCustomizeSeriestopic">Chart.SettingsSeriesTemplate.OnClientCustomizeSeries</helplink> property specifies a callback function that returns a series object with individual series settings.</p>
          ]]>
        </Description>
      </DemoSection>
    </Demo>
    <Demo Key="ClientSideEvents" Title="Client-Side Events" SeoTitle="Bootstrap Range Selector Client-Side Events Demo">
      <DemoSection Key="ControlStateRange" Title="Control State">
        <Description>
          <![CDATA[
            <p>This demo illustrates the usage of client-side events provided by the Range Selector control.</p>
            <p>Handle the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Disposingtopic">Disposing</helplink> event to perform a custom action when the widget is being removed.</p>
            <p>The <helplink href="">Drawn</helplink> event fires when the control has finished drawing itself.</p>
            <p>When an error or warning appears, the widget notifies you by passing a message to the browser console. This message contains the ID of the incident, a brief description, and a link to the <a href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/Errors_and_Warnings/">Errors and Warnings</a> document where further information about this incident can be found. However, you can handle errors and warnings the way you require. To do this, implement a client-side function performing the required actions and assign it to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_IncidentOccurredtopic">IncidentOccurred</helplink> event. Within this function, you have access to the information about an occurred incident. This information can be accessed from the <strong>Target</strong> field of the object passed to the callback function as a parameter. This information includes the following.<p>
            <ul>
              <li><strong>id</strong> - Contains the ID of an incident. The full list of IDs can be found in the <a href="https://js.devexpress.com/Documentation/ApiReference/Data_Visualization_Widgets/Errors_and_Warnings/">Errors and Warnings</a> document.</li>
              <li><strong>type</strong> - Contains the type of an incident. This field equals <em>'error'</em> for errors or <em>'warning'</em> for warnings.</li>
              <li><strong>args</strong> - Contains the argument of an incident's message. The content of this field varies greatly, depending on the incident. For example, it may contain the name of a data source field that has not been specified correctly, or the name of an option that has not been set properly.</li>
              <li><strong>text</strong> - Contains text passed to the browser console. This text includes the content of the <strong>args</strong> field if there is any.</li>
              <li><strong>widget</strong> - Contains the name of a widget that produced the error or warning.</li>
              <li><strong>version</strong> - Contains the currently used version of the ChartJS library.</li>
            </ul>
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="Exporting" Title="Exporting">
        <Description>
          <![CDATA[
            <p>To perform a custom action before Range Selector data is exported, assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Exportingtopic">Exporting</helplink> event. For example, you can cancel exporting using the <strong>Cancel</strong> field of the event parameter object.</p>
            <p>Assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_Exportedtopic">Exported</helplink> event if you need to perform a custom action after Range Selector data is exported. For example, this function can notify the user that the exporting has completed.</p>
            <p>To perform a custom action before a file with exported data is saved on the user's local storage, assign a client-side function to the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapUIWidgetClientSideEventsBase_FileSavingtopic">FileSaving</helplink> event. Using the <strong>Cancel</strong> field of the event parameter object, you can cancel file saving.</p>
            ]]>
        </Description>
      </DemoSection>
      <DemoSection Key="ValueChanged" Title="Value Changed">
        <Description>
          <![CDATA[
              <p>The Range Selector control allows you to handle changes of the currently selected value range using the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_ValueChangedtopic">ValueChanged</helplink> client event.</p>
              <p>Use the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelectorBehaviorSettings_CallValueChangedtopic">SettingsBehavior.CallValueChanged</helplink> property to specify whether the <helplink href="http://help.devexpress.com/#AspNetBootstrap/DevExpressWebBootstrapBootstrapRangeSelector_ValueChangedtopic">ValueChanged</helplink> event should fire when a user moves a slider or after he/she has stopped moving it.</p>
            ]]>
        </Description>
      </DemoSection>
    </Demo>
  </DemoGroup>

  <Search>
    <Synonyms>
      <Group>datasource, databinding, binding, database, databind</Group>
      <Group>grid, gridview, gridviewcontrol, aspxgridview</Group>
      <Group>eXpress, Persistent, xpo</Group>
    </Synonyms>
    <Exclusions>
      <Words>devexpress, dx, asp, devex, asp.net, demo, demos, web</Words>
      <Prefixes>aspx, asp, xtra, client, dx, web</Prefixes>
      <Postfixes>s, ing, control, e, ies</Postfixes>
    </Exclusions>
  </Search>
</Demos>